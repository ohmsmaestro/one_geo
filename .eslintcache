[{"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/index.js":"1","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/reportWebVitals.js":"2","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/router.js":"3","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/serviceWorkerRegistration.js":"4","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/authentication.js":"5","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/parcels.js":"6","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/auxillary.js":"7","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/archived.js":"8","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/app.js":"9","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/entries.js":"10","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/users.js":"11","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Archived/index.js":"12","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/SignUp/index.js":"13","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/ForgotPassword/index.js":"14","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/app.js":"15","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Entries/index.js":"16","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/UserManagement/index.js":"17","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/View/index.js":"18","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/RoleManagement/index.js":"19","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/index.js":"20","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/TDP/index.js":"21","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/RoleManagement/CreateRole/index.js":"22","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Login/index.js":"23","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Applications/index.js":"24","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Applications/Review/index.js":"25","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/services/archived.js":"26","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/services/auxillary.js":"27","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/ResetPassword/index.js":"28","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/services/parcels.js":"29","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/services/authentication.js":"30","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/services/entries.js":"31","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Alert.components.js":"32","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/utils/constant.js":"33","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/services/users.js":"34","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/SignUp/SignUp.js":"35","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Loader.components.js":"36","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/ForgotPassword/ForgotPassword.js":"37","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Entries/Entries.js":"38","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/UserManagement/UserManagement.js":"39","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/Parcels.js":"40","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Boxed.components.js":"41","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/utils/theme.js":"42","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/View/View.js":"43","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/RoleManagement/RoleManagement.js":"44","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/TDP/TDP.js":"45","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/RoleManagement/CreateRole/CreateRole.js":"46","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/utils/request.js":"47","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/utils/config.js":"48","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/ResetPassword/ResetPassword.js":"49","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Applications/Review/Review.js":"50","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Login/Login.js":"51","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Applications/Applications.js":"52","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Archived/Archived.js":"53","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/headerLayout/index.js":"54","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/bodyLayout/index.js":"55","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Text.components.js":"56","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Grid.components.js":"57","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Button.components.js":"58","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Input.components.js":"59","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/EmptyState.components.js":"60","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Table.components.js":"61","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/style.js":"62","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/utils/utils.js":"63","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/SignUp/Step1/index.js":"64","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/SignUp/Step2/index.js":"65","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/UserManagement/CreateModal/index.js":"66","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/Rent/index.js":"67","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/Appraisal/index.js":"68","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Common/FilterWrapper/index.js":"69","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/bodyLayout/bodyLayout.js":"70","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/headerLayout/menu.js":"71","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/headerLayout/headerlayout.js":"72","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/File.components.js":"73","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Avatar.components.js":"74","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/Rent/Rent.js":"75","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/UserManagement/CreateModal/CreateModal.js":"76","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/Appraisal/Appraisal.js":"77","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/SignUp/Step1/Step1.js":"78","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/SignUp/Step2/Step2.js":"79","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Common/FilterWrapper/Wrapper.js":"80","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/sideBar/index.js":"81","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Modal.components.js":"82","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/sideBar/usersMenu.js":"83","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/sideBar/adminMenu.js":"84","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/sideBar/sideBar.js":"85","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Rectification/index.js":"86","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Rectification/Rectification.js":"87","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Encumbrance/index.js":"88","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Encumbrance/Encumbrance.js":"89","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/EncumbranceModal/index.js":"90","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/EncumbranceModal/EncumbranceModal.js":"91","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Badge.components.js":"92","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Encumbrance/TerminateModal/index.js":"93","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Encumbrance/TerminateModal/TerminateModal.js":"94","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/ParcelDetail/index.js":"95","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/ParcelDetail/ParcelDetail.js":"96","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/RectificationModal/index.js":"97","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/RectificationModal/RectificationModal.js":"98","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Rectification/DetailModal/index.js":"99","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Rectification/DetailModal/DetailModal.js":"100","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Reader.component.js":"101","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Encumbrance/DetailModal/index.js":"102","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Encumbrance/DetailModal/DetailModal.js":"103","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Survey/index.js":"104","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Survey/Survey.js":"105","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Applications/CreateApplication/index.js":"106","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Applications/CreateApplication/CreateApplication.js":"107"},{"size":1688,"mtime":1634832093131,"results":"108","hashOfConfig":"109"},{"size":364,"mtime":1624543784622,"results":"110","hashOfConfig":"109"},{"size":6111,"mtime":1641667786151,"results":"111","hashOfConfig":"109"},{"size":5064,"mtime":1624543784634,"results":"112","hashOfConfig":"109"},{"size":3294,"mtime":1641410474003,"results":"113","hashOfConfig":"109"},{"size":3989,"mtime":1641413321254,"results":"114","hashOfConfig":"109"},{"size":1191,"mtime":1641685034003,"results":"115","hashOfConfig":"109"},{"size":893,"mtime":1634831084387,"results":"116","hashOfConfig":"109"},{"size":457,"mtime":1627064026175,"results":"117","hashOfConfig":"109"},{"size":5828,"mtime":1639075945343,"results":"118","hashOfConfig":"109"},{"size":3702,"mtime":1638379512354,"results":"119","hashOfConfig":"109"},{"size":2186,"mtime":1634834167734,"results":"120","hashOfConfig":"109"},{"size":621,"mtime":1633769970050,"results":"121","hashOfConfig":"109"},{"size":643,"mtime":1633695118936,"results":"122","hashOfConfig":"109"},{"size":1548,"mtime":1633774278531,"results":"123","hashOfConfig":"109"},{"size":1723,"mtime":1635606266348,"results":"124","hashOfConfig":"109"},{"size":1150,"mtime":1641411559361,"results":"125","hashOfConfig":"109"},{"size":542,"mtime":1635631372744,"results":"126","hashOfConfig":"109"},{"size":1694,"mtime":1641412425280,"results":"127","hashOfConfig":"109"},{"size":2027,"mtime":1639998903764,"results":"128","hashOfConfig":"109"},{"size":587,"mtime":1636200767405,"results":"129","hashOfConfig":"109"},{"size":1288,"mtime":1636800398649,"results":"130","hashOfConfig":"109"},{"size":677,"mtime":1633606873026,"results":"131","hashOfConfig":"109"},{"size":2539,"mtime":1635600200903,"results":"132","hashOfConfig":"109"},{"size":1629,"mtime":1635601220296,"results":"133","hashOfConfig":"109"},{"size":247,"mtime":1634831037520,"results":"134","hashOfConfig":"109"},{"size":456,"mtime":1641668757324,"results":"135","hashOfConfig":"109"},{"size":823,"mtime":1633747929507,"results":"136","hashOfConfig":"109"},{"size":881,"mtime":1641413253066,"results":"137","hashOfConfig":"109"},{"size":825,"mtime":1635690633653,"results":"138","hashOfConfig":"109"},{"size":1744,"mtime":1639075208070,"results":"139","hashOfConfig":"109"},{"size":1408,"mtime":1624543784604,"results":"140","hashOfConfig":"109"},{"size":7278,"mtime":1639996412385,"results":"141","hashOfConfig":"109"},{"size":977,"mtime":1638378337967,"results":"142","hashOfConfig":"109"},{"size":2015,"mtime":1639079060399,"results":"143","hashOfConfig":"109"},{"size":3004,"mtime":1632998803035,"results":"144","hashOfConfig":"109"},{"size":3156,"mtime":1633770742188,"results":"145","hashOfConfig":"109"},{"size":6221,"mtime":1641684373440,"results":"146","hashOfConfig":"109"},{"size":5877,"mtime":1641412333523,"results":"147","hashOfConfig":"109"},{"size":7533,"mtime":1641684169116,"results":"148","hashOfConfig":"109"},{"size":3018,"mtime":1625564592498,"results":"149","hashOfConfig":"109"},{"size":1938,"mtime":1634230243445,"results":"150","hashOfConfig":"109"},{"size":326,"mtime":1641565074057,"results":"151","hashOfConfig":"109"},{"size":5633,"mtime":1641668413867,"results":"152","hashOfConfig":"109"},{"size":2872,"mtime":1641565150679,"results":"153","hashOfConfig":"109"},{"size":6372,"mtime":1638376578359,"results":"154","hashOfConfig":"109"},{"size":2208,"mtime":1639648757919,"results":"155","hashOfConfig":"109"},{"size":845,"mtime":1641565344843,"results":"156","hashOfConfig":"109"},{"size":5323,"mtime":1634380229300,"results":"157","hashOfConfig":"109"},{"size":5793,"mtime":1635601608176,"results":"158","hashOfConfig":"109"},{"size":4616,"mtime":1636061247352,"results":"159","hashOfConfig":"109"},{"size":7753,"mtime":1641688571475,"results":"160","hashOfConfig":"109"},{"size":6614,"mtime":1634849132239,"results":"161","hashOfConfig":"109"},{"size":1194,"mtime":1628462547747,"results":"162","hashOfConfig":"109"},{"size":718,"mtime":1624796381999,"results":"163","hashOfConfig":"109"},{"size":1271,"mtime":1627030723925,"results":"164","hashOfConfig":"109"},{"size":1655,"mtime":1624543784611,"results":"165","hashOfConfig":"109"},{"size":6469,"mtime":1633606872559,"results":"166","hashOfConfig":"109"},{"size":13489,"mtime":1636637563890,"results":"167","hashOfConfig":"109"},{"size":794,"mtime":1634383461285,"results":"168","hashOfConfig":"109"},{"size":6817,"mtime":1633975300239,"results":"169","hashOfConfig":"109"},{"size":5989,"mtime":1637692564772,"results":"170","hashOfConfig":"109"},{"size":6559,"mtime":1641410367723,"results":"171","hashOfConfig":"109"},{"size":959,"mtime":1640947302468,"results":"172","hashOfConfig":"109"},{"size":897,"mtime":1633769511630,"results":"173","hashOfConfig":"109"},{"size":1025,"mtime":1638378515529,"results":"174","hashOfConfig":"109"},{"size":864,"mtime":1633975956330,"results":"175","hashOfConfig":"109"},{"size":1090,"mtime":1641471118424,"results":"176","hashOfConfig":"109"},{"size":502,"mtime":1632753794463,"results":"177","hashOfConfig":"109"},{"size":2614,"mtime":1636287706872,"results":"178","hashOfConfig":"109"},{"size":1034,"mtime":1624794132901,"results":"179","hashOfConfig":"109"},{"size":6561,"mtime":1632998803046,"results":"180","hashOfConfig":"109"},{"size":793,"mtime":1641688421364,"results":"181","hashOfConfig":"109"},{"size":1075,"mtime":1635598583891,"results":"182","hashOfConfig":"109"},{"size":3829,"mtime":1633992784513,"results":"183","hashOfConfig":"109"},{"size":7376,"mtime":1638379206495,"results":"184","hashOfConfig":"109"},{"size":8624,"mtime":1641566121692,"results":"185","hashOfConfig":"109"},{"size":12552,"mtime":1641409143429,"results":"186","hashOfConfig":"109"},{"size":4848,"mtime":1641407369809,"results":"187","hashOfConfig":"109"},{"size":3645,"mtime":1632754239705,"results":"188","hashOfConfig":"109"},{"size":1450,"mtime":1641410106205,"results":"189","hashOfConfig":"109"},{"size":2113,"mtime":1627063062228,"results":"190","hashOfConfig":"109"},{"size":2001,"mtime":1641688583890,"results":"191","hashOfConfig":"109"},{"size":1354,"mtime":1632998803061,"results":"192","hashOfConfig":"109"},{"size":6757,"mtime":1639998610340,"results":"193","hashOfConfig":"109"},{"size":1984,"mtime":1639047309827,"results":"194","hashOfConfig":"109"},{"size":5300,"mtime":1639053017028,"results":"195","hashOfConfig":"109"},{"size":1295,"mtime":1639075477808,"results":"196","hashOfConfig":"109"},{"size":5823,"mtime":1639082695559,"results":"197","hashOfConfig":"109"},{"size":976,"mtime":1637670574999,"results":"198","hashOfConfig":"109"},{"size":5846,"mtime":1641566095244,"results":"199","hashOfConfig":"109"},{"size":1002,"mtime":1637697947686,"results":"200","hashOfConfig":"109"},{"size":970,"mtime":1637866347324,"results":"201","hashOfConfig":"109"},{"size":5792,"mtime":1638874924927,"results":"202","hashOfConfig":"109"},{"size":771,"mtime":1638522196508,"results":"203","hashOfConfig":"109"},{"size":4425,"mtime":1638544870956,"results":"204","hashOfConfig":"109"},{"size":994,"mtime":1638978773721,"results":"205","hashOfConfig":"109"},{"size":11574,"mtime":1641684122665,"results":"206","hashOfConfig":"109"},{"size":1089,"mtime":1639074877679,"results":"207","hashOfConfig":"109"},{"size":4098,"mtime":1639075718349,"results":"208","hashOfConfig":"109"},{"size":2957,"mtime":1639073801394,"results":"209","hashOfConfig":"109"},{"size":1075,"mtime":1639075329383,"results":"210","hashOfConfig":"109"},{"size":4115,"mtime":1639075338063,"results":"211","hashOfConfig":"109"},{"size":424,"mtime":1639996165890,"results":"212","hashOfConfig":"109"},{"size":389,"mtime":1641686638923,"results":"213","hashOfConfig":"109"},{"size":1433,"mtime":1641686289899,"results":"214","hashOfConfig":"109"},{"size":14438,"mtime":1641688258613,"results":"215","hashOfConfig":"109"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},"3qhrpf",{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"218"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"218"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"218"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"218"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"218"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"218"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"218"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"218"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"218"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"218"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"218"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"218"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"218"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"218"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"218"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"218"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"218"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"218"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"218"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"218"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"218"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"218"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"218"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"218"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"218"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"218"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"218"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"218"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"218"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"218"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"218"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"218"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"218"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"218"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"218"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"218"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"218"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"218"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"423"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"218"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"218"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"218"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"218"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"218"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"218"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"218"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"218"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"218"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"477","messages":"478","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/index.js",[],["479","480"],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/reportWebVitals.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/router.js",["481","482"],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/serviceWorkerRegistration.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/authentication.js",["483","484","485","486","487"],"import { routerRedux } from \"dva/router\";\nimport axios from \"axios\";\nimport {\n  postLogin,\n  postSignup,\n  postForgotPassword,\n  postResetPassword,\n  postLogOut,\n} from \"../services/authentication\";\nimport { Alert } from \"../components/Alert.components\";\n\nimport {\n  storageToken,\n  storageProfile,\n  storagePrivilege,\n} from \"../utils/constant\";\n\nimport { asyncLocalStorage } from \"../utils/utils\";\n\nconst initialState = {\n  profile: {},\n  regForm: {},\n  regStep: 1,\n};\n\nexport default {\n  namespace: \"authentication\",\n\n  state: { ...initialState },\n\n  subscriptions: {\n    setup({ dispatch, history }) {\n      // eslint-disable-line\n      //Persist token details logic\n      try {\n        let profile = localStorage.getItem(storageProfile);\n\n        if (profile) {\n          let profileData = JSON.parse(profile);\n\n          dispatch({\n            type: \"save\",\n            payload: { profile: profileData },\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n  },\n\n  effects: {\n    *login({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(postLogin, payload);\n      if (success) {\n        const data = raw?.data;\n        let privilegeList = {};\n        data?.privileges?.forEach((priv) => {\n          priv?.permissions?.forEach((access) => {\n            privilegeList[access.id] = access.description;\n          });\n        });\n        const token = data ? data.jwtToken : \"\";\n        yield asyncLocalStorage.setItem(storageToken, token);\n        yield asyncLocalStorage.setItem(storageProfile, JSON.stringify(data));\n        yield asyncLocalStorage.setItem(\n          storagePrivilege,\n          JSON.stringify(privilegeList)\n        );\n\n        yield put({ type: \"save\", payload: { profile: data } });\n        yield put(routerRedux.push({ pathname: \"/parcels\" }));\n      } else {\n        Alert.error(message);\n      }\n    },\n    *signup({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(postSignup, payload);\n      if (success) {\n        console.log(raw);\n        Alert.success(\"Sign up successfully, please log in\");\n        yield put(routerRedux.push({ pathname: \"/\" }));\n      } else {\n        Alert.error(message);\n      }\n    },\n    *forgotPassword({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(postForgotPassword, payload);\n      if (success) {\n        Alert.success(\n          \"Password reset initiated successfully. An email has been sent to your mail\"\n        );\n        yield put(routerRedux.push({ pathname: \"/login\" }));\n      } else {\n        Alert.error(message);\n      }\n    },\n    *resetPassword({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(postResetPassword, payload);\n      if (success) {\n        Alert.success(\"Password reset successfully. Please proceed to login\");\n        yield put(routerRedux.push({ pathname: \"/login\" }));\n      } else {\n        Alert.error(message);\n      }\n    },\n    *logOut({ payload }, { call, put }) {\n      // const { refresh_token } = payload;\n      // call(postLogOut, { refresh_token });\n      localStorage.clear();\n      yield put(routerRedux.push(\"/\"));\n    },\n  },\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    },\n  },\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/parcels.js",["488","489","490","491","492"],"import { Alert } from \"../components/Alert.components\";\n\nimport {\n  getParcels,\n  postEncumbrance,\n  postRectification,\n  postAppraisal,\n  getAppraisalType,\n} from \"../services/parcels\";\n\nimport { storageParcelsModel } from \"../utils/constant\";\n\nexport default {\n  namespace: \"parcels\",\n\n  state: {\n    parcelsList: [],\n    parcelsTotal: 0,\n    parcelData: {},\n    createParcel: false,\n    rentModal: false,\n    appraisalModal: false,\n    appraisalTypes: [],\n    encumbranceModal: false,\n    rectificationModal: false,\n  },\n\n  subscriptions: {\n    setup({ dispatch, history }) {\n      // eslint-disable-line\n      try {\n        let parcels_model = localStorage.getItem(storageParcelsModel);\n        if (parcels_model) {\n          let data = JSON.parse(parcels_model);\n          dispatch({\n            type: \"save\",\n            payload: data,\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n  },\n\n  effects: {\n    *getAllParcels({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(getParcels, payload);\n      if (success) {\n        const list = raw?.data?.parcels;\n        const total = raw?.data?.totalRecord;\n        yield put({\n          type: \"save\",\n          payload: { parcelsList: list, parcelsTotal: total },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n\n    *getSingleParcel({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(getParcels, payload);\n      if (success) {\n        const list = raw?.data?.parcels;\n        list[0] &&\n          (yield put({\n            type: \"save\",\n            payload: { parcelData: list[0] },\n          }));\n      } else {\n        Alert.error(message);\n      }\n    },\n\n    *createRent({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(getParcels, payload);\n      if (success) {\n        Alert.success(\"Successfully rented a parcel\");\n        yield put({\n          type: \"save\",\n          payload: { rentModal: false, parcelData: {} },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n\n    *fetchAppraisalType({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(getAppraisalType, payload);\n      if (success) {\n        const list = raw?.data?.appraisalTypes;\n        yield put({\n          type: \"save\",\n          payload: { appraisalTypes: list },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n\n    *createAppraisal({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(postAppraisal, payload);\n      if (success) {\n        Alert.success(\"Successfully appraised a parcel\");\n        yield put({\n          type: \"save\",\n          payload: { appraisalModal: false, parcelData: {} },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n    *createEncumbrance({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(postEncumbrance, payload);\n      if (success) {\n        yield put({\n          type: \"save\",\n          payload: { encumbranceModal: false, parcelData: {} },\n        });\n        Alert.success(\"Successfully created an encumbrance.\");\n      } else {\n        Alert.error(message);\n      }\n    },\n    *createRectification({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(postRectification, payload);\n      if (success) {\n        yield put({\n          type: \"save\",\n          payload: { rectificationModal: false, parcelData: {} },\n        });\n        Alert.success(\"Successfully created a rectification.\");\n      } else {\n        Alert.error(message);\n      }\n    },\n  },\n\n  reducers: {\n    save(state, action) {\n      const newPayload = {\n        ...state,\n        ...action.payload,\n      };\n\n      try {\n        let data = JSON.stringify(newPayload);\n        localStorage.setItem(storageParcelsModel, data);\n      } catch (err) {\n        console.log(err);\n      }\n\n      return newPayload;\n    },\n  },\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/auxillary.js",["493"],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/archived.js",["494"],"import { Alert } from \"../components/Alert.components\";\n\nimport { getArchived } from \"../services/archived\";\n\nconst insitialState = {\n  archivedList: [],\n  archivedTotal: 0,\n};\n\nexport default {\n  namespace: \"archived\",\n\n  state: { ...insitialState },\n\n  subscriptions: {\n    setup({ dispatch, history }) {\n      // eslint-disable-line\n    },\n  },\n\n  effects: {\n    *getAllArchived({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(getArchived, payload);\n      if (success) {\n        const list = raw?.data?.items;\n        const total = raw?.data?.pagination?.total_record;\n        yield put({\n          type: \"save\",\n          payload: { archivedList: list, archivedTotal: total },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n  },\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    },\n  },\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/app.js",["495"],"let initialState = {\n  collaspe: false,\n  float: false,\n  pageTitle: \"\",\n  nightMode: false,\n};\n\nexport default {\n  namespace: \"app\",\n\n  state: { ...initialState },\n\n  subscriptions: {\n    setup({ dispatch, history }) {\n      // eslint-disable-line\n    },\n  },\n\n  effects: {},\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    },\n    reset(state, action) {\n      return { ...state, ...initialState };\n    },\n  },\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/entries.js",["496","497","498"],"import { Alert } from \"../components/Alert.components\";\n\nimport {\n  getEntries,\n  getApplications,\n  getApplicationDetail,\n  getRectifications,\n  getRectificationDetail,\n  getRectificationFile,\n  getEncumbrances,\n  postTerminateEncumbrance,\n  getEncumbranceDetail,\n} from \"../services/entries\";\n\nexport default {\n  namespace: \"entries\",\n\n  state: {\n    entriesList: [],\n    entriesTotal: 0,\n    entryData: {},\n\n    applicationsList: [],\n    applicationsTotal: 0,\n    applicationDetail: {},\n\n    rectificationList: [],\n    rectificationTotal: 0,\n    rectificationDetailModal: false, // Toggle detail modal on rectification\n\n    encumbranceList: [],\n    encumbranceTotal: 0,\n    encumbranceDetailModal: false, // Toggle detail modal on encumbrance\n    terminateModal: false,\n  },\n\n  subscriptions: {\n    setup({ dispatch, history }) {\n      // eslint-disable-line\n    },\n  },\n\n  effects: {\n    *getAllEntries({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(getEntries, payload);\n      if (success) {\n        const list = raw?.data?.items;\n        const total = raw?.data?.pagination?.total_record;\n        yield put({\n          type: \"save\",\n          payload: { entriesList: list, entriesTotal: total },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n    *getAllApplications({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(getApplications, payload);\n      if (success) {\n        const list = raw?.data?.items;\n        const total = raw?.data?.pagination?.total_record;\n        yield put({\n          type: \"save\",\n          payload: { applicationsList: list, applicationsTotal: total },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n    *getApplicationDetail({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(\n        getApplicationDetail,\n        payload\n      );\n      if (success) {\n        yield put({\n          type: \"save\",\n          payload: { applicationDetail: raw },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n\n    *getAllRectification({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(getRectifications, payload);\n      if (success) {\n        const list = raw?.data?.rectifications;\n        const total = raw?.data?.pagination?.totalRecord;\n        yield put({\n          type: \"save\",\n          payload: { rectificationList: list, rectificationTotal: total },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n    *getRectificationDetail({ payload }, { call, put, select }) {\n      const sample_data = {\n        close: true,\n        closedBy: \"Jante Adebowale\",\n        createdAt: \"2021-12-04 05:10:26\",\n        createdBy: \"samuel ejdnfjqwe\",\n        dateClosed: \"2021-12-09\",\n        description: \"Jante is closing this encumbrance\",\n        fileFormat: \"pdf\",\n        fileName: \"02.pdf\",\n        id: 2,\n        parcelNumber: \"45\",\n      };\n      const { raw, success, message } = yield call(\n        getRectificationDetail,\n        payload.id\n      );\n      if (success) {\n        const detail = raw?.data?.detail;\n        const newPayload = { ...payload, fields: detail };\n\n        yield put({\n          type: \"save\",\n          payload: { entryData: newPayload },\n        });\n\n        yield put({\n          type: \"entries/getRectificationFile\",\n          payload: newPayload,\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n\n    *getRectificationFile({ payload }, { call, put, select }) {\n      const { raw, success, message } = yield call(\n        getRectificationFile,\n        payload.fileName\n      );\n      if (success) {\n        console.log({ raw });\n        const data = raw?.data ? raw?.data : {};\n        yield put({\n          type: \"save\",\n          payload: { entryData: { ...payload, ...data } },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n\n    *getAllEncumbrance({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(getEncumbrances, payload);\n      if (success) {\n        const list = raw?.data?.encumbrances;\n        const total = raw?.data?.pagination?.totalRecord;\n        yield put({\n          type: \"save\",\n          payload: { encumbranceList: list, encumbranceTotal: total },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n    *terminateEncumbrance({ payload }, { call, put, select }) {\n      const { success, message, raw } = yield call(\n        postTerminateEncumbrance,\n        payload\n      );\n\n      if (success) {\n        const data = raw?.data ? raw.data : {};\n        const oldList = yield select(({ entries }) => entries.encumbranceList);\n        const newList = oldList.map((item) => {\n          if (item.id === data.id) {\n            return { ...item, ...data };\n          } else {\n            return item;\n          }\n        });\n        console.log({ newList });\n\n        yield put({\n          type: \"save\",\n          payload: {\n            encumbranceList: newList,\n            entryData: {},\n            terminateModal: false,\n          },\n        });\n        const closed_data = {\n          close: true,\n          closedBy: \"Jante Adebowale\",\n          dateClosed: \"2021-12-07\",\n          description: \"sample close\",\n          fileFormat: \"pdf\",\n          fileName: \"04.pdf\",\n          id: 4,\n        };\n      } else {\n        Alert.error(message);\n      }\n    },\n    *getEncumbranceDetail({ payload }, { call, put }) {\n      const { success, raw, message } = yield call(\n        getEncumbranceDetail,\n        payload.id\n      );\n      if (success) {\n        console.log(raw);\n      } else {\n        Alert.error(message);\n      }\n    },\n  },\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    },\n  },\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/models/users.js",["499","500","501","502","503"],"import { routerRedux } from \"dva/router\";\nimport { Alert } from \"../components/Alert.components\";\n\nimport {\n  getUsers,\n  postUser,\n  getRoles,\n  postRole,\n  putRole,\n  getAllPermissions,\n} from \"../services/users\";\n\nimport { storageUsersModel } from \"../utils/constant\";\n\nconst initialState = {\n  usersList: [],\n  usersTotal: 0,\n  createUserModal: false,\n\n  rolesList: [],\n  rolesTotal: 0,\n  roleData: {},\n  roleEditMode: false,\n  permissionList: [],\n};\n\nexport default {\n  namespace: \"users\",\n\n  state: {\n    ...initialState,\n  },\n\n  subscriptions: {\n    setup({ dispatch, history }) {\n      // eslint-disable-line\n      try {\n        let parcels_model = localStorage.getItem(storageUsersModel);\n        if (parcels_model) {\n          let data = JSON.parse(parcels_model);\n          dispatch({\n            type: \"save\",\n            payload: data,\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n  },\n\n  effects: {\n    *getAllUsers({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(getUsers, payload);\n      if (success) {\n        const list = raw?.data?.users;\n        const total = raw?.data?.pagination?.total_record;\n        yield put({\n          type: \"save\",\n          payload: { usersList: list, usersTotal: 9 },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n\n    *postCreateUser({ payload }, { call, put, select }) {\n      const { raw, message, success } = yield call(postUser, payload);\n      if (success) {\n        const data = raw?.data ? raw.data : {};\n        const oldList = yield select(({ users }) => users.usersList);\n        const newList = [data, ...oldList];\n\n        yield put({\n          type: \"save\",\n          payload: { createUserModal: false, usersList: newList },\n        });\n        Alert.success(\"User account is successfully created\");\n      } else {\n        Alert.error(message);\n      }\n    },\n\n    *getAllRoles({ payload }, { call, put }) {\n      const { raw, success, message } = yield call(getRoles, payload);\n      if (success) {\n        const list = raw?.data?.roles;\n        const total = raw?.data?.pagination?.total_record;\n        yield put({\n          type: \"save\",\n          payload: { rolesList: list, rolesTotal: 2 },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n    *postCreateRole({ payload }, { call, put }) {\n      const { raw, message, success } = yield call(postRole, payload);\n      if (success) {\n        Alert.success(\"Role was successfully created\");\n        yield put(routerRedux.push({ pathname: \"/role-management\" }));\n      } else {\n        Alert.error(message);\n      }\n    },\n    *putEditRole({ payload }, { call, put }) {\n      const { raw, message, success } = yield call(putRole, payload);\n      if (success) {\n        Alert.success(\"Role was successfully edited\");\n        yield put(routerRedux.push({ pathname: \"/role-management\" }));\n      } else {\n        Alert.error(message);\n      }\n    },\n\n    *getAllPermissions({ payload }, { call, put }) {\n      const { raw, message, success } = yield call(getAllPermissions, payload);\n      if (success) {\n        const list = raw?.data?.pages;\n        yield put({\n          type: \"save\",\n          payload: {\n            permissionList: list,\n          },\n        });\n      } else {\n        Alert.error(message);\n      }\n    },\n  },\n\n  reducers: {\n    save(state, action) {\n      const newPayload = {\n        ...state,\n        ...action.payload,\n      };\n\n      try {\n        let data = JSON.stringify(newPayload);\n        localStorage.setItem(storageUsersModel, data);\n      } catch (err) {\n        console.log(err);\n      }\n\n      return newPayload;\n    },\n  },\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Archived/index.js",["504","505"],"import { connect } from \"dva\";\nimport { createForm } from \"rc-form\";\nimport { Archived } from \"./Archived\";\nimport { routerRedux } from \"dva/router\";\n\nconst sampleData = [\n  {\n    id: 1,\n    name: \"W18956M - International Passport\",\n    type: \"pdf\",\n    file: \"Random text about this entry that is going to prove important …\",\n  },\n  {\n    id: 1,\n    name: \"W18956M - International Passport\",\n    type: \"doc\",\n    file: \"Random text about this entry that is going to prove important …\",\n  },\n  {\n    id: 1,\n    name: \"W18956M - International Passport\",\n    type: \"pdf\",\n    file: \"Random text about this entry that is going to prove important …\",\n  },\n  {\n    id: 1,\n    name: \"W18956M - International Passport\",\n    type: \"pdf\",\n    file: \"Random text about this entry that is going to prove important …\",\n  },\n  {\n    id: 1,\n    name: \"W18956M - International Passport\",\n    type: \"jpg\",\n    file: \"Random text about this entry that is going to prove important …\",\n  },\n  {\n    id: 1,\n    name: \"W18956M - International Passport\",\n    type: \"jpg\",\n    file: \"Random text about this entry that is going to prove important …\",\n  },\n  {\n    id: 1,\n    name: \"W18956M - International Passport\",\n    type: \"pdf\",\n    file: \"Random text about this entry that is going to prove important …\",\n  },\n  {\n    id: 1,\n    name: \"W18956M - International Passport\",\n    type: \"doc\",\n    file: \"Random text about this entry that is going to prove important …\",\n  },\n];\n\nconst fetchActionURL = \"archived/getAllArchived\";\n\nexport const mapStateToProps = (state, ownProps) => {\n  const { loading, archived } = state;\n  const { archivedList, archivedTotal } = archived;\n  const isLoading = loading.effects[fetchActionURL];\n  return {\n    isLoading,\n    archivedList: sampleData,\n    archivedTotal: 5,\n    fetchActionURL,\n  };\n};\n\nexport const mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    redirect(pathname, search) {\n      dispatch(routerRedux.push({ pathname, search }));\n    },\n    getAllArchived(data) {\n      dispatch({ type: fetchActionURL, payload: data });\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(createForm()(Archived));\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/SignUp/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/ForgotPassword/index.js",["506"],"import { connect } from \"dva\";\nimport { createForm } from \"rc-form\";\nimport { ForgotPassword } from \"./ForgotPassword\";\nimport { routerRedux } from \"dva/router\";\n\nexport const mapStateToProps = (state, ownProps) => {\n  const { loading } = state;\n  return {};\n};\n\nexport const mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    redirect(pathname) {\n      dispatch(routerRedux.push({ pathname: `${pathname}` }));\n    },\n    forgotPassword(data) {\n      dispatch({ type: \"authentication/forgotPassword\", payload: data });\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(createForm()(ForgotPassword));\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/app.js",["507","508","509"],"import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { connect } from \"dva\";\nimport { withRouter } from \"dva/router\";\n\nimport HeaderLayout from \"./Layouts/headerLayout/index\";\nimport BodyLayout from \"./Layouts/bodyLayout/index\";\n\nimport { AlertComponent } from \"../components/Alert.components\";\nimport { Loader } from \"../components/Loader.components\";\nimport { Boxed } from \"../components/Boxed.components\";\n\nimport { Theme, Theme2 } from \"../utils/theme\";\n\nconst App = (props) => {\n  const { children, openRoutes, history, loading } = props;\n  const { nightMode } = props.app;\n\n  const exist =\n    openRoutes.findIndex(\n      (item) => item === history.location.pathname.toLowerCase()\n    ) > -1;\n\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={exist || !nightMode ? Theme : Theme2}>\n        <React.Fragment>\n          {exist ? (\n            <Boxed minHeight=\"100vh\">{children}</Boxed>\n          ) : (\n            <React.Fragment>\n              <BodyLayout>\n                {/* <HeaderLayout /> */}\n                <div />\n                <div className=\"body-layout-children\">{children}</div>\n              </BodyLayout>\n            </React.Fragment>\n          )}\n          <AlertComponent\n            stack={{ limit: 3, spacing: 10 }}\n            effect=\"slide\"\n            position=\"top-right\"\n            offset={10}\n          />\n        </React.Fragment>\n      </ThemeProvider>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(\n  connect(({ app, loading }) => ({ app, loading }))(App)\n);\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Entries/index.js",["510","511"],"import { connect } from \"dva\";\nimport { createForm } from \"rc-form\";\nimport { Entries } from \"./Entries\";\nimport { routerRedux } from \"dva/router\";\n\nconst sampleData = [\n  {\n    id: 1,\n    entry_number: \"W18956M\",\n    parcel_number: \"PS45654\",\n    created_at: \"30-09-2021\",\n    proprietor: \"Ijeh Michael\",\n  },\n  {\n    id: 2,\n    entry_number: \"W18956M\",\n    parcel_number: \"PS45654\",\n    created_at: \"30-09-2021\",\n    proprietor: \"Ijeh Michael\",\n  },\n  {\n    id: 3,\n    entry_number: \"W18956M\",\n    parcel_number: \"PS45654\",\n    created_at: \"30-09-2021\",\n    proprietor: \"Ijeh Michael\",\n  },\n  {\n    id: 4,\n    entry_number: \"W18956M\",\n    parcel_number: \"PS45654\",\n    created_at: \"30-09-2021\",\n    proprietor: \"Ijeh Michael\",\n  },\n  {\n    id: 5,\n    entry_number: \"W18956M\",\n    parcel_number: \"PS45654\",\n    created_at: \"30-09-2021\",\n    proprietor: \"Ijeh Michael\",\n  },\n  {\n    id: 6,\n    entry_number: \"W18956M\",\n    parcel_number: \"PS45654\",\n    created_at: \"30-09-2021\",\n    proprietor: \"Ijeh Michael\",\n  },\n];\n\nconst fetchActionURL = \"entries/getAllEntries\";\n\nexport const mapStateToProps = (state, ownProps) => {\n  const { loading, entries } = state;\n  const { entriesList, entriesTotal } = entries;\n  const isLoading = loading.effects[fetchActionURL];\n  return {\n    isLoading,\n    entriesList: sampleData,\n    entriesTotal: 5,\n    fetchActionURL,\n  };\n};\n\nexport const mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    redirect(pathname) {\n      dispatch(routerRedux.push({ pathname: `${pathname}` }));\n    },\n    getAllEntries(data) {\n      dispatch({ type: fetchActionURL, payload: data });\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(createForm()(Entries));\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/UserManagement/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/View/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/RoleManagement/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/TDP/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/RoleManagement/CreateRole/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Login/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Applications/index.js",["512","513"],"import { connect } from \"dva\";\nimport { Applications } from \"./Applications\";\nimport { routerRedux } from \"dva/router\";\n\nconst sampleData = [\n  {\n    id: 1,\n    application_number: \"APP-23454345\",\n    full_name: \"Ijeh Michael Ifeanyi\",\n    email: \"ban@ban.com\",\n    comments: 0,\n    created_at: \"30-09-2021 14:32:00\",\n    status: \"PENDING_REVIEW\",\n  },\n  {\n    id: 2,\n    application_number: \"APP-23454345\",\n    full_name: \"Ijeh Michael Ifeanyi\",\n    email: \"ban@ban.com\",\n    comments: 0,\n    created_at: \"30-09-2021 14:32:00\",\n    status: \"PENDING_ALLOCATION\",\n  },\n  {\n    id: 3,\n    application_number: \"APP-23454345\",\n    full_name: \"Ijeh Michael Ifeanyi\",\n    email: \"ban@ban.com\",\n    comments: 0,\n    created_at: \"30-09-2021 14:32:00\",\n    status: \"REJECTED\",\n  },\n  {\n    id: 4,\n    application_number: \"APP-23454345\",\n    full_name: \"Ijeh Michael Ifeanyi\",\n    email: \"ban@ban.com\",\n    comments: 0,\n    created_at: \"30-09-2021 14:32:00\",\n    status: \"ALLOCATED\",\n  },\n  {\n    id: 5,\n    application_number: \"APP-23454345\",\n    full_name: \"Ijeh Michael Ifeanyi\",\n    email: \"ban@ban.com\",\n    comments: 0,\n    created_at: \"30-09-2021 14:32:00\",\n    status: \"PENDING_REVIEW\",\n  },\n  {\n    id: 6,\n    application_number: \"APP-23454345\",\n    full_name: \"Ijeh Michael Ifeanyi\",\n    email: \"ban@ban.com\",\n    comments: 0,\n    created_at: \"30-09-2021 14:32:00\",\n    status: \"PENDING_ALLOCATION\",\n  },\n  {\n    id: 7,\n    application_number: \"APP-23454345\",\n    full_name: \"Ijeh Michael Ifeanyi\",\n    email: \"ban@ban.com\",\n    comments: 0,\n    created_at: \"30-09-2021 14:32:00\",\n    status: \"REJECTED\",\n  },\n  {\n    id: 8,\n    application_number: \"APP-23454345\",\n    full_name: \"Ijeh Michael Ifeanyi\",\n    email: \"ban@ban.com\",\n    comments: 0,\n    created_at: \"30-09-2021 14:32:00\",\n    status: \"ALLOCATED\",\n  },\n];\n\nconst fetchActionURL = \"entries/getAllApplications\";\n\nexport const mapStateToProps = (state, ownProps) => {\n  const { loading, entries } = state;\n  const { applicationsList, applicationsTotal } = entries;\n  const isLoading = loading.effects[fetchActionURL];\n  return {\n    isLoading,\n    applicationsList: sampleData,\n    applicationsTotal: 5,\n    fetchActionURL,\n  };\n};\n\nexport const mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    redirect(pathname, search) {\n      dispatch(routerRedux.push({ pathname, search }));\n    },\n    getAllApplications(data) {\n      dispatch({ type: fetchActionURL, payload: data });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Applications);\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Applications/Review/index.js",["514","515"],"import { connect } from \"dva\";\nimport { Review } from \"./Review\";\nimport { routerRedux } from \"dva/router\";\nimport qs from \"query-string\";\n\nconst sampleData = {\n  id: 1,\n  application_number: \"APP-23454345\",\n  last_name: \"Ijeh\",\n  first_name: \"Michael\",\n  middle_name: \"Ifeanyi\",\n  email: \"ban@ban.com\",\n  state: { name: \"Delta\" },\n  lga: { name: \"Ika North-East\" },\n  comments: 0,\n  created_at: \"30-09-2021 14:32:00\",\n  status: \"PENDING_REVIEW\",\n  identification: \"International Passport\",\n  files: [\n    {\n      name: \"Prove of State of Origin\",\n      type: \"pdf\",\n    },\n    {\n      name: \"Prove of LGA\",\n      type: \"pdf\",\n    },\n    {\n      name: \"Prove of Identification\",\n      type: \"jpg\",\n    },\n    {\n      name: \"Prove of Rent\",\n      type: \"pdf\",\n    },\n    {\n      name: \"Prove of Ownership\",\n      type: \"doc\",\n    },\n    {\n      name: \"Prove of Marriage\",\n      type: \"pdf\",\n    },\n  ],\n};\n\nconst fetchActionURL = \"entries/getApplicationDetail\";\n\nexport const mapStateToProps = (state, ownProps) => {\n  const { match } = ownProps;\n  const { loading, entries } = state;\n  const { applicationDetail } = entries;\n  const isLoading = loading.effects[fetchActionURL];\n  const { params } = match;\n  return {\n    isLoading,\n    applicationDetail: sampleData,\n    params,\n  };\n};\n\nexport const mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    redirect(pathname) {\n      dispatch(routerRedux.push({ pathname: `${pathname}` }));\n    },\n    getApplicationDetail(data) {\n      dispatch({ type: fetchActionURL, payload: data });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Review);\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/services/archived.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/services/auxillary.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/ResetPassword/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/services/parcels.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/services/authentication.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/services/entries.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Alert.components.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/utils/constant.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/services/users.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/SignUp/SignUp.js",["516"],"import React from \"react\";\n\nimport { Grid } from \"../../components/Grid.components\";\nimport { Boxed } from \"../../components/Boxed.components\";\nimport { Text } from \"../../components/Text.components\";\n\nimport { calcViewMode } from \"../../utils/utils\";\nimport LOGIN_BG from \"../../assets/img/gis-landing.png\";\nimport LOGO from \"../../assets/img/logo.png\";\n\nimport { Theme } from \"../../utils/theme\";\n\nimport Step1 from \"./Step1/index\";\nimport Step2 from \"./Step2/index\";\n\nexport const SignUp = (props) => {\n  // state props\n  const { regForm, regStep } = props;\n\n  // dispatch props\n  const { redirect } = props;\n  let viewMode = calcViewMode();\n\n  return (\n    <>\n      <Grid desktop=\"55% 45%\" tablet=\"55% 45%\" mobile=\"100%\">\n        <Boxed display=\"flex\" width=\"100%\" minHeight=\"100vh\">\n          <Boxed margin=\"auto\" pad=\"20px\">\n            <Boxed pad=\"10px 0\">\n              <img src={LOGO} height=\"50px\" alt=\"app_logo\" />\n            </Boxed>\n            <Text fontSize=\"24px\" fontWeight=\"bold\" margin=\"5px 0\">\n              Hello, nice to have you\n            </Text>\n            <Text margin=\"5px 0\">\n              Fill the form below to start your account creation.\n            </Text>\n\n            {regStep === 1 && <Step1 />}\n            {regStep === 2 && <Step2 />}\n            <Boxed pad=\"20px 0 0 0\">\n              <Text>\n                Already have an account?{\" \"}\n                <span\n                  style={{ cursor: \"pointer\", color: Theme.PrimaryColor }}\n                  onClick={() => redirect(\"/\")}\n                >\n                  Sign In\n                </span>\n              </Text>\n            </Boxed>\n          </Boxed>\n        </Boxed>\n\n        {viewMode !== \"mobile\" && (\n          <Boxed display=\"flex\" width=\"100%\" height=\"100%\">\n            <img\n              src={LOGIN_BG}\n              height=\"100%\"\n              alt=\"login_bg\"\n              width=\"100%\"\n              style={{ margin: \"auto\" }}\n            />\n          </Boxed>\n        )}\n      </Grid>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Loader.components.js",["517"],"import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Theme } from \"../utils/theme\";\n\nconst StyledLoader = styled.div`\n  position: relative;\n  ${(props) =>\n    props.margin &&\n    css`\n      margin: ${props.margin};\n    `};\n\n  /* ============================ */\n  /* SPINNER GENERAL              */\n  /* ============================ */\n\n  %bar {\n    width: 8px;\n    height: 40px;\n    background-color: ${Theme.PrimaryColor};\n    border-radius: 4px;\n  }\n\n  .spinner {\n    display: inline-block;\n    position: relative;\n    width: 8px;\n    height: 40px;\n    background-color: ${Theme.PrimaryColor};\n    border-radius: 4px;\n\n    :after,\n    :before {\n      content: \"\";\n      position: absolute;\n      display: block;\n      width: 8px;\n      height: 40px;\n      background-color: ${Theme.PrimaryColor};\n      border-radius: 4px;\n      top: 0px;\n    }\n    &:before {\n      left: -12px;\n    }\n    &:after {\n      left: 12px;\n    }\n  }\n\n  /* ============================ */\n  /* SPINNER BOUNCE BOTTOM        */\n  /* ============================ */\n\n  @keyframes bounce-bottom {\n    0% {\n      height: 10px;\n      margin-top: 30px;\n    }\n    50% {\n      height: 40px;\n      margin-top: 0px;\n    }\n    100% {\n      height: 10px;\n      margin-top: 30px;\n    }\n  }\n\n  @mixin bounce-bottom($dur: 0.5s, $delay: 0s) {\n    animation: bounce-bottom $dur ease $delay infinite;\n  }\n\n  .spinner-bounce-bottom {\n    animation: bounce-bottom 0.5s ease 0.1s infinite;\n    :before,\n    :after {\n      top: auto;\n      bottom: 0px;\n    }\n    :before {\n      animation: bounce-bottom 0.6s ease 0s infinite;\n    }\n    :after {\n      animation: bounce-bottom 0.5s ease 0.2s infinite;\n    }\n  }\n`;\n\nconst SpinnerLoader = styled.div`\n  position: relative;\n  ${(props) =>\n    props.margin &&\n    css`\n      margin: ${props.margin};\n    `};\n\n  .spinner {\n    height: 100%;\n  width: 100%;\n  display: flex;\n  position: relative;\n  justify-content: center;\n  align-items: center;\n  }\n  .spinner i {\n    width: 15px;\n  height: 15px;\n  border-radius: 50%;\n  background-color: ${Theme.PrimaryColor};\n  animation: move 500ms linear 0ms infinite;\n  margin-right: 30px;\n  }\n  .spinner i:nth-child(1) {\n    position: absolute;\n  top: 0;\n  left: 0;\n  animation: grow 500ms linear 0ms infinite;\n  }\n  .spinner i:nth-child(2) {\n    \n  }\n  .spinner i:nth-child(4) {\n    position: absolute;\n  top: 0;\n  right: 0;\n  margin-right: 0;\n  animation: grow 500ms linear 0s infinite reverse;\n  }\n\n  @keyframes grow {\n    from {\n      transform: scale(0, 0);\n      opacity: 0;\n    }\n    to {\n      transform: scale(1, 1);\n      opacity: 1;\n    }\n  }\n  @keyframes move {\n    from {\n      transform: translateX(0px);\n    }\n    to {\n      transform: translateX(45px);\n    }\n  }\n`;\n\nexport const Loader = (props) => {\n  const { margin } = props;\n  return (\n    <SpinnerLoader margin={margin}>\n      <div className=\"spinner\">\n        <i></i>\n        <i></i>\n        <i></i>\n        <i></i>\n      </div>\n    </SpinnerLoader>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/ForgotPassword/ForgotPassword.js",["518","519","520","521","522"],"import React from \"react\";\n\nimport { Input, Checkbox } from \"../../components/Input.components\";\nimport { Grid } from \"../../components/Grid.components\";\nimport { Boxed } from \"../../components/Boxed.components\";\nimport { Text } from \"../../components/Text.components\";\nimport { Button } from \"../../components/Button.components\";\n\nimport { calcViewMode } from \"../../utils/utils\";\n\nimport LOGO from \"../../assets/img/logo.png\";\nimport LOGIN_BG from \"../../assets/img/gis-landing.png\";\n\nimport { Theme } from \"../../utils/theme\";\n\nexport const ForgotPassword = (props) => {\n  const { form, isLoading, login, redirect, forgotPassword } = props;\n  const { getFieldProps, getFieldError, validateFields } = form;\n  let viewMode = calcViewMode();\n\n  const onForgotPassword = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        const data = {\n          email: value.email.trim(),\n        };\n        forgotPassword(data);\n      }\n    });\n  };\n\n  const onEnter = (e) => {\n    e.stopPropagation();\n    e.key === \"Enter\" && onForgotPassword();\n  };\n  let errors;\n\n  return (\n    <>\n      <Grid desktop=\"40% 60%\" tablet=\"40% 60%\" mobile=\"100%\">\n        <Boxed display=\"flex\" width=\"100%\" minHeight=\"100vh\">\n          <Boxed margin=\"auto\">\n            <Boxed display=\"flex\" width=\"100%\" minHeight=\"100vh\">\n              <Boxed margin=\"auto\" minWidth=\"300px\">\n                <Boxed pad=\"10px 0\">\n                  <img src={LOGO} height=\"50px\" alt=\"app_logo\" />\n                </Boxed>\n                <Text margin=\"1rem 0\" fontWeight=\"600\" fontSize=\"24px\">\n                  Reset Link\n                </Text>\n                <Text margin=\"1rem 0\">\n                  Enter your email address to get a password resent link.\n                </Text>\n                <Boxed margin=\"20px 0\">\n                  <Input\n                    label=\"Email Address\"\n                    type=\"email\"\n                    placeholder=\"Your email address...\"\n                    onKeyPress={onEnter}\n                    error={\n                      (errors = getFieldError(\"email\"))\n                        ? \"Email is required\"\n                        : null\n                    }\n                    {...getFieldProps(\"email\", {\n                      initialValue: \"\",\n                      rules: [{ required: true, type: \"email\" }],\n                    })}\n                  />\n                </Boxed>\n\n                <Button onClick={onForgotPassword}>Send Link</Button>\n                <Button\n                  clear\n                  color={Theme.PrimaryBlue}\n                  onClick={() => redirect(\"/\")}\n                >\n                  <icon className=\"icon-chevron-left\" /> Back to Sign In\n                </Button>\n              </Boxed>\n            </Boxed>\n          </Boxed>\n        </Boxed>\n\n        {viewMode !== \"mobile\" && (\n          <Boxed display=\"flex\" width=\"100%\" height=\"100%\">\n            <img\n              src={LOGIN_BG}\n              height=\"100%\"\n              alt=\"login_bg\"\n              width=\"100%\"\n              style={{ margin: \"auto\" }}\n            />\n          </Boxed>\n        )}\n      </Grid>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Entries/Entries.js",["523","524","525","526","527"],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/UserManagement/UserManagement.js",["528","529","530","531","532"],"import React, { useEffect } from \"react\";\n\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nimport Wrapper from \"../Common/FilterWrapper/index\";\n\nimport { Grid } from \"../../components/Grid.components\";\nimport { Boxed } from \"../../components/Boxed.components\";\nimport { Input } from \"../../components/Input.components\";\nimport { Text } from \"../../components/Text.components\";\nimport { Button } from \"../../components/Button.components\";\nimport { Loader } from \"../../components/Loader.components\";\nimport { EmptyState } from \"../../components/EmptyState.components\";\nimport {\n  TableComponent,\n  PaginationComponent,\n} from \"../../components/Table.components\";\nimport { PageTitle, Icon, StyledDrpDown } from \"../../components/style\";\n\nimport { calcViewMode, formatDate } from \"../../utils/utils\";\nimport { pageOptions } from \"../../utils/constant\";\nimport { Theme } from \"../../utils/theme\";\n\nimport CreateModal from \"./CreateModal/index\";\n\nexport const UserManagement = (props) => {\n  // state props\n  const { isLoading, usersList, usersTotal, fetchActionURL, accessList } =\n    props;\n\n  // dispatch props\n  const { getAllUsers, openCreateModal, redirect } = props;\n\n  useEffect(() => {\n    if (accessList[\"VIEW_USER\"]) {\n      let data = {\n        page: 1,\n        size: 10,\n      };\n      getAllUsers(data);\n    } else {\n      redirect(\"/dashboard\");\n    }\n  }, []);\n\n  let viewMode = calcViewMode();\n\n  const DropDownMenu = (props) => {\n    const { record } = props;\n    return (\n      <StyledDrpDown>\n        <Dropdown>\n          <Dropdown.Toggle variant id=\"dropdown-basic\">\n            <Icon className=\"icon-more-vertical\" />\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>View Profile</Dropdown.Item>\n            {accessList[\"EDIT_USER\"] && (\n              <Dropdown.Item>Edit Profile</Dropdown.Item>\n            )}\n          </Dropdown.Menu>\n        </Dropdown>\n      </StyledDrpDown>\n    );\n  };\n\n  const columns = [\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullname\",\n      key: \"fullname\",\n      render: (text, record) =>\n        `${record?.firstname} ${record?.middlename} ${record?.lastname}`,\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n    {\n      title: \"Phone No.\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n    },\n    // {\n    //   title: \"Department\",\n    //   dataIndex: \"department\",\n    //   align: \"center\",\n    //   key: \"department\",\n    // },\n    {\n      title: \"Role\",\n      dataIndex: \"rolename\",\n      key: \"rolename\",\n    },\n    // {\n    //   title: \"Created Date\",\n    //   dataIndex: \"created_at\",\n    //   key: \"created_at\",\n    //   render: (text) => text && formatDate(text),\n    // },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      key: \"action\",\n      align: \"right\",\n      render: (text, record) => <DropDownMenu record={record} />,\n    },\n  ];\n\n  return (\n    <>\n      <Boxed pad=\"20px\">\n        <PageTitle>Users Management</PageTitle>\n        <Boxed\n          pad=\"20px 10px\"\n          background={Theme.TertiaryDark}\n          borderRadius={Theme.SecondaryRadius}\n        >\n          <Wrapper\n            externalActionURL={fetchActionURL}\n            render={({\n              changePageSize,\n              handlePagination,\n              currentPage,\n              pageSize,\n              search,\n            }) => {\n              return (\n                <>\n                  <Grid\n                    desktop=\"repeat(4, 1fr)\"\n                    tablet=\"repeat(4, 1fr)\"\n                    mobile=\"repeat(1, 1fr)\"\n                  >\n                    <Boxed pad=\"5px 0\">\n                      <Input\n                        type=\"search\"\n                        placeholder=\"Search by name, email & phone\"\n                        onChange={(value) => search(value, fetchActionURL)}\n                      />\n                    </Boxed>\n                    <Boxed />\n                    <Boxed />\n                    {accessList[\"CREATE_USER\"] && (\n                      <Boxed pad=\"5px 0\" align=\"right\">\n                        <Button onClick={() => openCreateModal()}>\n                          Add User\n                        </Button>\n                      </Boxed>\n                    )}\n                  </Grid>\n                  {isLoading ? (\n                    <Boxed display=\"flex\" pad=\"20px\">\n                      <Loader margin=\"auto\" />\n                    </Boxed>\n                  ) : (\n                    <>\n                      {\" \"}\n                      {usersTotal > 0 ? (\n                        <>\n                          <TableComponent columns={columns} data={usersList} />\n                          <Boxed pad=\"10px 0 \">\n                            <PaginationComponent\n                              total={usersTotal}\n                              onChange={(page) =>\n                                handlePagination(page, fetchActionURL)\n                              }\n                              current={currentPage}\n                              pageCounts={pageOptions}\n                              changePageSize={(pageSize) =>\n                                changePageSize(pageSize, fetchActionURL)\n                              }\n                              pageSize={pageSize}\n                              itemsDisplayed\n                              showTotal={(total, range) => {\n                                return `${range[0]} - ${range[1]} of ${usersTotal} items`;\n                              }}\n                            />\n                          </Boxed>\n                        </>\n                      ) : (\n                        <EmptyState />\n                      )}\n                    </>\n                  )}\n                </>\n              );\n            }}\n          />\n        </Boxed>\n      </Boxed>\n      <CreateModal />\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/Parcels.js",["533","534","535"],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Boxed.components.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/utils/theme.js",["536"],"import { lighten } from \"polished\";\n\n// let PrimaryColor = \"#14284B\";\nlet PrimaryColor = \"#68b2a1\";\nlet SecondaryColor = \"#C2B75E\";\nlet QuaternaryDark = \"#222126\";\n\nexport const Theme = {\n  PrimaryColor: PrimaryColor,\n  SecondaryColor: SecondaryColor,\n\n  PrimaryFontSize: \"14px\",\n  SecondaryFontSize: \"12px\",\n\n  PrimaryFontFamily: \"Gilroy\",\n  SecondaryFontFamily: \"CircularStd\",\n\n  PrimaryFontColor: \"#939393\",\n  PrimaryLineHeight: \"1.6rem\",\n\n  PrimaryRadius: \"5px\",\n  SecondaryRadius: \"10px\",\n  TertiaryRadius: \"25px\",\n\n  PrimaryTransition: \"0.3s ease-out\",\n\n  SideBarColor: PrimaryColor,\n\n  PrimaryDark: \"#f2f2f2\",\n  SecondaryDark: \"#d2d2d2\",\n  TertiaryDark: \"#FFFFFF\",\n  QuaternaryDark: QuaternaryDark,\n\n  PrimaryBorderColor: \"#d9d9d9\",\n  SecondaryBorderColor: \"#707070\",\n\n  PrimaryGreen: \"#68b2a1\",\n  PrimaryRed: \"#FD0541\",\n  PrimaryYellow: \"#ffc107\",\n  PrimaryBlue: \"#2a78d0\",\n  PrimaryGrey: \"#979797\",\n\n  PrimaryTextColor: \"#205072\",\n  SecondaryTextColor: \"#858d8a\",\n  TertiaryTextColor: PrimaryColor,\n\n  PrimaryShadow: \"0 21px 16px #20507210\",\n};\n\nexport const Theme2 = {\n  PrimaryColor: \"#df1e28\",\n  SecondaryColor: SecondaryColor,\n\n  PrimaryFontSize: \"14px\",\n  SecondaryFontSize: \"12px\",\n\n  PrimaryFontFamily: \"Gilroy\",\n  SecondaryFontFamily: \"CircularStd\",\n\n  PrimaryFontColor: \"#ffffff\",\n  PrimaryLineHeight: \"1.6rem\",\n\n  PrimaryRadius: \"5px\",\n  SecondaryRadius: \"10px\",\n  TertiaryRadius: \"25px\",\n\n  PrimaryTransition: \"0.3s ease-out\",\n\n  SideBarColor: \"#191919\",\n\n  PrimaryDark: \"#242424\",\n  SecondaryDark: \"#4d4d4d\",\n  TertiaryDark: \"#191919\",\n  QuaternaryDark: QuaternaryDark,\n\n  PrimaryBorderColor: \"#d9d9d9\",\n  SecondaryBorderColor: \"#707070\",\n\n  PrimaryGreen: \"#28a745\",\n  PrimaryRed: \"#FD0541\",\n  PrimaryYellow: \"#ffc107\",\n  PrimaryBlue: \"#2a78d0\",\n  PrimaryGrey: \"#979797\",\n\n  PrimaryTextColor: \"#ffffff\",\n  SecondaryTextColor: \"#858d8a\",\n  TertiaryTextColor: PrimaryColor,\n\n  PrimaryShadow: \"0 21px 16px #0000008\",\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/View/View.js",["537","538"],"import React from \"react\";\n\nimport PARCEL_VIEW from \"../../../LIMSGIS/map.htm\";\n\nimport { MAP_URL } from \"../../../utils/config\";\n\nexport const View = (props) => {\n  const { search } = props;\n  const mapURL = `${MAP_URL}/map.html${search ? search : \"\"}`;\n  return <iframe src={mapURL} width=\"100%\" height=\"100%\"></iframe>;\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/RoleManagement/RoleManagement.js",["539","540"],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/TDP/TDP.js",["541","542"],"import React from \"react\";\nimport moment from \"moment\";\n\nimport { Grid } from \"../../../components/Grid.components\";\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\n\nimport PARCEL_VIEW from \"../../../LIMSGIS/map.htm\";\nimport { Theme } from \"../../../utils/theme\";\n\nimport ARROW_ICON from \"../../../assets/img/north-arrow.png\";\n\nimport { MAP_URL } from \"../../../utils/config\";\n\nexport const TDP = (props) => {\n  // state props received\n  const { search, parcelData } = props;\n\n  // dispatch props received\n  const { redirect } = props;\n\n  const mapURL = `${MAP_URL}/map.html${search ? search : \"\"}`;\n\n  return (\n    <Boxed pad=\"10px 20px\">\n      <Boxed align=\"right\" pad=\"15px 0\" className=\"no-print\">\n        <Button\n          clear\n          color={Theme.SecondaryTextColor}\n          onClick={() => redirect(\"/parcels\")}\n        >\n          Back\n        </Button>{\" \"}\n        <Button onClick={() => window.print()}>Print</Button>\n      </Boxed>\n      <Boxed pad=\"10px\" background=\"#FFFFFF\">\n        <Text pad=\"10px\" align=\"center\" fontSize=\"24px\" fontWeight=\"bold\">\n          {parcelData.ParcelNumber}\n        </Text>\n\n        <Text padding=\"5px 0\">\n          Land Guaranty To: <b>{parcelData.parcelNumber}</b>\n        </Text>\n        <Text padding=\"5px 0\">\n          Situated At: <b>{parcelData.LEGAL_DESC}</b>\n        </Text>\n\n        <Boxed display=\"flex\">\n          <Text padding=\"20px 0 5px 0\">\n            {\" \"}\n            Signed By: _________________________________{\" \"}\n          </Text>\n\n          <Text padding=\"10px 0 5px 0\" margin=\"auto 0 0 0\" pad=\"0 10px\">\n            Date : ______________________________\n          </Text>\n        </Boxed>\n        <Grid desktop=\"40px auto\" tablet=\"40px auto\" mobile=\"40px auto\">\n          <Boxed pad=\"10px 0\">\n            <img src={ARROW_ICON} width=\"38px\" alt=\"north-arrow\" />\n          </Boxed>\n          <iframe\n            src={mapURL}\n            width=\"100%\"\n            height=\"375px\"\n            style={{ width: \"500px\", margin: \"auto\" }}\n          ></iframe>\n        </Grid>\n\n        <Boxed pad=\"10px 0\">\n          <Text>\n            Surveyed By: <b>{parcelData.surveyedBy}</b>\n          </Text>\n          <Text>\n            Drawn By: <b>{parcelData.drawnBy}</b>\n          </Text>\n          <Text>\n            Checked By: <b>{parcelData.checkedBy}</b>\n          </Text>\n          <Text>\n            Passed By: <b>{parcelData.passedBy}</b>\n          </Text>\n        </Boxed>\n        <Text padding=\"10px\" align=\"center\" fontSize={Theme.SecondaryFontSize}>\n          All bearings and distances shown on this plan has been computed from\n          the registered coordinates. <br />\n          Date: {moment().format(\"ll\")}\n        </Text>\n      </Boxed>\n    </Boxed>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/RoleManagement/CreateRole/CreateRole.js",["543","544","545","546","547","548","549","550","551","552"],"import React, { useEffect, useState } from \"react\";\n\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nimport { Grid } from \"../../../components/Grid.components\";\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Checkbox, Input } from \"../../../components/Input.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\nimport { Loader } from \"../../../components/Loader.components\";\nimport { EmptyState } from \"../../../components/EmptyState.components\";\nimport {\n  TableComponent,\n  PaginationComponent,\n} from \"../../../components/Table.components\";\nimport { PageTitle, Icon, StyledDrpDown, HR } from \"../../../components/style\";\n\nimport { calcViewMode, formatDate } from \"../../../utils/utils\";\nimport { pageOptions } from \"../../../utils/constant\";\nimport { Theme } from \"../../../utils/theme\";\nimport { Alert } from \"../../../components/Alert.components\";\n\nexport const CreateRole = (props) => {\n  // state props\n  const {\n    isLoading,\n    roleData,\n    permissionList,\n    roleEditMode,\n    isLoadingCreate,\n    isLoadingEdit,\n  } = props;\n\n  const role_name = roleEditMode ? roleData.name : \"\";\n  const selected_permission = roleEditMode ? roleData.allPrivileges : [];\n\n  // dispatch props\n  const { getAllPermissions, redirect, postCreateRole, putEditRole } = props;\n\n  const [roleName, setRoleName] = useState(role_name);\n  const [selectedPermissions, setSelectedPermission] =\n    useState(selected_permission);\n\n  useEffect(() => {\n    getAllPermissions();\n  }, []);\n\n  let viewMode = calcViewMode();\n\n  const handleSelect = (page_id, permission_id) => {\n    let newList = [...selectedPermissions];\n    let exist = newList.findIndex(\n      (item) => item.pageId === page_id && item.id === permission_id\n    );\n\n    // Check if permission group exist\n    if (exist > -1) {\n      newList.splice(exist, 1);\n      setSelectedPermission(newList);\n    } else {\n      let data = { pageId: page_id, id: permission_id };\n      setSelectedPermission((prev) => [...prev, data]);\n    }\n  };\n\n  const onCreateAction = () => {\n    if (roleName) {\n      const data = {\n        name: roleName,\n        privileges: [...selectedPermissions],\n      };\n      postCreateRole(data);\n    } else {\n      Alert.error(\"Role name is required\");\n    }\n  };\n\n  const onEditAction = () => {\n    if (roleName && roleEditMode) {\n      const data = {\n        id: roleData.id,\n        name: roleName,\n        privileges: [...selectedPermissions],\n      };\n      putEditRole(data);\n    } else {\n      Alert.error(\"Role name is required\");\n    }\n  };\n\n  console.log({ roleData });\n  console.log({ selectedPermissions });\n  return (\n    <>\n      <Boxed pad=\"20px\">\n        <PageTitle>{roleEditMode ? \"Edit\" : \"Create\"} Role</PageTitle>\n\n        {isLoading ? (\n          <Boxed pad=\"20px\" display=\"flex\">\n            <Loader margin=\"auto\" />\n          </Boxed>\n        ) : (\n          <Boxed>\n            <Grid\n              desktop=\"300px auto\"\n              tablet=\"230px auto\"\n              mobile=\"repeat(1, 1fr)\"\n            >\n              <Boxed pad=\"10px 0\">\n                <Boxed display=\"flex\" pad=\"10px 0\">\n                  <Button\n                    margin=\"0 0 0 auto\"\n                    clear\n                    color={Theme.SecondaryTextColor}\n                    onClick={() => redirect(\"/role-management\")}\n                  >\n                    Back\n                  </Button>\n\n                  {roleEditMode ? (\n                    <Button\n                      progress={isLoadingEdit}\n                      disabled={isLoadingEdit}\n                      onClick={() => onEditAction()}\n                    >\n                      Edit Role\n                    </Button>\n                  ) : (\n                    <Button\n                      progress={isLoadingCreate}\n                      disabled={isLoadingCreate}\n                      onClick={() => onCreateAction()}\n                    >\n                      Create Role\n                    </Button>\n                  )}\n                </Boxed>\n\n                <Input\n                  label=\"Role Name\"\n                  value={roleName}\n                  onChange={(e) => setRoleName(e.target.value)}\n                />\n              </Boxed>\n              <Boxed>\n                {permissionList &&\n                  permissionList.map((item, index) => {\n                    console.log({ item });\n                    return (\n                      <Boxed\n                        key={index}\n                        borderRadius={Theme.PrimaryRadius}\n                        background={Theme.TertiaryDark}\n                        pad=\"20px 15px\"\n                        margin=\"10px 0\"\n                        boxShadow={Theme.PrimaryShadow}\n                      >\n                        <Text>{item.name}</Text>\n                        <HR />\n                        <Grid\n                          desktop=\"repeat(4, 1fr)\"\n                          tablet=\"repeat(4, 1fr)\"\n                          mobile=\"repeat(2, 1fr)\"\n                        >\n                          {item?.privileges?.length\n                            ? item.privileges.map((elem, elem_index) => {\n                                const isActive =\n                                  selectedPermissions &&\n                                  selectedPermissions.findIndex(\n                                    (item) => item.id === elem.id\n                                  ) > -1;\n                                return (\n                                  <Boxed pad=\"10px 5px\" key={elem_index}>\n                                    <Checkbox\n                                      label={elem.description}\n                                      checked={isActive}\n                                      onClick={() =>\n                                        handleSelect(item.id, elem.id)\n                                      }\n                                    />\n                                  </Boxed>\n                                );\n                              })\n                            : null}\n                        </Grid>\n                      </Boxed>\n                    );\n                  })}\n              </Boxed>\n            </Grid>\n          </Boxed>\n        )}\n      </Boxed>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/utils/request.js",["553"],"import axios from \"axios\";\nimport { storagePrefix, storageToken } from \"./constant\";\n\nconst fetch = (options) => {\n  const AuthToken = localStorage.getItem(storageToken);\n  if (AuthToken) {\n    axios.defaults.headers.common.Authorization = `Bearer ${AuthToken}`;\n  }\n  let { method = \"get\", data, url, formatData } = options;\n  if (formatData && method.toLowerCase() !== \"get\") {\n    data = {\n      meta: { source: \"web\" },\n      data: data,\n    };\n  }\n\n  switch (method.toLowerCase()) {\n    case \"get\":\n      return axios.get(url, {\n        params: data,\n      });\n    case \"delete\":\n      return axios.delete(url, {\n        data: data,\n      });\n    case \"post\":\n      switch (options.upload) {\n        case true:\n          return axios.post(url, options.formData, options.config);\n        default:\n          return axios.post(url, data);\n      }\n    case \"put\":\n      return axios.put(url, data);\n    case \"patch\":\n      return axios.patch(url, data);\n    default:\n      return axios(options);\n  }\n};\n\nexport default function request(options) {\n  return fetch(options)\n    .then((response) => {\n      const { statusText, status, headers } = response;\n      let data =\n        options.fetchType === \"YQL\"\n          ? response.data.query.results.json\n          : response.data;\n      return {\n        headers: headers,\n        success: true,\n        message: statusText,\n        statusCode: status,\n        raw: data,\n        ...data,\n      };\n    })\n    .catch((err) => {\n      const { response } = err;\n      let msg;\n      let statusCode;\n      if (response && response instanceof Object) {\n        const { data, statusText } = response;\n        statusCode = response.status;\n        if (statusCode === 4038) {\n          localStorage.clear();\n          let origin = window.location.origin;\n          window.location.replace(origin);\n        }\n        msg = data.message || statusText;\n      } else {\n        statusCode = 600;\n        msg = err.message || \"Network Error\";\n      }\n\n      return {\n        success: false,\n        statusCode,\n        message: response?.data?.meta?.info ? response?.data?.meta?.info : msg,\n        raw: response?.data,\n        meta: response?.data?.meta,\n      };\n    });\n}\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/utils/config.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/ResetPassword/ResetPassword.js",["554","555","556"],"import React from \"react\";\n\nimport { Input } from \"../../components/Input.components\";\nimport { Grid } from \"../../components/Grid.components\";\nimport { Boxed } from \"../../components/Boxed.components\";\nimport { Text } from \"../../components/Text.components\";\nimport { Button } from \"../../components/Button.components\";\n\nimport { calcViewMode } from \"../../utils/utils\";\n\nimport LOGO from \"../../assets/img/logo.png\";\nimport LOGIN_BG from \"../../assets/img/gis-landing.png\";\nimport { Theme } from \"../../utils/theme\";\n\nexport const ResetPassword = (props) => {\n  const { form, resetPassword, loadingBtn, token, redirect } = props;\n  const { getFieldProps, getFieldError, validateFields, getFieldValue } = form;\n  let viewMode = calcViewMode();\n\n  const checkConfirmPassword = (value1, rule, value, callback, source) => {\n    if (value !== value1) {\n      callback(\"Passwords must match\");\n    } else {\n      callback();\n    }\n  };\n\n  const checkPassword = (value1, rule, value, callback, source) => {\n    if (value) {\n      let length = value.length;\n      let checkLength = length > 7;\n\n      if (checkLength) {\n        let numberTest = /\\d/.test(value);\n        let format = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n        let specialCharaterTest = value.match(format);\n        if (numberTest || specialCharaterTest) {\n          callback();\n        } else {\n          callback(\"Password must contain either a digit or special charater.\");\n        }\n      } else {\n        callback(\"Password must be atleast 8 characters\");\n      }\n    } else {\n      callback();\n    }\n  };\n\n  const onResetPassword = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        const data = {\n          token,\n          new_password: value.password,\n          confirm_password: value.confirmPassword,\n        };\n        resetPassword(data);\n      }\n    });\n  };\n\n  const onEnter = (e) => {\n    e.stopPropagation();\n    e.key === \"Enter\" && onResetPassword();\n  };\n  let errors;\n  return (\n    <>\n      <Grid desktop=\"40% 60%\" tablet=\"40% 60%\" mobile=\"100%\">\n        <Boxed display=\"flex\" width=\"100%\" minHeight=\"100vh\">\n          <Boxed margin=\"auto\">\n            <Boxed display=\"flex\" width=\"100%\" minHeight=\"100vh\">\n              <Boxed margin=\"auto\" minWidth=\"300px\">\n                <Boxed pad=\"10px 0\">\n                  <img src={LOGO} height=\"50px\" alt=\"app_logo\" />\n                </Boxed>\n                <Text margin=\"1rem 0\" fontWeight=\"600\" fontSize=\"24px\">\n                  Password Reset\n                </Text>\n                <Text margin=\"1rem 0\">\n                  Fill the form belowto change your password.\n                </Text>\n                <Boxed margin=\"20px 0\">\n                  <Input\n                    type=\"password\"\n                    placeholder=\"New Password...\"\n                    onKeyPress={onEnter}\n                    error={\n                      getFieldError(\"password\")\n                        ? getFieldError(\"password\")\n                        : null\n                    }\n                    {...getFieldProps(\"password\", {\n                      rules: [\n                        { required: true },\n                        {\n                          validator: checkPassword.bind(\n                            this,\n                            getFieldValue(\"password\")\n                          ),\n                        },\n                      ],\n                      initialValue: \"\",\n                    })}\n                  />\n                </Boxed>\n                <Boxed margin=\"20px 0\">\n                  <Input\n                    type=\"password\"\n                    placeholder=\"Confirm Password...\"\n                    onKeyPress={onEnter}\n                    error={\n                      getFieldError(\"confirmPassword\")\n                        ? \"Confirm password must match password\"\n                        : null\n                    }\n                    {...getFieldProps(\"confirmPassword\", {\n                      rules: [\n                        { required: true },\n                        {\n                          validator: checkConfirmPassword.bind(\n                            this,\n                            getFieldValue(\"password\")\n                          ),\n                        },\n                      ],\n                      initialValue: \"\",\n                    })}\n                  />\n                </Boxed>\n\n                <Button\n                  progress={loadingBtn}\n                  diabled={loadingBtn}\n                  onClick={onResetPassword}\n                >\n                  Reset Password\n                </Button>\n\n                <Button\n                  clear\n                  color={Theme.PrimaryBlue}\n                  onClick={() => redirect(\"/\")}\n                >\n                  <icon className=\"icon-chevron-left\" /> Back to Sign In\n                </Button>\n              </Boxed>\n            </Boxed>\n          </Boxed>\n        </Boxed>\n\n        {viewMode !== \"mobile\" && (\n          <Boxed display=\"flex\" width=\"100%\" height=\"100%\">\n            <img\n              src={LOGIN_BG}\n              height=\"100%\"\n              alt=\"login_bg\"\n              width=\"100%\"\n              style={{ margin: \"auto\" }}\n            />\n          </Boxed>\n        )}\n      </Grid>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Applications/Review/Review.js",["557","558","559","560","561","562","563"],"import React, { useEffect } from \"react\";\n\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nimport { Grid } from \"../../../components/Grid.components\";\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Input } from \"../../../components/Input.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\nimport { Loader } from \"../../../components/Loader.components\";\nimport { Avatar } from \"../../../components/Avatar.components\";\nimport { FileComponent } from \"../../../components/File.components\";\nimport { PageTitle, Icon, StyledDrpDown, HR } from \"../../../components/style\";\n\nimport { calcViewMode, formatDate } from \"../../../utils/utils\";\nimport { pageOptions } from \"../../../utils/constant\";\nimport { Theme } from \"../../../utils/theme\";\n\nimport MALE_IMG from \"../../../assets/img/male.png\";\n\nexport const Review = (props) => {\n  // state props\n  const { isLoading, applicationDetail, params } = props;\n  const { files } = applicationDetail;\n\n  // dispatch props\n  const { redirect, getApplicationDetail } = props;\n\n  useEffect(() => {\n    let data = {\n      id: params.id,\n    };\n    getApplicationDetail(data);\n  }, []);\n\n  let viewMode = calcViewMode();\n\n  const DropDownMenu = (props) => {\n    const { record } = props;\n    return (\n      <StyledDrpDown>\n        <Dropdown>\n          <Dropdown.Toggle variant id=\"dropdown-basic\">\n            <Icon className=\"icon-more-vertical\" />\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Review</Dropdown.Item>\n            <Dropdown.Item>Allocate Parcel</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </StyledDrpDown>\n    );\n  };\n\n  return (\n    <>\n      <Boxed pad=\"20px\">\n        <PageTitle>\n          {\" \"}\n          <span\n            onClick={() => redirect(\"/application\")}\n            style={{ cursor: \"pointer\", fontWeight: 300 }}\n          >\n            Applications\n          </span>{\" \"}\n          / Application Review\n        </PageTitle>\n\n        {isLoading ? (\n          <Boxed pad=\"20px\" display=\"flex\">\n            <Loader margin=\"auto\" />\n          </Boxed>\n        ) : (\n          <Boxed>\n            <Boxed pad=\"10px 0\" align=\"right\">\n              <Button pale>Decline</Button>\n              <Button>Approve</Button>\n              <Button color={Theme.PrimaryBlue}>Allocate Parcel</Button>\n            </Boxed>\n\n            <Grid\n              desktop=\"120px auto\"\n              tablet=\"120px auto\"\n              mobile=\"repeat(1, 1fr)\"\n            >\n              <Boxed>\n                <Avatar src={MALE_IMG} size=\"110px\" />\n              </Boxed>\n              <Grid\n                desktop=\"repeat(3,1fr)\"\n                tablet=\"repeat=(3,1fr)\"\n                mobile=\"repeat(2, 1fr)\"\n              >\n                <Boxed pad=\"10px 0\">\n                  <Text\n                    fontSize={Theme.SecondaryFontSize}\n                    color={Theme.SecondaryTextColor}\n                  >\n                    Last Name\n                  </Text>\n                  <Text padding=\"0 5px\">{applicationDetail.last_name}</Text>\n                </Boxed>\n                <Boxed pad=\"10px 0\">\n                  <Text\n                    fontSize={Theme.SecondaryFontSize}\n                    color={Theme.SecondaryTextColor}\n                  >\n                    First Name\n                  </Text>\n                  <Text padding=\"0 5px\">{applicationDetail.first_name}</Text>\n                </Boxed>\n                <Boxed pad=\"10px 0\">\n                  <Text\n                    fontSize={Theme.SecondaryFontSize}\n                    color={Theme.SecondaryTextColor}\n                  >\n                    Middle Name\n                  </Text>\n                  <Text padding=\"0 5px\">{applicationDetail.middle_name}</Text>\n                </Boxed>\n                <Boxed pad=\"10px 0\">\n                  <Text\n                    fontSize={Theme.SecondaryFontSize}\n                    color={Theme.SecondaryTextColor}\n                  >\n                    State of Origin\n                  </Text>\n                  <Text padding=\"0 5px\">{applicationDetail?.state?.name}</Text>\n                </Boxed>\n                <Boxed pad=\"10px 0\">\n                  <Text\n                    fontSize={Theme.SecondaryFontSize}\n                    color={Theme.SecondaryTextColor}\n                  >\n                    Local Gov. Area\n                  </Text>\n                  <Text padding=\"0 5px\">{applicationDetail?.lga?.name}</Text>\n                </Boxed>\n                <Boxed pad=\"10px 0\">\n                  <Text\n                    fontSize={Theme.SecondaryFontSize}\n                    color={Theme.SecondaryTextColor}\n                  >\n                    Identification\n                  </Text>\n                  <Text padding=\"0 5px\">\n                    {applicationDetail?.identification}\n                  </Text>\n                </Boxed>\n              </Grid>\n            </Grid>\n            <HR />\n            <Text\n              fontSize={Theme.SecondaryFontSize}\n              color={Theme.SecondaryTextColor}\n            >\n              Scanned File(s)\n            </Text>\n            <Boxed>\n              <Grid\n                desktop=\"repeat(5, 1fr)\"\n                tablet=\"repeat(4, 1fr)\"\n                mobile=\"repeat(2, 1fr)\"\n              >\n                {files &&\n                  files.map((item, index) => {\n                    return (\n                      <Boxed pad=\"10px\" key={index}>\n                        <FileComponent {...item} />\n                      </Boxed>\n                    );\n                  })}\n              </Grid>\n            </Boxed>\n          </Boxed>\n        )}\n      </Boxed>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Login/Login.js",["564","565","566","567"],"import React from \"react\";\n\nimport { Input, Checkbox } from \"../../components/Input.components\";\nimport { Grid } from \"../../components/Grid.components\";\nimport { Boxed } from \"../../components/Boxed.components\";\nimport { Text } from \"../../components/Text.components\";\nimport { Button } from \"../../components/Button.components\";\n\nimport { calcViewMode } from \"../../utils/utils\";\nimport { endpoint } from \"../../utils/config\";\n\nimport LOGO from \"../../assets/img/logo.png\";\nimport LOGIN_BG from \"../../assets/img/gis-landing.png\";\n\nimport { Theme } from \"../../utils/theme\";\n\nexport const Login = (props) => {\n  const { form, isLoading, login, redirect } = props;\n  const { getFieldProps, getFieldError, validateFields } = form;\n  let viewMode = calcViewMode();\n\n  const onLogin = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        const data = {\n          username: value.username.trim(),\n          password: value.password,\n        };\n\n        login(data);\n      }\n    });\n  };\n\n  const onEnter = (e) => {\n    e.stopPropagation();\n    e.key === \"Enter\" && onLogin();\n  };\n\n  let errors;\n\n  return (\n    <>\n      <Grid desktop=\"40% 60%\" tablet=\"40% 60%\" mobile=\"100%\">\n        <Boxed display=\"flex\" width=\"100%\" minHeight=\"100vh\">\n          <Boxed margin=\"auto\">\n            <Boxed pad=\"10px 0\">\n              <img src={LOGO} height=\"50px\" alt=\"app_logo\" />\n            </Boxed>\n            <Text fontSize=\"24px\" fontWeight=\"bold\" margin=\"5px 0\">\n              Welcome back\n            </Text>\n            <Text margin=\"5px 0\">Please log in to your account.</Text>\n            <Boxed margin=\"20px 0\">\n              <Input\n                label=\"Email or Phone Number\"\n                type=\"email\"\n                placeholder=\"Your Email...\"\n                error={\n                  (errors = getFieldError(\"username\"))\n                    ? \"Email or phone number is required\"\n                    : null\n                }\n                {...getFieldProps(\"username\", {\n                  initialValue: \"\",\n                  rules: [{ required: true }],\n                })}\n              />\n            </Boxed>\n            <Boxed margin=\"20px 0\">\n              <Input\n                label=\"Password\"\n                type=\"password\"\n                placeholder=\"Your Password...\"\n                onKeyPress={onEnter}\n                error={\n                  (errors = getFieldError(\"password\"))\n                    ? \"Password is required\"\n                    : null\n                }\n                {...getFieldProps(\"password\", {\n                  initialValue: \"\",\n                  rules: [{ required: true }],\n                })}\n              />\n            </Boxed>\n            <Grid\n              desktop=\"repeat(2, 1fr)\"\n              tablet=\"repeat(2, 1fr)\"\n              mobile=\"repeat(2, 1fr)\"\n              pad=\"10px 0\"\n            >\n              <Boxed pad=\"10px 0\">\n                <Checkbox\n                  label=\"Remember Me\"\n                  onClick={(value) => console.log(value)}\n                />\n              </Boxed>\n              <Boxed pad=\"10px 5px\" align=\"right\">\n                <Text\n                  cursor=\"pointer\"\n                  color={Theme.PrimaryRed}\n                  onClick={() => redirect(\"/forgotpassword\")}\n                >\n                  Forgot password?\n                </Text>\n              </Boxed>\n            </Grid>\n            <Grid\n              desktop=\"repeat(2, 1fr)\"\n              tablet=\"repeat(2, 1fr)\"\n              mobile=\"repeat(2, 1fr)\"\n              pad=\"25px 0 0 0\"\n            >\n              <Boxed pad=\"5px 0 0 0\">\n                <Button\n                  disabled={isLoading}\n                  progress={isLoading}\n                  block\n                  onClick={onLogin}\n                >\n                  SIGN IN\n                </Button>\n              </Boxed>\n              <Boxed pad=\"5px 0 0 0\">\n                <Button\n                  clear\n                  block\n                  color={Theme.PrimaryBlue}\n                  onClick={() => redirect(\"/signup\")}\n                >\n                  <i className=\"icon-chevron-left\" /> Sign Up\n                </Button>\n              </Boxed>\n            </Grid>\n          </Boxed>\n        </Boxed>\n\n        {viewMode !== \"mobile\" && (\n          <Boxed display=\"flex\" width=\"100%\" height=\"100%\">\n            <img\n              src={LOGIN_BG}\n              height=\"100%\"\n              alt=\"login_bg\"\n              width=\"100%\"\n              style={{ margin: \"auto\" }}\n            />\n          </Boxed>\n        )}\n      </Grid>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Applications/Applications.js",["568","569","570"],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Archived/Archived.js",["571","572","573","574"],"import React, { useEffect } from \"react\";\n\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nimport Wrapper from \"../Common/FilterWrapper/index\";\n\nimport { Grid } from \"../../components/Grid.components\";\nimport { Boxed } from \"../../components/Boxed.components\";\nimport { Input } from \"../../components/Input.components\";\nimport { Text } from \"../../components/Text.components\";\nimport { Button } from \"../../components/Button.components\";\nimport { Loader } from \"../../components/Loader.components\";\nimport { EmptyState } from \"../../components/EmptyState.components\";\nimport { PaginationComponent } from \"../../components/Table.components\";\nimport { PageTitle, Icon, StyledDrpDown } from \"../../components/style\";\n\nimport { calcViewMode, formatDate } from \"../../utils/utils\";\nimport { pageOptions } from \"../../utils/constant\";\nimport { Theme } from \"../../utils/theme\";\n\nimport PDF_ICON from \"../../assets/img/file-pdf.png\";\nimport DOC_ICON from \"../../assets/img/file-doc.png\";\nimport JPG_ICON from \"../../assets/img/file-jpg.png\";\n\nexport const Archived = (props) => {\n  // state props\n  const { isLoading, archivedList, archivedTotal, fetchActionURL } = props;\n\n  // dispatch props\n  const { getAllArchived } = props;\n\n  useEffect(() => {\n    let data = {\n      page: 1,\n      size: 20,\n    };\n    getAllArchived(data);\n  }, []);\n\n  let viewMode = calcViewMode();\n\n  const DropDownMenu = (props) => {\n    const { record } = props;\n    return (\n      <StyledDrpDown>\n        <Dropdown>\n          <Dropdown.Toggle variant id=\"dropdown-basic\">\n            <Icon className=\"icon-more-vertical\" />\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item>Edit File</Dropdown.Item>\n            <Dropdown.Item>Delete File</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </StyledDrpDown>\n    );\n  };\n\n  return (\n    <>\n      <Boxed pad=\"20px\">\n        <PageTitle>Archived Documents</PageTitle>\n        <Boxed pad=\"20px 10px\">\n          <Wrapper\n            externalActionURL={fetchActionURL}\n            render={({\n              search,\n              changePageSize,\n              handlePagination,\n              currentPage,\n              pageSize,\n            }) => {\n              return (\n                <>\n                  <Grid\n                    desktop=\"repeat(4, 1fr)\"\n                    tablet=\"repeat(4, 1fr)\"\n                    mobile=\"repeat(1, 1fr)\"\n                  >\n                    <Boxed pad=\"5px 0\">\n                      <Input\n                        type=\"search\"\n                        placeholder=\"Search by document name\"\n                        onChange={(e) => search(e, fetchActionURL)}\n                      />\n                    </Boxed>\n                    <Boxed />\n                    <Boxed />\n                    <Boxed pad=\"5px 0\" align=\"right\">\n                      <Button>Add Document</Button>\n                    </Boxed>\n                  </Grid>\n                  {isLoading ? (\n                    <Boxed display=\"flex\" pad=\"20px\">\n                      <Loader margin=\"auto\" />\n                    </Boxed>\n                  ) : (\n                    <>\n                      {archivedTotal > 0 ? (\n                        <>\n                          <Grid\n                            desktop=\"repeat(5, 1fr)\"\n                            tablet=\"repeat(4, 1fr)\"\n                            mobile=\"repeat(2, 1fr)\"\n                          >\n                            {archivedList &&\n                              archivedList.map((item, index) => {\n                                let ICON = \"\";\n                                switch (item.type) {\n                                  case \"pdf\":\n                                    ICON = PDF_ICON;\n                                    break;\n\n                                  case \"doc\":\n                                    ICON = DOC_ICON;\n                                    break;\n\n                                  case \"jpg\":\n                                    ICON = JPG_ICON;\n                                    break;\n\n                                  default:\n                                    break;\n                                }\n\n                                return (\n                                  <Boxed pad=\"10px\" key={index}>\n                                    <Boxed align=\"right\">\n                                      <DropDownMenu record={item} />\n                                    </Boxed>\n                                    <Boxed pad=\"0 0 10px 0\" align=\"center\">\n                                      <img\n                                        src={ICON}\n                                        alt={`doc-type-icon-${index}`}\n                                        height=\"110px\"\n                                      />\n                                    </Boxed>\n                                    <Text padding=\"10px 0\">{item.name}</Text>\n                                    <Button\n                                      block\n                                      pale\n                                      color={Theme.PrimaryBlue}\n                                    >\n                                      View\n                                    </Button>\n                                  </Boxed>\n                                );\n                              })}\n                          </Grid>\n\n                          <Boxed pad=\"10px 0 \">\n                            <PaginationComponent\n                              total={archivedTotal}\n                              onChange={(page) =>\n                                handlePagination(page, fetchActionURL)\n                              }\n                              current={currentPage}\n                              pageCounts={pageOptions}\n                              changePageSize={(pageSize) =>\n                                changePageSize(pageSize, fetchActionURL)\n                              }\n                              pageSize={pageSize}\n                              itemsDisplayed\n                              showTotal={(total, range) => {\n                                return `${range[0]} - ${range[1]} of ${archivedTotal} items`;\n                              }}\n                            />\n                          </Boxed>\n                        </>\n                      ) : (\n                        <EmptyState />\n                      )}\n                    </>\n                  )}\n                </>\n              );\n            }}\n          />\n        </Boxed>\n      </Boxed>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/headerLayout/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/bodyLayout/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Text.components.js",["575"],"import React from \"react\";\nimport styled, { css } from \"styled-components\";\n// import { Theme } from \"../utils/theme\";\n\nexport const Text = styled.p`\n  font-size: ${(props) =>\n    props.fontSize ? props.fontSize : props.theme.PrimaryFontSize};\n  color: ${(props) =>\n    props.color ? props.color : props.theme.PrimaryTextColor};\n  margin: ${(props) => (props.margin ? props.margin : \"0\")};\n  padding: ${(props) => (props.padding ? props.padding : \"0\")};\n  display: ${(props) => (props.display ? props.display : \"0\")};\n  font-family: ${(props) =>\n    props.fontFamily ? props.fontFamily : props.theme.PrimaryFontFamily};\n  font-weight: ${(props) => (props.fontWeight ? props.fontWeight : \"normal\")};\n  ${(props) =>\n    props.cursor &&\n    css`\n      cursor: ${props.cursor};\n    `}\n  ${(props) =>\n    props.align &&\n    css`\n      text-align: ${props.align};\n    `}\n    ${(props) =>\n    props.lineHeight &&\n    css`\n      line-height: ${props.lineHeight};\n    `}\n\t${(props) =>\n    props.bColor &&\n    css`\n      background: ${props.bColor};\n    `}\n\n\t${(props) =>\n    props.hoverBColor &&\n    css`\n      :hover {\n        background: ${props.hoverBColor};\n      }\n    `}\n\t${(props) =>\n    props.borderRadius &&\n    css`\n      border-radius: ${props.borderRadius};\n    `}\n`;\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Grid.components.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Button.components.js",["576"],"import React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\nimport { darken, lighten, desaturate, transparentize } from \"polished\";\nimport { Theme } from \"../utils/theme\";\n\nexport const Button = styled.button`\n  display: inline-block;\n  height: 40px;\n  padding: 10px 22px;\n  font-size: 13px;\n  line-height: 20px;\n  font-family: ${(props) => props.theme.PrimaryFontFamily};\n  background-color: ${(props) =>\n    props.color ? props.color : darken(0.05, props.theme.PrimaryColor)};\n  border-radius: ${(props) =>\n    props.rounded ? \"26px\" : props.theme.PrimaryRadius};\n  color: ${(props) => (props.fontColor ? props.fontColor : \"#fff\")};\n  border: 1px solid transparent;\n  text-align: center;\n  cursor: pointer;\n  transition: ${(props) => props.theme.PrimaryTransition};\n  letter-spacing: 1.5px;\n\n  ${(props) =>\n    props.width &&\n    css`\n      width: ${props.width};\n    `}\n\n  & + button {\n    margin-left: 5px;\n    margin-bottom: 5px;\n  }\n\n  & svg,\n  i {\n    display: inline-block;\n    margin: 0;\n    padding: 0 0.2rem 0 0;\n  }\n\n  ${(props) =>\n    props.icon &&\n    css`\n      padding: 12px 12px;\n      min-width: 44px;\n    `}\n  ${(props) =>\n    props.iconLeft &&\n    css`\n      & i {\n        margin-left: -8px;\n        padding-right: 10px;\n      }\n    `}\n    ${(props) =>\n    props.iconRight &&\n    css`\n      & i {\n        padding-left: 10px;\n        margin-right: -8px;\n      }\n    `}\n    ${(props) =>\n    props.margin &&\n    css`\n      margin: ${(props) => props.margin};\n    `}\n    ${(props) =>\n    props.width &&\n    css`\n      min-width: ${(props) => props.width};\n    `}\n\n    &:hover {\n    background-color: ${(props) =>\n      props.color\n        ? darken(0.1, props.color)\n        : darken(0.1, props.theme.PrimaryColor)};\n  }\n  &:active {\n    outline: none;\n  }\n  &:focus {\n    outline: none;\n  }\n  ${(props) =>\n    props.disabled &&\n    css`\n      border-color: transparent;\n      color: #272727;\n      background-color: ${(props) => props.theme.SecondaryBorderColor};\n      background-color: ${(props) =>\n        props.color\n          ? desaturate(0.7, lighten(0.35, props.theme.SecondaryBorderColor))\n          : desaturate(0.7, lighten(0.35, props.theme.SecondaryBorderColor))};\n      &:hover {\n        color: ${(props) =>\n          props.color\n            ? desaturate(0.9, lighten(0.1, props.color))\n            : desaturate(0.9, lighten(0.1, props.theme.PrimaryColor))};\n        background-color: ${(props) =>\n          props.color\n            ? desaturate(0.7, lighten(0.35, props.color))\n            : desaturate(0.7, lighten(0.35, props.theme.PrimaryColor))};\n      }\n    `}\n  ${(props) =>\n    props.progress &&\n    css`\n      position: relative;\n      overflow: hidden;\n      background: none;\n      z-index: 1;\n      &:after {\n        content: \"\";\n        display: block;\n        position: absolute;\n        height: 100%;\n        width: 100%;\n        top: 0;\n        right: 0;\n        background-color: ${(props) =>\n          props.color\n            ? darken(0.07, props.color)\n            : darken(0.07, props.theme.PrimaryColor)};\n        animation: ${InProgress} 1.2s ease-in-out alternate both infinite;\n        z-index: -1;\n      }\n      &:before {\n        content: \"\";\n        display: block;\n        position: absolute;\n        height: 100%;\n        width: 100%;\n        top: 0;\n        right: 0;\n        background-color: ${(props) =>\n          props.color ? props.color : props.theme.PrimaryColor};\n        z-index: -2;\n      }\n      &:hover {\n        background: none;\n      }\n    `}\n    ${(props) =>\n    props.small &&\n    css`\n      min-height: 30px;\n      padding: 7px 14px;\n      line-height: 16px;\n      font-size: 13px;\n      ${(props) =>\n        props.icon &&\n        css`\n          padding: 6px 6px;\n          min-width: 30px;\n        `}\n    `}\n    ${(props) =>\n    props.block &&\n    css`\n      display: block;\n      width: 100%;\n    `}\n    ${(props) =>\n    props.pale &&\n    css`\n      border: 1px solid\n        ${(props) =>\n          props.color ? props.color : darken(0.05, props.theme.PrimaryColor)};\n      background-color: transparent;\n      color: ${(props) =>\n        props.color ? props.color : darken(0.05, props.theme.PrimaryColor)};\n\n      &:hover {\n        background-color: ${(props) =>\n          props.color\n            ? transparentize(0.8, props.color)\n            : transparentize(0.8, props.theme.PrimaryColor)};\n      }\n    `} \n    ${(props) =>\n    props.clear &&\n    css`\n      border: 0px solid\n        ${(props) =>\n          props.color ? props.color : darken(0.05, props.theme.PrimaryColor)};\n      background-color: transparent;\n      color: ${(props) =>\n        props.color ? props.color : darken(0.05, props.theme.PrimaryColor)};\n\n      &:hover {\n        background-color: ${(props) =>\n          props.color\n            ? transparentize(0.8, props.color)\n            : transparentize(0.8, props.theme.PrimaryColor)};\n      }\n    `}\n\n    ${(props) =>\n    props.small &&\n    css`\n      height: ${props.height ? props.height : \"40px\"};\n    `} \n      ${(props) =>\n    props.xs &&\n    css`\n      height: ${props.height ? props.height : \"30px\"};\n      line-height: 12.5px;\n      font-size: 12px;\n      padding: 7px 9px;\n    `}\n\n    ${(props) =>\n    props.square &&\n    css`\n      width: ${props.square};\n      height: ${props.square};\n    `}\n\n    ${(props) =>\n    props.clear &&\n    css`\n      border: none;\n      background: transparent;\n    `}\n    ${(props) =>\n    props.pad &&\n    css`\n      padding: ${props.pad};\n    `}\n`;\n\nconst InProgress = keyframes`\n  to {\n    width: 0%;\n  }\n`;\n\nconst StyleBtnGroup = styled.div`\n  border: 1px solid ${(props) => props.theme.PrimaryColor};\n  border-radius: ${(props) =>\n    props.rounded ? \"26px\" : props.theme.SecondaryRadius};\n\n  button {\n    margin: 0;\n    border: none;\n    width: calc(100% / ${(props) => props.number});\n  }\n`;\n\nexport const ButtonGroup = (props) => {\n  const { list, rounded, small, onClick, active } = props;\n  return (\n    <StyleBtnGroup\n      rounded={rounded}\n      small={small}\n      number={list ? list.length : 1}\n    >\n      {list.map((item, index) => {\n        return (\n          <Button\n            key={index}\n            pale={active === item.key ? false : true}\n            rounded={rounded}\n            small={small}\n            onClick={active === item.key ? null : () => onClick(item.key)}\n          >\n            {item.label}\n          </Button>\n        );\n      })}\n    </StyleBtnGroup>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Input.components.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/EmptyState.components.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Table.components.js",["577","578"],"import React from \"react\";\nimport pluralize from \"pluralize\";\nimport styled from \"styled-components\";\nimport { darken, lighten, transparentize } from \"polished\";\nimport Pagination from \"rc-pagination\";\nimport Table from \"rc-table\";\n\n// import { props => props.theme } from \"../utils/props => props.theme\";\n\nexport const TableWrapper = styled.div`\n  display: block;\n  margin: 5px 0;\n  font-size: ${(props) => props.theme.SecondaryFontSize};\n  background-color: ${(props) => props.theme.TertiaryDark};\n  overflow-x: auto;\n\n  & table {\n    width: 100%;\n    border-collapse: collapse;\n\n    & thead {\n      /* background: ${(props) => lighten(0.1, props.theme.PrimaryGrey)}; */\n      & th {\n        text-align: left;\n        padding: 10px 15px;\n        text-transform: capitalize;\n        border-bottom: 1px solid\n          ${(props) => lighten(0.66, props.theme.PrimaryTextColor)};\n\n        font-size: ${(props) => props.theme.SecondaryFontSize};\n        color: ${(props) => props.theme.PrimaryTextColor};\n        font-weight: bold;\n      }\n    }\n    & tbody {\n      color: ${(props) => props.theme.SecondaryTextColor}\n      & tr:nth-child(even) {\n        // background: ${(props) => props.theme.SecondaryDark};\n      }\n      & tr {\n        // border-bottom: 1px solid ${(props) =>\n          lighten(0.66, props.theme.PrimaryTextColor)};\n        // border-left: 1px solid ${(props) =>\n          lighten(1, props.theme.PrimaryColor)};\n        transition: all 0.1s ease-out;\n        & td:first-child {\n          border-left: none;\n        }\n        & td:last-child {\n        }\n        :hover {\n          //   border-left: 1px solid ${(props) =>\n            lighten(0, props.theme.PrimaryColor)};\n          //   background-color: ${(props) =>\n            lighten(0.46, props.theme.PrimaryColor)};\n            background-color: ${(props) => props.theme.PrimaryDark};\n            // color: red;\n        }\n      }\n\n      & td {\n        padding: 10px 15px;\n        font-size: ${(props) => props.theme.SecondaryFontSize};\n        // border-left: 1px solid ${(props) =>\n          lighten(0.66, props.theme.PrimaryTextColor)};\n        transition: ${(props) => props.theme.PrimaryTransition};\n      }\n      & td.text-center {\n        text-align: center !important;\n      }\n\n      & td.uppercase {\n        text-transform: uppercase;\n      }\n    }\n  }\n`;\n\nconst PaginationWrapper = styled.div`\n  text-align: right;\n  color: ${(props) => props.theme.PrimaryFontColor};\n  position: relative;\n\n  & .rc-pagination {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    display: inline-flex;\n    flex-direction: row;\n\n    & .rc-pagination-prev {\n      & a {\n        &:after {\n          font-family: \"confluencebits\";\n          content: \"\\\\f104\";\n          color: ${(props) => props.theme.PrimaryColor};\n          /* font-size: 18px; */\n          font-weight: bold;\n        }\n      }\n    }\n    & .rc-pagination-next {\n      & a {\n        &:after {\n          font-family: \"confluencebits\";\n          content: \"\\\\f105\";\n          color: ${(props) => props.theme.PrimaryColor};\n          /* font-size: 18px; */\n          font-weight: bold;\n        }\n      }\n    }\n    & > li {\n      height: 40px;\n      width: 40px;\n      border-radius: 50%;\n      display: block;\n      text-align: center;\n      padding: 10px 0;\n      box-sizing: border-box;\n      font-size: 12px;\n      margin: 0 2px;\n\n      &:hover {\n        border-color: ${(props) => props.theme.PrimaryColor};\n      }\n\n      transition: background-color 0.3s ease-out;\n      cursor: pointer;\n      &.rc-pagination-disabled {\n        color: #ccc;\n        & a:after {\n          color: #ccc;\n          font-weight: normal;\n        }\n        &:hover {\n          background: none;\n        }\n      }\n      &.rc-pagination-item-active {\n        color: ${(props) => props.theme.PrimaryColor};\n        font-weight: bold;\n        padding: 10px 0;\n        // margin-top: -1px;\n        // height: 51px;\n        & a {\n          color: ${(props) => props.theme.PrimaryColor};\n        }\n      }\n      &.rc-pagination-prev,\n      &.rc-pagination-next {\n        border: 1px solid ${(props) => props.theme.SecondaryTextColor};\n\n        &:hover {\n          border-color: ${(props) => props.theme.PrimaryColor};\n        }\n        a {\n          text-decoration: none;\n        }\n      }\n      &:active {\n        outline: none;\n      }\n      &:focus {\n        outline: none;\n      }\n      &:hover {\n        outline: none;\n        background-color: ${(props) =>\n          lighten(0.7, props.theme.PrimaryFontColor)};\n      }\n    }\n  }\n  & .rc-pagination-jump-next,\n  .rc-pagination-jump-prev {\n    & a:after {\n      content: none;\n    }\n  }\n  & li.rc-pagination-total-text {\n    width: auto;\n    border: none;\n    padding: 10px 10px;\n    background: none;\n    opacity: 0.6;\n    font-size: 12px;\n    &:hover {\n      background: none;\n    }\n  }\n  & .page-sizer {\n    display: inline-block;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 120px;\n    text-align: left;\n    & .flexisaf__control {\n      height: 26px;\n      margin: 5px;\n    }\n\n    & .flexisaf__menu {\n      position: absolute;\n      top: unset;\n      left: 5px;\n      bottom: 35px;\n      z-index: 1000;\n    }\n\n    & .flexisaf__value-container {\n      height: 100%;\n    }\n  }\n\n  @media screen and (max-width: 600px) {\n    & .page-sizer {\n      display: none;\n    }\n  }\n`;\n\nexport const TableComponent = (props) => {\n  return (\n    <TableWrapper>\n      <Table {...props}>{null}</Table>\n      {props.children && <div>{props.children}</div>}\n    </TableWrapper>\n  );\n};\n\nexport class PaginationComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageSize: this.props.pageCounts[0],\n    };\n  }\n\n  changePages = (selectedOption) => {\n    this.setState({ pageSize: selectedOption });\n    this.props.changePageSize(selectedOption);\n  };\n  render() {\n    return (\n      <PaginationWrapper>\n        <div className=\"page-sizer\">\n          {/* {this.props.itemsDisplayed && (\n            <SimpleSelect\n              placeholder=\"items\"\n              options={this.props.pageCounts}\n              value={{\n                value: this.props.pageSize,\n                label: `${this.props.pageSize} Rows`,\n              }}\n              onChange={this.changePages}\n              isSearchable={false}\n            />\n          )} */}\n        </div>\n        <Pagination\n          {...this.props}\n          showTotal={(total, range) =>\n            `${range[0]} - ${range[1]} of ${total} ${\n              total > 1 ? pluralize(this.props.valueType) : this.props.valueType\n            }`\n          }\n          pageSize={this.props.pageSize}\n        />\n      </PaginationWrapper>\n    );\n  }\n}\n\nPaginationComponent.defaultProps = {\n  valueType: \"item\",\n  itemsDisplayed: false,\n  current: 0,\n  total: 0,\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/style.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/utils/utils.js",["579","580"],"import moment, { utc } from \"moment\";\n\nexport const asyncLocalStorage = {\n  setItem: function (key, value) {\n    return Promise.resolve().then(function () {\n      localStorage.setItem(key, value);\n    });\n  },\n  getItem: function (key) {\n    return Promise.resolve().then(function () {\n      return localStorage.getItem(key);\n    });\n  },\n  clear: function (key) {\n    return Promise.resolve().then(function () {\n      return localStorage.clear();\n    });\n  },\n};\n\nexport const asyncSessionStorage = {\n  setItem: function (key, value) {\n    return Promise.resolve().then(function () {\n      sessionStorage.setItem(key, value);\n    });\n  },\n  getItem: function (key) {\n    return Promise.resolve().then(function () {\n      return sessionStorage.getItem(key);\n    });\n  },\n  clear: function (key) {\n    return Promise.resolve().then(function () {\n      return sessionStorage.clear();\n    });\n  },\n};\n\nexport const hash = (value) => {\n  if (value) {\n    let h = 0;\n    let l = value.length;\n    let i = 0;\n    if (l > 0) while (i < l) h = ((h << 5) - h + value.charCodeAt(i++)) | 0;\n    return Math.abs(h);\n  } else {\n    return value;\n  }\n};\n\nexport const timeConverter = (value) => {\n  // converts seconds to MM:SS format\n  if (value) {\n    let hr = value && Math.floor((value / 3600) << 0);\n    let min = value && Math.floor((value / 60) << 0);\n    let sec = value && Math.floor(value % 60);\n    let duration = `${min}:${sec}`;\n    if (hr > 0) {\n      min = min % (hr * 60);\n      duration = `${hr}:${min}:${sec}`;\n    }\n    return duration;\n  } else return value;\n};\n\nexport const getInputSelection = (el) => {\n  var start = 0,\n    end = 0,\n    normalizedValue,\n    range,\n    textInputRange,\n    len,\n    endRange;\n\n  if (\n    typeof el.selectionStart == \"number\" &&\n    typeof el.selectionEnd == \"number\"\n  ) {\n    start = el.selectionStart;\n    end = el.selectionEnd;\n  } else {\n    range = document.selection.createRange();\n\n    if (range && range.parentElement() === el) {\n      len = el.value.length;\n      normalizedValue = el.value.replace(/\\r\\n/g, \"\\n\");\n\n      // Create a working TextRange that lives only in the input\n      textInputRange = el.createTextRange();\n      textInputRange.moveToBookmark(range.getBookmark());\n\n      // Check if the start and end of the selection are at the very end\n      // of the input, since moveStart/moveEnd doesn't return what we want\n      // in those cases\n      endRange = el.createTextRange();\n      endRange.collapse(false);\n\n      if (textInputRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n        start = end = len;\n      } else {\n        start = -textInputRange.moveStart(\"character\", -len);\n        start += normalizedValue.slice(0, start).split(\"\\n\").length - 1;\n\n        if (textInputRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n          end = len;\n        } else {\n          end = -textInputRange.moveEnd(\"character\", -len);\n          end += normalizedValue.slice(0, end).split(\"\\n\").length - 1;\n        }\n      }\n    }\n  }\n\n  return {\n    start: start,\n    end: end,\n  };\n};\n\nexport const calcViewMode = () => {\n  let viewWidth = window.innerWidth;\n  if (600 > viewWidth) {\n    return \"mobile\";\n  } else if (900 > viewWidth) {\n    return \"tablet\";\n  } else {\n    return \"desktop\";\n  }\n};\n\nexport const getYear = (time) => {\n  let year = moment().format(\"YYYY\");\n  if (time) {\n    let year = moment(time, \"DD/MM/YYYY HH:mm:ss\").format(\"YYYY\");\n  }\n  return year;\n};\n\nexport const timeElapsed = (thenProps, nowProps, endText) => {\n  let then = thenProps\n    ? moment(thenProps, \"DD/MM/YYYY HH:mm:ss\")\n    : moment().utc();\n  let now = nowProps ? moment(nowProps, \"DD/MM/YYYY HH:mm:ss\") : moment().utc();\n  let thenString = then.format(\"DD/MM/YYYY HH:mm:ss\");\n  let nowString = now.format(\"DD/MM/YYYY HH:mm:ss\");\n\n  now = moment(nowString, \"DD/MM/YYYY HH:mm:ss\");\n  then = moment(thenString, \"DD/MM/YYYY HH:mm:ss\");\n\n  thenString = then.format(\"DD/MM/YYYY HH:mm:ss\");\n  nowString = now.format(\"DD/MM/YYYY HH:mm:ss\");\n\n  const elapsedTime = moment(now - then).utc();\n  const months = elapsedTime.format(\"M\") - 1;\n  const days = elapsedTime.format(\"D\") - 1;\n  const hours = elapsedTime.format(\"HH\");\n  const minutes = elapsedTime.format(\"mm\");\n  const seconds = elapsedTime.format(\"ss\");\n\n  const statement = (value, type) => {\n    return `${Number(value)} ${type}${value > 1 ? \"s\" : \" \"} ${\n      endText ? endText : \"ago\"\n    }`;\n  };\n\n  if (then > now) {\n    return statement(0, \"second\");\n  }\n\n  if (months > 0) {\n    return statement(months, \"month\");\n  }\n\n  if (days > 0) {\n    return statement(days, \"day\");\n  }\n\n  if (hours > 0) {\n    return statement(hours, \"hour\");\n  }\n\n  if (minutes > 0) {\n    return statement(minutes, \"min\");\n  }\n\n  if (seconds > 0) {\n    return statement(seconds, \"second\");\n  }\n};\n\nexport const formatCurrency = (number) => {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n};\n\nexport const formatDate = (date) =>\n  moment(date, \"YYYY-MM-DD\").format(\"DD MMM YYYY\");\n\nexport const truncateText = (text, limit, limitExtension) => {\n  let extension = limitExtension ? limitExtension : \"...\";\n  let extensionPlus = limitExtension ? limitExtension.length : 3;\n  let extensionLimit = limit ? limit : 17;\n\n  if (text) {\n    let value =\n      text.length > extensionLimit\n        ? `${text.slice(0, extensionLimit + extensionPlus)}${extension}`\n        : text;\n    return value;\n  } else {\n    return text;\n  }\n};\n\nexport const removeDuplicate = (arr, key) => {\n  let data = [];\n  arr &&\n    arr.forEach((item) => {\n      let index = data.findIndex((list) => list[key] === item[key]);\n      if (index === -1) {\n        data.push(item);\n      } else {\n        return null;\n      }\n    });\n  return data;\n};\n\nexport const sortTime = (arr, key) => {\n  let data = arr.sort(\n    (a, b) =>\n      (a ? moment(a[key], \"DD/MM/YYYY HH:mm:ss\") : \"\") -\n      (b ? moment(b[key], \"DD/MM/YYYY HH:mm:ss\") : \"\")\n  );\n  return data;\n};\n\nexport const getBase64 = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n};\n\nfunction round(value, precision) {\n  var multiplier = Math.pow(10, precision || 0);\n  return Math.round(value * multiplier) / multiplier;\n}\n\nexport const formatCount = (value) => {\n  if (1000 > value) return `${value}`;\n  if (1000000 > value) return `${round(value / 1000, 1)}k`;\n  if (1000000000 > value) return `${round(value / 1000000, 1)}M`;\n  return value;\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/SignUp/Step1/index.js",["581"],"import { connect } from \"dva\";\nimport { createForm } from \"rc-form\";\nimport { Step1 } from \"./Step1\";\nimport { routerRedux } from \"dva/router\";\n\nexport const mapStateToProps = (state, ownProps) => {\n  const { loading, authentication, auxillary } = state;\n  const { regForm } = authentication;\n  const { stateList } = auxillary;\n  const modiStateList = stateList.map((item) => ({\n    label: item.name,\n    ...item,\n  }));\n  return {\n    regForm,\n    modiStateList,\n  };\n};\n\nexport const mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    redirect(pathname) {\n      dispatch(routerRedux.push({ pathname: `${pathname}` }));\n    },\n    fetchStates(data) {\n      dispatch({ type: \"auxillary/getAllStates\" });\n    },\n    nextStep(data) {\n      dispatch({\n        type: \"authentication/save\",\n        payload: { regForm: data, regStep: 2 },\n      });\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(createForm()(Step1));\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/SignUp/Step2/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/UserManagement/CreateModal/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/Rent/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/Appraisal/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Common/FilterWrapper/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/bodyLayout/bodyLayout.js",["582","583","584"],"import React, { useState, useEffect } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { transparentize } from \"polished\";\nimport SideBar from \"../sideBar/index\";\n\nimport { calcViewMode } from \"../../../utils/utils\";\n// import { Theme } from \"../../../utils/theme\";\n\nconst MainBody = styled.div`\n  display: flex;\n  flex-direction: wrap;\n  min-height: 100vh;\n  margin-top: 0;\n\n  & .main-content {\n    background: ${(props) => props.theme.PrimaryDark};\n    transition: all 0.5s;\n    -webkit-transition: all 0.25s;\n    width: ${(props) =>\n      props.collaspe ? \"calc(100% - 60px)\" : \"calc(100% - 230px)\"};\n    ${(props) =>\n      props.float &&\n      css`\n        width: 100%;\n      `}\n    @media print {\n      width: 100%;\n    }\n  }\n\n  & .main-sidebar {\n    background: ${(props) => props.theme.SideBarColor};\n    min-width: ${(props) => (props.collaspe ? \"60px\" : \"230px\")};\n    transition: all 0.5s;\n    -webkit-transition: all 0.25s;\n    z-index: 306;\n    ${(props) =>\n      props.float &&\n      css`\n        min-width: 0;\n      `}\n  }\n\n  .dark-wrapper {\n    background: ${`${(props) => props.theme.SecondaryDark}50`};\n    transition: all 0.5s;\n    -webkit-transition: all 0.25s;\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    top: 0;\n    bottom: 0;\n    position: fixed;\n    z-index: 40;\n  }\n\n  & .sidebar-chat {\n    background: ${(props) => props.theme.PrimaryDark};\n    padding: 0.2rem;\n    width: 300px;\n  }\n\n  & .body-layout-children {\n    // padding-top: 59px;\n  }\n`;\n\nexport const BodyLayout = (props) => {\n  // state props received\n  const { collaspe, float } = props;\n  // diaptch props received\n  const { setCollaspe, setFloat } = props;\n\n  let viewMode = calcViewMode();\n\n  useEffect(() => {\n    if (viewMode === \"desktop\") {\n      setCollaspe(false);\n      setFloat(false);\n    } else if (viewMode === \"tablet\") {\n      setCollaspe(true);\n      setFloat(false);\n    } else if (viewMode === \"mobile\") {\n      setCollaspe(true);\n      setFloat(true);\n    }\n  }, []);\n\n  const toggleSidebar = (props) => {\n    setCollaspe(props);\n  };\n\n  return (\n    <MainBody collaspe={collaspe} float={float}>\n      <div className=\"main-sidebar no-print\">\n        <SideBar\n          collaspe={collaspe}\n          float={float}\n          toggleSidebar={(event) => toggleSidebar(event)}\n          viewMode={viewMode}\n        />\n      </div>\n      {viewMode !== \"desktop\" && !collaspe ? (\n        <div className=\"dark-wrapper\" onClick={() => toggleSidebar(true)} />\n      ) : null}\n      <div className=\"main-content\">{props.children}</div>\n    </MainBody>\n  );\n};\n\nBodyLayout.propTypes = {};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/headerLayout/menu.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/headerLayout/headerlayout.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/File.components.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Avatar.components.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/Rent/Rent.js",["585","586","587","588","589","590","591"],"import React, { useState } from \"react\";\n\nimport { Input, InputDate } from \"../../../components/Input.components\";\nimport { Grid } from \"../../../components/Grid.components\";\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\nimport { ModalComponent } from \"../../../components/Modal.components\";\n\nimport { calcViewMode } from \"../../../utils/utils\";\nimport { PageTitle } from \"../../../components/style\";\n\nexport const Rent = (props) => {\n  // State props\n  const { rentModal, isLoading } = props;\n\n  // Dispatch props\n  const { form, createRent, closeModal } = props;\n  const { getFieldProps, getFieldError, validateFields } = form;\n\n  const [rentStart, setRentStart] = useState(new Date());\n  const [rentEnd, setRentEnd] = useState(new Date());\n\n  let viewMode = calcViewMode();\n\n  const onSubmit = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        const data = {\n          name: value.name.trim(),\n        };\n        createRent(data);\n      }\n    });\n  };\n  let errors;\n\n  return (\n    <>\n      <ModalComponent\n        show={rentModal}\n        onHide={closeModal}\n        title={<PageTitle margin=\"5px 0\">Parcel Rent</PageTitle>}\n        footer={\n          <>\n            <Button pale onClick={closeModal}>\n              Cancel\n            </Button>\n            <Button\n              progress={isLoading}\n              disabled={isLoading}\n              onClick={onSubmit}\n            >\n              Rent Parcel\n            </Button>\n          </>\n        }\n      >\n        <Boxed pad=\"0 0 20px 0\">\n          <Input\n            type=\"text\"\n            label=\"Renting To\"\n            placeholder=\"Enter name of tenant...\"\n            error={(errors = getFieldError(\"name\")) ? \"Name is required\" : null}\n            {...getFieldProps(\"name\", {\n              initialValue: \"\",\n              rules: [{ required: true }],\n            })}\n          />\n        </Boxed>\n        <Grid\n          desktop=\"repeat(2, 1fr)\"\n          tablet=\"repeat(2, 1fr)\"\n          mobile=\"repeat(1,1fr)\"\n        >\n          <Boxed pad=\"10px 0\">\n            <InputDate\n              label=\"Rent Start\"\n              placeholder=\"Select rent start...\"\n              selected={rentStart}\n              onChange={(date) => setRentStart(date)}\n              error={\n                (errors = getFieldError(\"rent_start\"))\n                  ? \"Rent start is required\"\n                  : null\n              }\n              {...getFieldProps(\"rent_start\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n              })}\n            />\n          </Boxed>\n          <Boxed pad=\"10px 0\">\n            <InputDate\n              label=\"Rent End\"\n              placeholder=\"Select rent end...\"\n              selected={rentEnd}\n              onChange={(date) => setRentEnd(date)}\n              error={\n                (errors = getFieldError(\"rent_end\"))\n                  ? \"Rent end is required\"\n                  : null\n              }\n              {...getFieldProps(\"rent_end\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n              })}\n            />\n          </Boxed>\n          <Boxed pad=\"10px 0\">\n            <Input\n              type=\"text\"\n              label=\"Rent Value\"\n              placeholder=\"Enter rent value...\"\n              error={\n                (errors = getFieldError(\"rent_value\"))\n                  ? \"Rent value is required\"\n                  : null\n              }\n              {...getFieldProps(\"rent_value\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n              })}\n            />\n          </Boxed>\n        </Grid>\n      </ModalComponent>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/UserManagement/CreateModal/CreateModal.js",["592","593","594","595","596","597","598","599","600","601","602","603","604","605","606"],"import React, { useState, useEffect } from \"react\";\n\nimport {\n  AsyncSelect,\n  Input,\n  InputDate,\n  SimpleSelect,\n} from \"../../../components/Input.components\";\nimport { Grid } from \"../../../components/Grid.components\";\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\nimport { ModalComponent } from \"../../../components/Modal.components\";\n\nimport { calcViewMode } from \"../../../utils/utils\";\nimport { PageTitle } from \"../../../components/style\";\n\nexport const CreateModal = (props) => {\n  // State props\n  const { createUserModal, rolesList, isLoading } = props;\n\n  // Dispatch props\n  const { form, createUser, closeModal, getAllRoles } = props;\n  const { getFieldProps, getFieldError, validateFields, getFieldValue } = form;\n\n  let viewMode = calcViewMode();\n\n  useEffect(() => {\n    getAllRoles({ page: 1, size: 50 });\n  }, []);\n\n  const onSubmit = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        const data = {\n          firstname: value.firstname.trim(),\n          middlename: value.middlename.trim(),\n          lastname: value.lastname.trim(),\n          email: value.email.trim(),\n          phone: value.phone.trim(),\n          role_id: value.role.id,\n          password: value.password,\n          enabled: true,\n        };\n        console.log({ data });\n        createUser(data);\n      }\n    });\n  };\n\n  const checkConfirmPassword = (value1, rule, value, callback, source) => {\n    if (value !== value1) {\n      callback(\"Passwords must match\");\n    } else {\n      callback();\n    }\n  };\n\n  const checkPassword = (value1, rule, value, callback, source) => {\n    if (value) {\n      let length = value.length;\n      let checkLength = length > 7;\n\n      if (checkLength) {\n        let numberTest = /\\d/.test(value);\n        let format = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n        let specialCharaterTest = value.match(format);\n        if (numberTest || specialCharaterTest) {\n          callback();\n        } else {\n          callback(\"Password must contain either a digit or special charater.\");\n        }\n      } else {\n        callback(\"Password must be atleast 8 characters\");\n      }\n    } else {\n      callback();\n    }\n  };\n\n  const modiRoleList =\n    rolesList && rolesList.map((item) => ({ ...item, label: item.name }));\n\n  let errors;\n\n  return (\n    <>\n      <ModalComponent\n        show={createUserModal}\n        onHide={closeModal}\n        title={<PageTitle margin=\"5px 0\">Add a new User</PageTitle>}\n        footer={\n          <>\n            <Button pale onClick={closeModal}>\n              Cancel\n            </Button>\n            <Button\n              progress={isLoading}\n              disabled={isLoading}\n              onClick={onSubmit}\n            >\n              Add User\n            </Button>\n          </>\n        }\n      >\n        <Grid\n          desktop=\"repeat(2, 1fr)\"\n          tablet=\"repeat(2, 1fr)\"\n          mobile=\"repeat(1,1fr)\"\n          pad=\"0 0 30px 0\"\n        >\n          <Boxed pad=\"10px 0\">\n            <Input\n              type=\"text\"\n              label=\"First Name\"\n              placeholder=\"Enter first name...\"\n              error={\n                (errors = getFieldError(\"firstname\"))\n                  ? \"First name is required\"\n                  : null\n              }\n              {...getFieldProps(\"firstname\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n              })}\n            />\n          </Boxed>\n          <Boxed pad=\"10px 0\">\n            <Input\n              type=\"text\"\n              label=\"Last Name\"\n              placeholder=\"Enter last name...\"\n              error={\n                (errors = getFieldError(\"lastname\"))\n                  ? \"Last name is required\"\n                  : null\n              }\n              {...getFieldProps(\"lastname\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n              })}\n            />\n          </Boxed>\n          <Boxed pad=\"10px 0\">\n            <Input\n              type=\"text\"\n              label=\"Middle Name\"\n              placeholder=\"Enter middle name...\"\n              error={\n                (errors = getFieldError(\"middlename\"))\n                  ? \"Middle name is required\"\n                  : null\n              }\n              {...getFieldProps(\"middlename\", {\n                initialValue: \"\",\n                rules: [{}],\n              })}\n            />\n          </Boxed>\n          <Boxed pad=\"10px 0\">\n            <Input\n              type=\"text\"\n              label=\"Email\"\n              placeholder=\"Enter email...\"\n              error={\n                (errors = getFieldError(\"email\")) ? \"Email is required\" : null\n              }\n              {...getFieldProps(\"email\", {\n                initialValue: \"\",\n                rules: [{ required: true, email: true }],\n              })}\n            />\n          </Boxed>\n          <Boxed pad=\"10px 0\">\n            <Input\n              type=\"text\"\n              label=\"Phone Number\"\n              placeholder=\"Enter phone number...\"\n              error={\n                (errors = getFieldError(\"phone\"))\n                  ? \"Phone number is required\"\n                  : null\n              }\n              {...getFieldProps(\"phone\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n              })}\n            />\n          </Boxed>\n          <Boxed pad=\"10px 0\">\n            <AsyncSelect\n              label=\"Role\"\n              placeholder=\"Select Role...\"\n              options={[...modiRoleList]}\n              error={\n                (errors = getFieldError(\"role\")) ? \"Role is required\" : null\n              }\n              {...getFieldProps(\"role\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n              })}\n            />\n          </Boxed>\n\n          <Boxed pad=\"10px 0\">\n            <Input\n              type=\"password\"\n              placeholder=\"New Password...\"\n              error={\n                getFieldError(\"password\") ? getFieldError(\"password\") : null\n              }\n              {...getFieldProps(\"password\", {\n                rules: [\n                  { required: true },\n                  {\n                    validator: checkPassword.bind(\n                      this,\n                      getFieldValue(\"password\")\n                    ),\n                  },\n                ],\n                initialValue: \"\",\n              })}\n            />\n          </Boxed>\n          <Boxed pad=\"10px 0\">\n            <Input\n              type=\"password\"\n              placeholder=\"Confirm Password...\"\n              error={\n                getFieldError(\"confirmPassword\")\n                  ? \"Confirm password must match password\"\n                  : null\n              }\n              {...getFieldProps(\"confirmPassword\", {\n                rules: [\n                  { required: true },\n                  {\n                    validator: checkConfirmPassword.bind(\n                      this,\n                      getFieldValue(\"password\")\n                    ),\n                  },\n                ],\n                initialValue: \"\",\n              })}\n            />\n          </Boxed>\n        </Grid>\n      </ModalComponent>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/Appraisal/Appraisal.js",["607","608","609","610","611","612","613","614","615","616"],"import React, { useEffect, useState } from \"react\";\nimport Upload from \"rc-upload\";\n\nimport { AsyncSelect, Input } from \"../../../components/Input.components\";\nimport { Grid } from \"../../../components/Grid.components\";\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\nimport { Alert } from \"../../../components/Alert.components\";\nimport { ModalComponent } from \"../../../components/Modal.components\";\n\nimport { calcViewMode, formatCurrency, getBase64 } from \"../../../utils/utils\";\nimport { Theme } from \"../../../utils/theme\";\nimport { PageTitle, Icon, FileIcon } from \"../../../components/style\";\n\nexport const Appraisal = (props) => {\n  // State props\n  const { appraisalModal, isLoading, appraisalTypes, parcelData } = props;\n\n  // Dispatch props\n  const { form, createAppraisal, closeModal, fetchAppraisalType } = props;\n  const { getFieldProps, getFieldError, validateFields, setFieldsValue } = form;\n\n  const [file, setFile] = useState({});\n  const [firstDivisionList, setFirstDivisionList] = useState([]);\n  const [secondDivisionList, setSecondDivisionList] = useState([]);\n\n  let viewMode = calcViewMode();\n\n  // handle logic for uploading an image\n  const beforeUpload = (file) => {\n    const isJEPG = file.type === \"application/pdf\";\n    if (!isJEPG) {\n      Alert.error(\"You can only upload PDF file.\");\n    }\n    const isLt10M = file.size / 1024 / 1024 < 10;\n    if (!isLt10M) {\n      Alert.error(\"Image must be smaller than 10MB!\");\n    }\n    if (isJEPG && isLt10M) {\n      handleFileUploader(file);\n      return isJEPG && isLt10M;\n    }\n  };\n\n  const handleFileUploader = (file) => {\n    getBase64(file).then((data) => {\n      const base64Data = data.split(\",\")[1];\n      setFile({\n        pdf: file,\n        base64: base64Data,\n        type: file.type,\n        name: file.name,\n        size: file.size,\n      });\n    });\n  };\n\n  useEffect(() => {\n    fetchAppraisalType();\n  }, []);\n\n  const onSubmit = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        console.log({ parcelData });\n        console.log(value);\n        let data = {\n          fileFormat: \"pdf\",\n          file: file.base64,\n        };\n        // createAppraisal(data);\n      }\n    });\n  };\n  let errors;\n\n  let modiAppraisalType = appraisalTypes.map((item) => {\n    return { label: item.description, ...item };\n  });\n\n  const handleFirstType = (item) => {\n    console.log({ item });\n    setFieldsValue({\n      type1SubDivision: null,\n      type2: null,\n      type2SubDivision: null,\n    });\n    const list = item.subTypes.map((element) => ({\n      label: element.description,\n      ...element,\n    }));\n    setFirstDivisionList(list);\n  };\n\n  const handleSecondType = (item) => {\n    console.log({ item });\n\n    const list = item.subTypes.map((element) => ({\n      label: element.description,\n      ...element,\n    }));\n    setFieldsValue({ type2SubDivision: null });\n    setSecondDivisionList(list);\n  };\n\n  return (\n    <>\n      <ModalComponent\n        show={appraisalModal}\n        size={\"md\"}\n        onHide={closeModal}\n        title={<PageTitle margin=\"5px 0\">Plot Appraisal</PageTitle>}\n        footer={\n          <>\n            <Button pale onClick={closeModal}>\n              Cancel\n            </Button>\n            <Button\n              progress={isLoading}\n              disabled={isLoading}\n              onClick={onSubmit}\n            >\n              Appraise Plot\n            </Button>\n          </>\n        }\n      >\n        <Grid\n          desktop=\"repeat(2, 1fr)\"\n          tablet=\"repeat(2, 1fr)\"\n          mobile=\"repeat(1,1fr)\"\n        >\n          <Boxed pad=\"10px 0\">\n            <AsyncSelect\n              label=\"Appraisal Type 1\"\n              placeholder=\"Select Type...\"\n              options={modiAppraisalType}\n              error={\n                (errors = getFieldError(\"type1\"))\n                  ? \"Appraisal Type is required\"\n                  : null\n              }\n              {...getFieldProps(\"type1\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n                onChange: (value) => handleFirstType(value),\n              })}\n            />\n          </Boxed>\n\n          <Boxed pad=\"10px 0\">\n            <AsyncSelect\n              label=\" Sub Division\"\n              placeholder=\"Select sub division...\"\n              options={firstDivisionList}\n              error={\n                (errors = getFieldError(\"type1SubDivision\"))\n                  ? \"Sub Division is required\"\n                  : null\n              }\n              {...getFieldProps(\"type1SubDivision\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n              })}\n            />\n          </Boxed>\n\n          <Boxed>\n            <Input\n              label=\"Lease Term\"\n              type=\"number\"\n              placeholder=\"Select lease term...\"\n              error={\n                (errors = getFieldError(\"type1\"))\n                  ? \"Appraisal Type is required\"\n                  : null\n              }\n              {...getFieldProps(\"type1\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n                onChange: (value) => handleFirstType(value),\n              })}\n            />\n          </Boxed>\n          {/* <Boxed pad=\"10px 0\">\n            <AsyncSelect\n              label=\" Sub Division\"\n              placeholder=\"Select sub division...\"\n              options={firstDivisionList}\n              error={\n                (errors = getFieldError(\"type1SubDivision\"))\n                  ? \"Sub Division is required\"\n                  : null\n              }\n              {...getFieldProps(\"type1SubDivision\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n              })}\n            />\n          </Boxed>\n          <Boxed pad=\"10px 0\">\n            <AsyncSelect\n              label=\"Appraisal Type 2\"\n              placeholder=\"Select Type...\"\n              options={modiAppraisalType}\n              error={\n                (errors = getFieldError(\"type2\"))\n                  ? \"Appraisal Type is required\"\n                  : null\n              }\n              {...getFieldProps(\"type2\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n                onChange: (value) => handleSecondType(value),\n              })}\n            />\n          </Boxed> */}\n          <Boxed pad=\"10px 0\">\n            <AsyncSelect\n              label=\" Sub Division\"\n              placeholder=\"Select sub division...\"\n              options={secondDivisionList}\n              error={\n                (errors = getFieldError(\"type2SubDivision\"))\n                  ? \"Sub Division is required\"\n                  : null\n              }\n              {...getFieldProps(\"type2SubDivision\", {\n                initialValue: \"\",\n                rules: [{ required: true }],\n              })}\n            />\n          </Boxed>\n        </Grid>\n        <Boxed pad=\"10px 0\">\n          <Text fontSize={Theme.SecondaryFontSize} fontWeight=\"bold\">\n            Upload Instrument\n          </Text>\n          {file.base64 ? (\n            <Boxed display=\"flex\" pad=\"10px\">\n              <FileIcon type=\"pdf\" size=\"60px\" />\n              <Boxed pad=\"0 10px\">\n                <Text> {file.name}</Text>\n                <Text fontSize={Theme.SecondaryFontSize}>\n                  {\" \"}\n                  {file.size &&\n                    formatCurrency(Math.floor(file.size / 1024) || 0)}{\" \"}\n                  KB\n                </Text>\n              </Boxed>\n            </Boxed>\n          ) : (\n            <Upload\n              type=\"drap\"\n              multiple={false}\n              beforeUpload={(pdf) => beforeUpload(pdf)}\n              onChange={() => {}}\n            >\n              <Boxed\n                height=\"120px\"\n                width=\"100%\"\n                border={`1px dashed ${Theme.SecondaryTextColor}`}\n                bColor={`${Theme.SecondaryDark}50`}\n                display=\"flex\"\n                boxShadow={Theme.PrimaryShadow}\n              >\n                <Boxed margin=\"auto\" align=\"center\">\n                  <Icon\n                    className=\"icon-upload-cloud-1\"\n                    fontSize=\"35px\"\n                    color={Theme.PrimaryTextColor}\n                  />\n                  <Text>Click or drag instrument file here to upload. </Text>\n                </Boxed>\n              </Boxed>\n            </Upload>\n          )}\n        </Boxed>\n      </ModalComponent>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/SignUp/Step1/Step1.js",["617","618","619","620","621","622","623","624","625","626","627","628","629","630","631"],"import React, { useEffect, useState } from \"react\";\n\nimport {\n  Input,\n  RadioButton,\n  AsyncSelect,\n} from \"../../../components/Input.components\";\nimport { Grid } from \"../../../components/Grid.components\";\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\n\nimport { calcViewMode } from \"../../../utils/utils\";\n\nimport { Theme } from \"../../../utils/theme\";\n\nexport const Step1 = (props) => {\n  // state props received\n  const { regForm, modiStateList } = props;\n\n  // dispatch props received\n  const { form, nextStep, redirect, fetchStates } = props;\n  const {\n    getFieldProps,\n    getFieldError,\n    validateFields,\n    setFieldsValue,\n    getFieldValue,\n  } = form;\n  let viewMode = calcViewMode();\n\n  const [lgaOriginList, setLgaOriginList] = useState([]);\n  const [lgaResidenceList, setLgaResidenceList] = useState([]);\n\n  const onSubmit = () => {\n    validateFields((error, value) => {\n      if (!error) {\n        console.log({ value });\n        const data = {\n          firstname: value.firstname.trim(),\n          middlename: value.middlename ? value.middlename.trim() : \"\",\n          lastname: value.lastname.trim(),\n          phone: value.phone.trim(),\n          email: value.email.trim(),\n          password: value.password,\n          gender: value.gender,\n          dob: value.dob,\n          stateOfOrigin: value.stateOfOrigin,\n          lgaOfOrigin: value.lgaOfOrigin,\n          stateOfResidence: value.stateOfResidence,\n          lgaOfResidence: value.lgaOfResidence,\n          residentialAddress: value.residentialAddress,\n          nin: value.nin,\n        };\n        nextStep(data);\n      }\n    });\n  };\n\n  const onEnter = (e) => {\n    e.stopPropagation();\n    e.key === \"Enter\" && onSubmit();\n  };\n\n  const checkConfirmPassword = (value1, rule, value, callback, source) => {\n    if (value !== value1) {\n      callback(\"Passwords must match\");\n    } else {\n      callback();\n    }\n  };\n\n  const checkPassword = (value1, rule, value, callback, source) => {\n    if (value) {\n      let length = value.length;\n      let checkLength = length > 7;\n\n      if (checkLength) {\n        let numberTest = /\\d/.test(value);\n        let format = /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/;\n        let specialCharaterTest = value.match(format);\n        if (numberTest || specialCharaterTest) {\n          callback();\n        } else {\n          callback(\"Password must contain either a digit or special charater.\");\n        }\n      } else {\n        callback(\"Password must be atleast 8 characters\");\n      }\n    } else {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    fetchStates({});\n  }, []);\n\n  let errors;\n\n  const handleStateOriginSelect = (item) => {\n    setFieldsValue({ lgaOfOrigin: {} });\n    let list = item.lgas.map((element) => ({\n      label: element.name,\n      ...element,\n    }));\n    setLgaOriginList(list ? list : []);\n  };\n\n  const handleStateResidenceSelect = (item) => {\n    console.log({ item });\n    setFieldsValue({ lgaOfResidence: {} });\n    let list = item.lgas.map((element) => ({\n      label: element.name,\n      ...element,\n    }));\n    setLgaResidenceList(list ? list : []);\n  };\n\n  return (\n    <>\n      <Text fontSize={Theme.SecondaryFontSize} fontWeight=\"600\">\n        Gender\n      </Text>\n      <Boxed pad=\"10px 0\" display=\"flex\">\n        <RadioButton\n          name=\"gender\"\n          value=\"M\"\n          label=\"Male\"\n          onClick={() => setFieldsValue({ gender: \"M\" })}\n          {...getFieldProps(\"gender\", {\n            initialValue: regForm.gender ? regForm.gender : \"\",\n            rules: [{ required: true }],\n          })}\n          style={{ margin: \"0 20px 0 0\" }}\n        />\n        <RadioButton\n          name=\"gender\"\n          value=\"F\"\n          label=\"Female\"\n          onClick={() => setFieldsValue({ gender: \"F\" })}\n          {...getFieldProps(\"gender\", {\n            initialValue: regForm.gender ? regForm.gender : \"\",\n            rules: [{ required: true }],\n          })}\n        />\n      </Boxed>\n      <Grid\n        default=\"repeat(3,1fr)\"\n        tablet=\"repeat(3,1fr)\"\n        mobile=\"repeat(1,1fr)\"\n      >\n        <Boxed>\n          <Input\n            label=\"National Identification Number\"\n            type=\"text\"\n            placeholder=\"Enter National Identification Number...\"\n            {...getFieldProps(\"nin\", {\n              rules: [],\n              initialValue: regForm.nin ? regForm.nin : \"\",\n            })}\n          />\n        </Boxed>\n        <div />\n        <div />\n        <Boxed margin=\"10px 0\">\n          <Input\n            label=\"First Name\"\n            type=\"text\"\n            placeholder=\"Your first name...\"\n            error={\n              (errors = getFieldError(\"firstname\"))\n                ? \"First Name is required\"\n                : null\n            }\n            {...getFieldProps(\"firstname\", {\n              initialValue: regForm.firstname ? regForm.firstname : \"\",\n              rules: [{ required: true }],\n            })}\n          />\n        </Boxed>\n        <Boxed margin=\"10px 0\">\n          <Input\n            label=\"Middle Name\"\n            type=\"text\"\n            placeholder=\"Your middle name...\"\n            {...getFieldProps(\"middlename\", {\n              initialValue: regForm.middlename ? regForm.middlename : \"\",\n              rules: [],\n            })}\n          />\n        </Boxed>\n        <Boxed margin=\"10px 0\">\n          <Input\n            label=\"Last Name\"\n            type=\"text\"\n            placeholder=\"Your last name...\"\n            error={\n              (errors = getFieldError(\"lastname\"))\n                ? \"Last Name is required\"\n                : null\n            }\n            {...getFieldProps(\"lastname\", {\n              initialValue: regForm.lastname ? regForm.lastname : \"\",\n              rules: [{ required: true }],\n            })}\n          />\n        </Boxed>\n\n        <Boxed margin=\"10px 0\">\n          <Input\n            label=\"Email \"\n            type=\"email\"\n            placeholder=\"Your Email...\"\n            error={\n              (errors = getFieldError(\"email\")) ? \"Email  is required\" : null\n            }\n            {...getFieldProps(\"email\", {\n              initialValue: regForm.email ? regForm.email : \"\",\n              rules: [{ required: true, type: \"email\" }],\n            })}\n          />\n        </Boxed>\n        <Boxed margin=\"10px 0\">\n          <Input\n            label=\"Phone Number\"\n            type=\"number\"\n            placeholder=\"Your phone number...\"\n            error={\n              (errors = getFieldError(\"phone\"))\n                ? \"Phone number is required\"\n                : null\n            }\n            {...getFieldProps(\"phone\", {\n              initialValue: regForm.phone ? regForm.phone : \"\",\n              rules: [{ required: true }],\n            })}\n          />\n        </Boxed>\n        <Boxed margin=\"10px 0\">\n          <Input\n            label=\"Date of Birth\"\n            type=\"date\"\n            placeholder=\"Your Date of birth...\"\n            error={\n              (errors = getFieldError(\"dob\"))\n                ? \"Date of birth is required\"\n                : null\n            }\n            {...getFieldProps(\"dob\", {\n              initialValue: regForm.dob ? regForm.dob : \"\",\n              rules: [{ required: true }],\n            })}\n          />\n        </Boxed>\n\n        <Boxed margin=\"10px 0\">\n          <Input disabled label=\"Country of Origin\" value=\"Nigeria\" />\n        </Boxed>\n        <Boxed margin=\"10px 0\">\n          <AsyncSelect\n            label=\"State of Origin\"\n            placeholder=\"Select your state of origin...\"\n            options={modiStateList ? modiStateList : []}\n            error={\n              (errors = getFieldError(\"stateOfOrigin\"))\n                ? \"State of origin is required\"\n                : null\n            }\n            {...getFieldProps(\"stateOfOrigin\", {\n              initialValue: regForm.stateOfOrigin ? regForm.stateOfOrigin : \"\",\n              rules: [{ required: true }],\n              onChange: (value) => handleStateOriginSelect(value),\n            })}\n          />\n        </Boxed>\n        <Boxed margin=\"10px 0\">\n          <AsyncSelect\n            label=\"Local Gov. Area of Origin\"\n            placeholder=\"Select your LGA of Origin...\"\n            options={lgaOriginList ? lgaOriginList : []}\n            error={\n              (errors = getFieldError(\"lgaOfOrigin\")) ? \"LGA is required\" : null\n            }\n            {...getFieldProps(\"lgaOfOrigin\", {\n              initialValue: regForm.lgaOfOrigin ? regForm.lgaOfOrigin : \"\",\n              rules: [{ required: true }],\n            })}\n          />\n        </Boxed>\n\n        <Boxed margin=\"10px 0\">\n          <Input disabled label=\"Country of Residence\" value=\"Nigeria\" />\n        </Boxed>\n        <Boxed margin=\"10px 0\">\n          <AsyncSelect\n            label=\"State of Residence\"\n            placeholder=\"Select your state of Residence...\"\n            options={modiStateList ? modiStateList : []}\n            error={\n              (errors = getFieldError(\"stateOfResidence\"))\n                ? \"State of Residence is required\"\n                : null\n            }\n            {...getFieldProps(\"stateOfResidence\", {\n              initialValue: regForm.stateOfResidence\n                ? regForm.stateOfResidence\n                : \"\",\n              rules: [{ required: true }],\n              onChange: (value) => handleStateResidenceSelect(value),\n            })}\n          />\n        </Boxed>\n        <Boxed margin=\"10px 0\">\n          <AsyncSelect\n            label=\"Local Gov. Area of Residence\"\n            placeholder=\"Select your LGA of Residence...\"\n            options={lgaResidenceList ? lgaResidenceList : []}\n            error={\n              (errors = getFieldError(\"lgaOfResidence\"))\n                ? \"LGA is required\"\n                : null\n            }\n            {...getFieldProps(\"lgaOfResidence\", {\n              initialValue: regForm.lgaOfResidence\n                ? regForm.lgaOfResidence\n                : \"\",\n              rules: [{ required: true }],\n            })}\n          />\n        </Boxed>\n      </Grid>\n      <Boxed>\n        <Input\n          label=\"Residential Address\"\n          type=\"text\"\n          placeholder=\"Enter residential address...\"\n          error={\n            getFieldError(\"residentialAddress\")\n              ? getFieldError(\"residentialAddress\")\n              : null\n          }\n          {...getFieldProps(\"residentialAddress\", {\n            rules: [{ required: true }],\n            initialValue: regForm.residentialAddress\n              ? regForm.residentialAddress\n              : \"\",\n          })}\n        />\n      </Boxed>\n      <Grid\n        desktop=\"repeat(3, 1fr)\"\n        tablet=\"repeat(2, 1fr)\"\n        mobile=\"repeat(1, 1fr)\"\n      >\n        <Boxed margin=\"10px 0\">\n          <Input\n            label=\"Password\"\n            type=\"password\"\n            placeholder=\"New Password...\"\n            error={getFieldError(\"password\") ? getFieldError(\"password\") : null}\n            {...getFieldProps(\"password\", {\n              rules: [\n                { required: true },\n                {\n                  validator: checkPassword.bind(\n                    this,\n                    getFieldValue(\"password\")\n                  ),\n                },\n              ],\n              initialValue: regForm.password ? regForm.password : \"\",\n            })}\n          />\n        </Boxed>\n\n        <Boxed margin=\"10px 0\">\n          <Input\n            label=\"Confirm Password\"\n            type=\"password\"\n            placeholder=\"Confirm Password...\"\n            onKeyPress={onEnter}\n            error={\n              getFieldError(\"confirmPassword\")\n                ? \"Confirm password must match password\"\n                : null\n            }\n            {...getFieldProps(\"confirmPassword\", {\n              rules: [\n                { required: true },\n                {\n                  validator: checkConfirmPassword.bind(\n                    this,\n                    getFieldValue(\"password\")\n                  ),\n                },\n              ],\n              initialValue: regForm.password ? regForm.password : \"\",\n            })}\n          />\n        </Boxed>\n      </Grid>\n      <Grid\n        desktop=\"repeat(2, 1fr)\"\n        tablet=\"repeat(2, 1fr)\"\n        mobile=\"repeat(2, 1fr)\"\n        pad=\"20px 0 0 0\"\n      >\n        <Boxed pad=\"5px 0 0 0\">\n          <Button onClick={onSubmit}>Next</Button>\n        </Boxed>\n      </Grid>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/SignUp/Step2/Step2.js",["632","633","634"],"import React, { useState } from \"react\";\nimport Upload from \"rc-upload\";\n\nimport { Grid } from \"../../../components/Grid.components\";\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\nimport { Alert } from \"../../../components/Alert.components\";\nimport { Icon } from \"../../../components/style\";\n\nimport { calcViewMode } from \"../../../utils/utils\";\n\nimport { Theme } from \"../../../utils/theme\";\nimport { getBase64 } from \"../../../utils/utils\";\n\nexport const Step2 = (props) => {\n  // state props\n  const { regForm, isLoading } = props;\n\n  // dispatch props\n  const { registerAccount, redirect, goBack } = props;\n  let viewMode = calcViewMode();\n\n  const [file, setFile] = useState({});\n\n  const onSubmit = ({ skip }) => {\n    if (file.base64 || skip) {\n      let data = {\n        ...regForm,\n      };\n      data[\"stateOfOrigin\"] = regForm.stateOfOrigin.stateId;\n      data[\"lgaOfOrigin\"] = regForm.lgaOfOrigin.lgaId;\n      data[\"stateOfResidence\"] = regForm.stateOfOrigin.stateId;\n      data[\"lgaOfResidence\"] = regForm.lgaOfOrigin.lgaId;\n\n      !skip && (data[\"photo\"] = file.base64);\n      registerAccount(data);\n    } else {\n      Alert.error(\"Upload is required\");\n    }\n  };\n\n  // handle logic for uploading an image\n  const beforeUpload = (file) => {\n    const isJEPG = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJEPG) {\n      Alert.error(\"You can only upload JEPG & PNG file.\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      Alert.error(\"Image must be smaller than 2MB!\");\n    }\n    if (isJEPG && isLt2M) {\n      handleFileUploader(file);\n      return isJEPG && isLt2M;\n    }\n  };\n\n  const handleFileUploader = (file) => {\n    getBase64(file).then((data) => {\n      const base64Data = data.split(\",\")[1];\n      setFile({\n        pdf: file,\n        base64: base64Data,\n        format: file.type,\n        name: file.name,\n      });\n    });\n  };\n\n  let errors;\n\n  return (\n    <>\n      <Grid\n        desktop=\"repeat(2, 1fr)\"\n        tablet=\"repeat(2, 1fr)\"\n        mobile=\"repeat(1, 1fr)\"\n        pad=\"20px 0\"\n      >\n        <Boxed pad=\"10px\">\n          <Text fontWeight=\"600\" padding=\"10px 0\">\n            Choose passport{\" \"}\n          </Text>\n          {file.base64 ? (\n            <Boxed>\n              <embed\n                type={file.format}\n                src={`data:${file.format}; base64, ${file.base64}`}\n                style={{\n                  height: \"230px\",\n                  maxWidth: \"230px\",\n                  borderRadius: \"100%\",\n                  boxShadow: Theme.PrimaryShadow,\n                  border: `2px solid ${Theme.PrimaryBorderColor}`,\n                  padding: \"15px\",\n                }}\n                alt=\"avatar\"\n              />\n            </Boxed>\n          ) : (\n            <Upload\n              type=\"drap\"\n              multiple={false}\n              beforeUpload={(pdf) => beforeUpload(pdf)}\n              onChange={() => {}}\n            >\n              <Boxed\n                height=\"200px\"\n                width=\"200px\"\n                border={`1px dashed ${Theme.SecondaryTextColor}`}\n                bColor={`${Theme.SecondaryDark}50`}\n                display=\"flex\"\n                borderRadius=\"100%\"\n                boxShadow={Theme.PrimaryShadow}\n              >\n                <Boxed margin=\"auto\" align=\"center\">\n                  <Icon\n                    className=\"icon-users\"\n                    fontSize=\"35px\"\n                    color={Theme.PrimaryTextColor}\n                  />\n                  <Text>Click or drag passport file here to upload. </Text>\n                </Boxed>\n              </Boxed>\n            </Upload>\n          )}\n        </Boxed>\n        <Boxed pad=\"10px\" display=\"flex\">\n          <Boxed margin=\"auto 0\">\n            {file.name && <Text margin=\"auto 5px\"> {file.name}</Text>}\n            {file.base64 && (\n              <Button pale color={Theme.PrimaryRed} onClick={() => setFile({})}>\n                Remove\n              </Button>\n            )}\n            <Text padding=\"10px 0\">\n              Image formate accepted are JEPG & PNG, and size must not be\n              greater than 2mb.\n            </Text>\n          </Boxed>\n        </Boxed>\n      </Grid>\n      <Boxed pad=\"20px 0 0 0\">\n        <Button disabled={isLoading} progress={isLoading} onClick={onSubmit}>\n          Submit\n        </Button>\n        <Button pale disabled={isLoading} progress={isLoading} onClick={goBack}>\n          Previous\n        </Button>\n        <Button\n          clear\n          disabled={isLoading}\n          progress={isLoading}\n          onClick={() => onSubmit({ skip: true })}\n        >\n          Skip & Submit\n        </Button>\n      </Boxed>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Common/FilterWrapper/Wrapper.js",["635"],"import React, { Component } from \"react\";\n\nexport class Wrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filter: {\n        page: 0,\n        size: 10,\n        ...this.props.externalParams,\n      },\n      currentPage: 1,\n      pageSize: 10,\n    };\n    this.searchInputDebounceTimer = null;\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.externalParams) {\n      if (\n        JSON.stringify(prevProps.externalParams) !==\n        JSON.stringify(this.props.externalParams)\n      ) {\n        this.setState(\n          {\n            filter: {\n              page: 1,\n              size: 10,\n              ...this.props.externalParams,\n            },\n            currentPage: 1,\n            pageSize: 10,\n          },\n          () => {\n            this.props.fetchData(\n              this.props.externalActionURL,\n              this.state.filter\n            );\n          }\n        );\n      }\n    }\n  };\n\n  changePageSize = (size, action) => {\n    this.setState(\n      {\n        pageSize: size.value,\n        currentPage: 1,\n        filter: {\n          ...this.state.filter,\n          size: size.value,\n          ...this.props.externalParams,\n        },\n      },\n      () => {\n        this.props.fetchData(action, this.state.filter);\n      }\n    );\n  };\n\n  fetchData = (action, payload) => {\n    this.props.fetchData(action, payload);\n  };\n\n  handlePagination = (page, action) => {\n    this.setState(\n      {\n        currentPage: page,\n        filter: {\n          ...this.state.filter,\n          page,\n          ...this.props.externalParams,\n        },\n      },\n      () => {\n        let payload = {\n          ...this.state.filter,\n          page,\n          ...this.props.externalParams,\n        };\n        this.props.fetchData(action, payload);\n      }\n    );\n  };\n\n  search = (search, action) => {\n    search.stopPropagation();\n    clearTimeout(this.searchInputDebounceTimer);\n    this.setState(\n      {\n        filter: {\n          ...this.state.filter,\n          search: search.target.value ? search.target.value : null,\n          ...this.props.externalParams,\n        },\n      },\n      () => {\n        this.searchInputDebounceTimer = setTimeout(() => {\n          this.props.fetchData(action, this.state.filter);\n        }, 1500);\n      }\n    );\n  };\n\n  filter = (filters, action) => {\n    let tempFilters = {};\n    filters.forEach((item) => {\n      tempFilters[item.key] = item.value;\n    });\n    this.setState(\n      {\n        filter: {\n          ...this.state.filter,\n          ...tempFilters,\n          ...this.props.externalParams,\n        },\n      },\n      () => {\n        this.props.fetchData(action, this.state.filter);\n      }\n    );\n  };\n  removeTag = (tag, action) => {\n    let tempFilters = this.state.filter;\n    tempFilters[tag.key] = null;\n    this.setState({ filter: tempFilters });\n    this.props.fetchData(action, this.state.filter);\n  };\n\n  removeAllTags = (action) => {\n    this.setState(\n      {\n        filter: {\n          page: 0,\n          size: 10,\n          ...this.props.externalParams,\n        },\n      },\n      () => {\n        this.props.fetchData(action, this.state.filter);\n      }\n    );\n  };\n\n  render() {\n    return this.props.render({\n      fetchData: this.fetchData,\n      changePageSize: this.changePageSize,\n      handlePagination: this.handlePagination,\n      search: this.search,\n      changeFilter: this.filter,\n      removeTag: this.removeTag,\n      removeAllTags: this.removeAllTags,\n      currentPage: this.state.currentPage,\n      pageSize: this.state.pageSize,\n      filter: this.state.filter,\n      isLoading: this.props.isLoading,\n    });\n  }\n}\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/sideBar/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Modal.components.js",["636","637"],"import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport { Theme } from \"../utils/theme\";\n\nconst StyledModal = styled.div`\n    width:100%;\n    height: 100%;\n    background-color: ${(props) =>\n      props.background ? props.background : props.theme.TertiaryDark};\n    color: ${(props) => props.theme.PrimaryTextColor};\n    border-radius: ${(props) => props.theme.SecondaryRadius};\n    padding: 0.25rem;\n\n    .modal-header {\n      font-size: 1.2rem;\n      font-family: ${(props) => props.theme.SecondaryFontFamily};\n      padding: 1rem;\n      border-bottom: none;\n\n      & .close { \n          color:${(props) => props.theme.PrimaryTextColor};\n          background : transparent;\n          border: none;\n\n          : hover { \n            color:${(props) => props.theme.PrimaryColor};\n          }\n\n          & .sr-only { \n            display: none;\n          }\n      }\n    }\n\n    .modal-body{\n    max-height: 70vh;\n    padding: 0.75rem;\n    overflow-y: scroll;\n    overflow-x: hidden;\n    ${(props) =>\n      props.dialogClassName === \"modal-fullScreen\" &&\n      css`\n        ${\"\" /* height: 90vh; */}\n        max-height: 90vh;\n      `}\n    }\n\n    .modal-footer {\n        border-top: none;   \n    }\n  }\n`;\n\nexport const ModalComponent = (props) => {\n  const {\n    title,\n    children,\n    footer,\n    show,\n    onHide,\n    centered,\n    size,\n    dialogClassName,\n    fullScreen,\n    background,\n    border,\n  } = props;\n  return (\n    <Modal\n      size={size}\n      show={show}\n      onHide={onHide}\n      centered={centered}\n      style={{ background: \"none\", border: border }}\n      backdrop=\"static\"\n      keyboard={false}\n      dialogClassName={dialogClassName}\n    >\n      <StyledModal dialogClassName={dialogClassName} background={background}>\n        {title ? (\n          <Modal.Header closeButton>\n            <Modal.Title>{title}</Modal.Title>\n          </Modal.Header>\n        ) : null}\n        <Modal.Body>{children}</Modal.Body>\n        {footer ? <Modal.Footer>{footer}</Modal.Footer> : null}\n      </StyledModal>\n    </Modal>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/sideBar/usersMenu.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/sideBar/adminMenu.js",[],["638","639"],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Layouts/sideBar/sideBar.js",["640"],"import React from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport { lighten } from \"polished\";\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Icon } from \"../../../components/style\";\nimport { Theme } from \"../../../utils/theme\";\n\nimport LOGO from \"../../../assets/img/logo-sm-white.png\";\nimport LOGO_FULL from \"../../../assets/img/logo-white.png\";\nimport maleImage from \"../../../assets/img/male.png\";\n\nconst SideList = styled.div`\n  padding: 25px 0;\n  background: ${(props) => props.theme.SideBarColor};\n  color: ${(props) => props.theme.PrimaryTextColor};\n  width: ${(props) => (props.collaspe ? \"60px\" : \"230px\")};\n  position: fixed;\n  overflow: hidden;\n  transition: all 0.5s;\n  -webkit-transition: all 0.25s;\n  height: 100vh;\n\n  ${(props) =>\n    props.float &&\n    css`\n      z-index: 300;\n      width: ${(props) => (props.collaspe ? \"0\" : \"230px\")};\n      min-height: 100vh;\n    `}\n\n  .sideList-toggle {\n    text-align: right;\n    padding: 0.25rem 1rem;\n    ${(props) =>\n      props.collaspe &&\n      css`\n        transform: rotate(180deg);\n        text-align: \"center\";\n      `}\n\n    > span {\n      cursor: pointer;\n    }\n  }\n\n  .sideList-group {\n    padding: 0.75rem 0;\n  }\n\n  .sideList-title {\n    font-size: 12px;\n    color: #ffffff;\n    margin: 0;\n    padding: 0.5rem 1rem;\n    opacity: ${(props) => (props.collaspe ? \"0\" : \"1\")};\n  }\n\n  & ul {\n    list-style-type: none;\n    padding: 0;\n    margin: 0;\n\n    & li {\n      font-size: 13px;\n      padding: ${(props) => (props.collaspe ? \"0.5rem\" : \"0.8rem 0.5rem\")};\n      color: #ffffff;\n      cursor: pointer;\n      display: flex;\n      overflow: hidden;\n      width: ${(props) => (props.collaspe ? \"60px\" : \"unset\")};\n      transition: all 0.5s;\n      -webkit-transition: all 0.25s;\n      cursor: pointer;\n      // border-radius: ${(props) => props.theme.SecondaryRadius};\n\n      :hover {\n        background: ${(props) => lighten(0.05, props.theme.PrimaryColor)};\n\n        & i {\n          // color: ${(props) => props.theme.PrimaryColor};\n        }\n      }\n\n      & i {\n        font-size: 16px;\n        padding: 0 0.5rem;\n      }\n\n      .sideList-label {\n        padding: 0 0.65rem;\n        // font-weight: bold;\n        opacity: ${(props) => (props.collaspe ? \"0\" : \"1\")};\n        margin: auto 0;\n        ${(props) =>\n          props.collaspe &&\n          css`\n            display: none;\n          `}\n      }\n    }\n\n    .active {\n      // color: ${(props) => props.theme.PrimaryColor};\n      // background-color: ${(props) => props.theme.PrimaryDark};\n      background: ${(props) => lighten(0.08, props.theme.PrimaryColor)};\n    }\n  }\n\n  .side-menu-footer {\n    width: 100%;\n    background: ${(props) => lighten(0.05, props.theme.PrimaryColor)};\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    padding: 20px 8px;\n    box-sizing: border-box;\n    display: flex;\n\n    .avatar {\n      width: 40px;\n      height: 40px;\n      overflow: hidden;\n      border-radius: 50%;\n      ${(props) =>\n        props.collaspe &&\n        css`\n          display: none;\n        `}\n\n      img {\n        max-width: 100%;\n      }\n    }\n\n    .user-info {\n      padding: 0 5px;\n      color: #ffffff;\n      opacity: 1;\n      transition: opacity 0.2s ease-in;\n      ${(props) =>\n        props.collaspe &&\n        css`\n          display: none;\n        `}\n    }\n\n    .user-logout {\n      margin: auto;\n\n      i {\n        margin: auto;\n        cursor: pointer;\n      }\n    }\n  }\n\n  .side-menu-footer .side-menu.inactive .side-menu-footer .user-info {\n    opacity: 1;\n    width: 0;\n    height: 0;\n    overflow: hidden;\n  }\n`;\n\nexport const SideBar = (props) => {\n  // state props received\n  const { dataList, pathname, collaspe, float, viewMode, profile, accessList } =\n    props;\n\n  // dispatch props received\n  const { redirect, toggleSidebar, setPageTitle, logOut } = props;\n\n  const onItemClick = (pathname, pageTitle) => {\n    viewMode !== \"desktop\" && toggleSidebar(true);\n    setPageTitle(pageTitle);\n    redirect(pathname);\n  };\n\n  let btnLeft = \"10.5rem\";\n  float && collaspe && (btnLeft = \"-100px\");\n  !float && collaspe && (btnLeft = \"0.5rem\");\n\n  return (\n    <SideList collaspe={collaspe} float={float}>\n      <Boxed display=\"flex\">\n        <img\n          src={collaspe ? LOGO : LOGO_FULL}\n          height={collaspe ? \"35px\" : \"50px\"}\n          style={{ margin: \"auto\", cursor: \"pointer\", padding: \"5px\" }}\n          alt=\"app-logo\"\n          onClick={() => toggleSidebar(!collaspe)}\n        />\n      </Boxed>\n      {dataList &&\n        dataList.map((item, index) => {\n          return (\n            <div className=\"sideList-group\" key={index}>\n              <h3 className=\"sideList-title\">{item.title}</h3>\n              <ul>\n                {item.list.map((subItem, subIndex) => {\n                  let access = false;\n                  if (subItem?.role?.length) {\n                    subItem?.role?.forEach((singleRole) => {\n                      if (accessList[singleRole]) {\n                        access = true;\n                      }\n                    });\n                  } else {\n                    access = true;\n                  }\n\n                  if (access) {\n                    return (\n                      <li\n                        key={subIndex}\n                        className={\n                          pathname === subItem.pathname ? \"active\" : \"\"\n                        }\n                        onClick={\n                          pathname === subItem.pathname\n                            ? null\n                            : () => onItemClick(subItem.pathname, subItem.label)\n                        }\n                      >\n                        <i className={`icon ${subItem.icon}`} />{\" \"}\n                        <span className=\"sideList-label\">{subItem.label}</span>\n                      </li>\n                    );\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </ul>\n            </div>\n          );\n        })}\n\n      <div className=\"side-menu-footer\">\n        <div className=\"avatar\">\n          <img src={maleImage} alt=\"user\" />\n        </div>\n        <div className=\"user-info\">\n          <Text\n            color=\"#fff\"\n            fontWeight=\"bold\"\n            fontSize={Theme.SecondaryFontSize}\n          >\n            {profile?.username}\n          </Text>\n          <Text color=\"#fff\" fontSize={Theme.SecondaryFontSize}>\n            {profile?.email}\n          </Text>\n        </div>\n        <div className=\"user-logout\">\n          <Icon color=\"#fff\" className=\"icon-power\" onClick={() => logOut()} />\n        </div>\n      </div>\n    </SideList>\n  );\n};\n\nSideBar.propTypes = {};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Rectification/index.js",["641"],"import { connect } from \"dva\";\nimport { createForm } from \"rc-form\";\nimport { Rectification } from \"./Rectification\";\nimport { routerRedux } from \"dva/router\";\n\nconst sampleData = [\n  {\n    id: 1,\n    entry_number: \"W18956M\",\n    parcel_number: \"PS45654\",\n    created_at: \"30-09-2021\",\n    proprietor: \"Ijeh Michael\",\n  },\n  {\n    id: 2,\n    entry_number: \"W18956M\",\n    parcel_number: \"PS45654\",\n    created_at: \"30-09-2021\",\n    proprietor: \"Ijeh Michael\",\n  },\n  {\n    id: 3,\n    entry_number: \"W18956M\",\n    parcel_number: \"PS45654\",\n    created_at: \"30-09-2021\",\n    proprietor: \"Ijeh Michael\",\n  },\n  {\n    id: 4,\n    entry_number: \"W18956M\",\n    parcel_number: \"PS45654\",\n    created_at: \"30-09-2021\",\n    proprietor: \"Ijeh Michael\",\n  },\n  {\n    id: 5,\n    entry_number: \"W18956M\",\n    parcel_number: \"PS45654\",\n    created_at: \"30-09-2021\",\n    proprietor: \"Ijeh Michael\",\n  },\n  {\n    id: 6,\n    entry_number: \"W18956M\",\n    parcel_number: \"PS45654\",\n    created_at: \"30-09-2021\",\n    proprietor: \"Ijeh Michael\",\n  },\n];\n\nconst fetchActionURL = \"entries/getAllRectification\";\n\nexport const mapStateToProps = (state, ownProps) => {\n  const { loading, entries } = state;\n  const { rectificationList, rectificationTotal, rectificationDetailModal } =\n    entries;\n  const isLoading = loading.effects[fetchActionURL];\n  return {\n    isLoading,\n    rectificationList,\n    rectificationTotal,\n    fetchActionURL,\n    rectificationDetailModal,\n  };\n};\n\nexport const mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    redirect(pathname) {\n      dispatch(routerRedux.push({ pathname: `${pathname}` }));\n    },\n    getAllRectification(data) {\n      dispatch({ type: fetchActionURL, payload: data });\n    },\n    openDetailModal(data) {\n      dispatch({\n        type: \"entries/save\",\n        payload: { rectificationDetailModal: true, entryData: data },\n      });\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(createForm()(Rectification));\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Rectification/Rectification.js",["642","643","644","645"],"import React, { useEffect } from \"react\";\n\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nimport Wrapper from \"../Common/FilterWrapper/index\";\n\nimport { Grid } from \"../../components/Grid.components\";\nimport { Boxed } from \"../../components/Boxed.components\";\nimport { Input } from \"../../components/Input.components\";\nimport { Text } from \"../../components/Text.components\";\nimport { Button } from \"../../components/Button.components\";\nimport { Loader } from \"../../components/Loader.components\";\nimport { EmptyState } from \"../../components/EmptyState.components\";\nimport {\n  TableComponent,\n  PaginationComponent,\n} from \"../../components/Table.components\";\nimport { PageTitle, Icon, StyledDrpDown } from \"../../components/style\";\n\nimport { calcViewMode, formatDate } from \"../../utils/utils\";\nimport { pageOptions } from \"../../utils/constant\";\nimport { Theme } from \"../../utils/theme\";\n\nimport DetailModal from \"./DetailModal/index\";\n\nexport const Rectification = (props) => {\n  // state props\n  const {\n    isLoading,\n    rectificationList,\n    rectificationTotal,\n    fetchActionURL,\n    rectificationDetailModal,\n  } = props;\n\n  // dispatch props\n  const { getAllRectification, openDetailModal } = props;\n\n  useEffect(() => {\n    let data = {\n      page: 1,\n      size: 10,\n    };\n    getAllRectification(data);\n  }, []);\n\n  let viewMode = calcViewMode();\n\n  const DropDownMenu = (props) => {\n    const { record } = props;\n    return (\n      <StyledDrpDown>\n        <Dropdown>\n          <Dropdown.Toggle variant id=\"dropdown-basic\">\n            <Icon className=\"icon-more-vertical\" />\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => openDetailModal(record)}>\n              View Details\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </StyledDrpDown>\n    );\n  };\n\n  const columns = [\n    {\n      title: \"Entry Type\",\n      dataIndex: \"entity\",\n      key: \"entity\",\n    },\n    {\n      title: \"Entry Ref.\",\n      dataIndex: \"entityId\",\n      key: \"entityId\",\n    },\n    {\n      title: \"Description\",\n      dataIndex: \"description\",\n      key: \"description\",\n    },\n    {\n      title: \"Entered By\",\n      dataIndex: \"createdBy\",\n      key: \"createdBy\",\n    },\n    {\n      title: \"Entry Date\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      render: (text) => text && formatDate(text),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      key: \"action\",\n      align: \"right\",\n      render: (text, record) => <DropDownMenu record={record} />,\n    },\n  ];\n\n  return (\n    <>\n      <Boxed pad=\"20px\">\n        <PageTitle>Rectification Entry</PageTitle>\n        <Boxed\n          pad=\"20px 10px\"\n          background={Theme.TertiaryDark}\n          borderRadius={Theme.SecondaryRadius}\n        >\n          <Wrapper\n            externalActionURL={fetchActionURL}\n            render={({\n              changePageSize,\n              handlePagination,\n              currentPage,\n              pageSize,\n            }) => {\n              return (\n                <>\n                  <Grid\n                    desktop=\"repeat(4, 1fr)\"\n                    tablet=\"repeat(4, 1fr)\"\n                    mobile=\"repeat(1, 1fr)\"\n                  >\n                    <Boxed pad=\"5px 0\">\n                      <Input\n                        type=\"search\"\n                        placeholder=\"Search by entry number\"\n                      />\n                    </Boxed>\n                    <Boxed />\n                    <Boxed />\n                  </Grid>\n                  {isLoading ? (\n                    <Boxed display=\"flex\" pad=\"20px\">\n                      <Loader margin=\"auto\" />\n                    </Boxed>\n                  ) : (\n                    <>\n                      {\" \"}\n                      {rectificationTotal > 0 ? (\n                        <>\n                          <TableComponent\n                            columns={columns}\n                            data={rectificationList}\n                          />\n                          <Boxed pad=\"10px 0 \">\n                            <PaginationComponent\n                              total={rectificationTotal}\n                              onChange={(page) =>\n                                handlePagination(page, fetchActionURL)\n                              }\n                              current={currentPage}\n                              pageCounts={pageOptions}\n                              changePageSize={(pageSize) =>\n                                changePageSize(pageSize, fetchActionURL)\n                              }\n                              pageSize={pageSize}\n                              itemsDisplayed\n                              showTotal={(total, range) => {\n                                return `${range[0]} - ${range[1]} of ${rectificationTotal} items`;\n                              }}\n                            />\n                          </Boxed>\n                        </>\n                      ) : (\n                        <EmptyState />\n                      )}\n                    </>\n                  )}\n                </>\n              );\n            }}\n          />\n        </Boxed>\n      </Boxed>\n\n      {rectificationDetailModal && <DetailModal />}\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Encumbrance/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Encumbrance/Encumbrance.js",["646","647","648","649"],"import React, { useEffect } from \"react\";\n\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nimport Wrapper from \"../Common/FilterWrapper/index\";\n\nimport { Grid } from \"../../components/Grid.components\";\nimport { Boxed } from \"../../components/Boxed.components\";\nimport { Input } from \"../../components/Input.components\";\nimport { Text } from \"../../components/Text.components\";\nimport { Button } from \"../../components/Button.components\";\nimport { Loader } from \"../../components/Loader.components\";\nimport { Badge } from \"../../components/Badge.components\";\nimport { EmptyState } from \"../../components/EmptyState.components\";\nimport {\n  TableComponent,\n  PaginationComponent,\n} from \"../../components/Table.components\";\nimport { PageTitle, Icon, StyledDrpDown } from \"../../components/style\";\n\nimport { calcViewMode, formatDate } from \"../../utils/utils\";\nimport { pageOptions } from \"../../utils/constant\";\nimport { Theme } from \"../../utils/theme\";\n\nimport TerminateModal from \"./TerminateModal/index\";\nimport DetailModal from \"./DetailModal/index\";\n\nexport const Encumbrance = (props) => {\n  // state props\n  const {\n    isLoading,\n    encumbranceList,\n    encumbranceTotal,\n    fetchActionURL,\n    terminateModal,\n    encumbranceDetailModal,\n  } = props;\n\n  // dispatch props\n  const { getAllEncumbrance, openTerminateModal, openDetailModal } = props;\n\n  useEffect(() => {\n    let data = {\n      page: 1,\n      size: 10,\n    };\n    getAllEncumbrance(data);\n  }, []);\n\n  let viewMode = calcViewMode();\n\n  const columns = [\n    {\n      title: \"Description\",\n      dataIndex: \"description\",\n      key: \"description\",\n    },\n    {\n      title: \"Parcel Number\",\n      dataIndex: \"parcelNumber\",\n      key: \"parcelNumber\",\n    },\n    {\n      title: \"Entered By\",\n      dataIndex: \"createdBy\",\n      key: \"createdBy\",\n    },\n    {\n      title: \"Created At\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      render: (text) => text && formatDate(text),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"close\",\n      key: \"close\",\n      render: (text) =>\n        text ? (\n          <Badge color={Theme.PrimaryGreen}>Closed</Badge>\n        ) : (\n          <Badge color={Theme.PrimaryRed}>Open</Badge>\n        ),\n    },\n    {\n      title: \"\",\n      dataIndex: \"action\",\n      key: \"action\",\n      align: \"right\",\n      render: (text, record) => {\n        return (\n          <StyledDrpDown>\n            <Dropdown>\n              <Dropdown.Toggle variant id=\"dropdown-basic\">\n                <Icon className=\"icon-more-vertical\" />\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item onClick={() => openDetailModal(record)}>\n                  View Details\n                </Dropdown.Item>\n                {!record.close && (\n                  <Dropdown.Item onClick={() => openTerminateModal(record)}>\n                    Terminate Entry\n                  </Dropdown.Item>\n                )}\n              </Dropdown.Menu>\n            </Dropdown>\n          </StyledDrpDown>\n        );\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Boxed pad=\"20px\">\n        <PageTitle>Encumbrance Entry</PageTitle>\n        <Boxed\n          pad=\"20px 10px\"\n          background={Theme.TertiaryDark}\n          borderRadius={Theme.SecondaryRadius}\n        >\n          <Wrapper\n            externalActionURL={fetchActionURL}\n            render={({\n              changePageSize,\n              handlePagination,\n              currentPage,\n              pageSize,\n            }) => {\n              return (\n                <>\n                  <Grid\n                    desktop=\"repeat(4, 1fr)\"\n                    tablet=\"repeat(4, 1fr)\"\n                    mobile=\"repeat(1, 1fr)\"\n                  >\n                    <Boxed pad=\"5px 0\">\n                      <Input\n                        type=\"search\"\n                        placeholder=\"Search by parcel number\"\n                      />\n                    </Boxed>\n                    <Boxed />\n                    <Boxed />\n                  </Grid>\n                  {isLoading ? (\n                    <Boxed display=\"flex\" pad=\"20px\">\n                      <Loader margin=\"auto\" />\n                    </Boxed>\n                  ) : (\n                    <>\n                      {\" \"}\n                      {encumbranceTotal > 0 ? (\n                        <>\n                          <TableComponent\n                            columns={columns}\n                            data={encumbranceList}\n                          />\n                          <Boxed pad=\"10px 0 \">\n                            <PaginationComponent\n                              total={encumbranceTotal}\n                              onChange={(page) =>\n                                handlePagination(page, fetchActionURL)\n                              }\n                              current={currentPage}\n                              pageCounts={pageOptions}\n                              changePageSize={(pageSize) =>\n                                changePageSize(pageSize, fetchActionURL)\n                              }\n                              pageSize={pageSize}\n                              itemsDisplayed\n                              showTotal={(total, range) => {\n                                return `${range[0]} - ${range[1]} of ${encumbranceTotal} items`;\n                              }}\n                            />\n                          </Boxed>\n                        </>\n                      ) : (\n                        <EmptyState />\n                      )}\n                    </>\n                  )}\n                </>\n              );\n            }}\n          />\n        </Boxed>\n      </Boxed>\n\n      {terminateModal && <TerminateModal />}\n      {encumbranceDetailModal && <DetailModal />}\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/EncumbranceModal/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/EncumbranceModal/EncumbranceModal.js",["650","651","652","653"],"import React, { useState } from \"react\";\nimport Upload from \"rc-upload\";\n\nimport { Input } from \"../../../components/Input.components\";\nimport { Grid } from \"../../../components/Grid.components\";\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\nimport { Alert } from \"../../../components/Alert.components\";\nimport { ModalComponent } from \"../../../components/Modal.components\";\nimport { FileIcon, Icon } from \"../../../components/style\";\n\nimport { calcViewMode, formatCurrency, getBase64 } from \"../../../utils/utils\";\nimport { Theme } from \"../../../utils/theme\";\nimport { PageTitle } from \"../../../components/style\";\n\nexport const EncumbranceModal = (props) => {\n  // State props\n  const { encumbranceModal, isLoading, parcelData } = props;\n\n  // Dispatch props\n  const { form, createEncumbrance, closeModal } = props;\n  const { getFieldProps, getFieldError, validateFields } = form;\n\n  const [file, setFile] = useState({});\n\n  let viewMode = calcViewMode();\n\n  // handle logic for uploading an image\n  const beforeUpload = (file) => {\n    const isJEPG = file.type === \"application/pdf\";\n    if (!isJEPG) {\n      Alert.error(\"You can only upload PDF file.\");\n    }\n    const isLt10M = file.size / 1024 / 1024 < 10;\n    if (!isLt10M) {\n      Alert.error(\"Image must be smaller than 10MB!\");\n    }\n    if (isJEPG && isLt10M) {\n      handleFileUploader(file);\n      return isJEPG && isLt10M;\n    }\n  };\n\n  const handleFileUploader = (file) => {\n    getBase64(file).then((data) => {\n      const base64Data = data.split(\",\")[1];\n      setFile({\n        pdf: file,\n        base64: base64Data,\n        type: file.type,\n        name: file.name,\n        size: file.size,\n      });\n    });\n  };\n\n  const onSubmit = () => {\n    if (file.base64) {\n      validateFields((error, value) => {\n        if (!error) {\n          const data = {\n            description: value.encumbrance_text.trim(),\n            file: file.base64,\n            fileFormat: \"pdf\",\n            parcelNumber: parcelData.ParcelNumber,\n          };\n          createEncumbrance(data);\n        }\n      });\n    } else {\n      Alert.info(\"Instrument file is required\");\n    }\n  };\n  let errors;\n\n  return (\n    <>\n      <ModalComponent\n        show={encumbranceModal}\n        onHide={closeModal}\n        title={<PageTitle margin=\"5px 0\">Create Encumbrance</PageTitle>}\n        footer={\n          <>\n            <Button pale onClick={closeModal}>\n              Cancel\n            </Button>\n            <Button\n              progress={isLoading}\n              disabled={isLoading}\n              onClick={onSubmit}\n            >\n              Create Encumbrance\n            </Button>\n          </>\n        }\n      >\n        <Boxed\n          pad=\"10px\"\n          border={`1px solid ${Theme.PrimaryBlue}`}\n          background={`${Theme.PrimaryBlue}30`}\n          borderRadius={Theme.SecondaryRadius}\n        >\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Plot Number : <b>{parcelData.ParcelNumber}</b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Reg. Number : <b>{parcelData.REG_NUMBER}</b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Plot Size :\n            <b>\n              {parcelData.CALCULATED &&\n                formatCurrency(parcelData.CALCULATED || 0)}{\" \"}\n              square meter\n            </b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Land Type : <b>{parcelData.LAND_TYPE}</b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Land Use : <b>{parcelData.LAND_USE}</b>\n          </Text>\n        </Boxed>\n        <Boxed pad=\"10px 0\">\n          <Input\n            type=\"text\"\n            label=\"Encumbrance Text\"\n            placeholder=\"Enter encumbrance text...\"\n            error={\n              (errors = getFieldError(\"encumbrance_text\"))\n                ? \"Encumbrance Text is required\"\n                : null\n            }\n            {...getFieldProps(\"encumbrance_text\", {\n              initialValue: \"\",\n              rules: [{ required: true }],\n            })}\n          />\n        </Boxed>\n        <Boxed pad=\"10px 0\">\n          <Text fontSize={Theme.SecondaryFontSize} fontWeight=\"bold\">\n            Upload Instrument\n          </Text>\n          {file.base64 ? (\n            <Boxed display=\"flex\" pad=\"10px\">\n              <FileIcon type=\"pdf\" size=\"60px\" />\n              <Boxed pad=\"0 10px\">\n                <Text> {file.name}</Text>\n                <Text fontSize={Theme.SecondaryFontSize}>\n                  {\" \"}\n                  {file.size &&\n                    formatCurrency(Math.floor(file.size / 1024) || 0)}{\" \"}\n                  KB\n                </Text>\n              </Boxed>\n            </Boxed>\n          ) : (\n            <Upload\n              type=\"drap\"\n              multiple={false}\n              beforeUpload={(pdf) => beforeUpload(pdf)}\n              onChange={() => {}}\n            >\n              <Boxed\n                height=\"120px\"\n                width=\"100%\"\n                border={`1px dashed ${Theme.SecondaryTextColor}`}\n                bColor={`${Theme.SecondaryDark}50`}\n                display=\"flex\"\n                boxShadow={Theme.PrimaryShadow}\n              >\n                <Boxed margin=\"auto\" align=\"center\">\n                  <Icon\n                    className=\"icon-upload-cloud-1\"\n                    fontSize=\"35px\"\n                    color={Theme.PrimaryTextColor}\n                  />\n                  <Text>Click or drag instrument file here to upload. </Text>\n                </Boxed>\n              </Boxed>\n            </Upload>\n          )}\n        </Boxed>\n      </ModalComponent>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Badge.components.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Encumbrance/TerminateModal/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Encumbrance/TerminateModal/TerminateModal.js",["654","655","656","657"],"import React, { useState } from \"react\";\nimport Upload from \"rc-upload\";\n\nimport { Input } from \"../../../components/Input.components\";\nimport { Grid } from \"../../../components/Grid.components\";\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\nimport { Alert } from \"../../../components/Alert.components\";\nimport { ModalComponent } from \"../../../components/Modal.components\";\nimport { FileIcon, Icon } from \"../../../components/style\";\n\nimport {\n  calcViewMode,\n  formatCurrency,\n  getBase64,\n  formatDate,\n} from \"../../../utils/utils\";\nimport { Theme } from \"../../../utils/theme\";\nimport { PageTitle } from \"../../../components/style\";\n\nexport const TerminateModal = (props) => {\n  // State props\n  const { terminateModal, isLoading, entryData } = props;\n\n  // Dispatch props\n  const { form, terminateEncumbrance, closeModal } = props;\n  const { getFieldProps, getFieldError, validateFields } = form;\n\n  const [file, setFile] = useState({});\n\n  let viewMode = calcViewMode();\n\n  // handle logic for uploading an image\n  const beforeUpload = (file) => {\n    const isJEPG = file.type === \"application/pdf\";\n    if (!isJEPG) {\n      Alert.error(\"You can only upload PDF file.\");\n    }\n    const isLt10M = file.size / 1024 / 1024 < 10;\n    if (!isLt10M) {\n      Alert.error(\"Image must be smaller than 10MB!\");\n    }\n    if (isJEPG && isLt10M) {\n      handleFileUploader(file);\n      return isJEPG && isLt10M;\n    }\n  };\n\n  const handleFileUploader = (file) => {\n    getBase64(file).then((data) => {\n      const base64Data = data.split(\",\")[1];\n      setFile({\n        pdf: file,\n        base64: base64Data,\n        type: file.type,\n        name: file.name,\n        size: file.size,\n      });\n    });\n  };\n\n  const onSubmit = () => {\n    if (file.base64) {\n      validateFields((error, value) => {\n        if (!error) {\n          const data = {\n            id: entryData.id,\n            description: value.terminate_text.trim(),\n            file: file.base64,\n            fileFormat: \"pdf\",\n          };\n          terminateEncumbrance(data);\n        }\n      });\n    } else {\n      Alert.info(\"Instrument file is required\");\n    }\n  };\n  let errors;\n\n  return (\n    <>\n      <ModalComponent\n        show={terminateModal}\n        onHide={closeModal}\n        title={<PageTitle margin=\"5px 0\">Terminate Encumbrance</PageTitle>}\n        footer={\n          <>\n            <Button pale onClick={closeModal}>\n              Cancel\n            </Button>\n            <Button\n              progress={isLoading}\n              disabled={isLoading}\n              onClick={onSubmit}\n            >\n              Confirm Termination\n            </Button>\n          </>\n        }\n      >\n        <Boxed\n          pad=\"10px\"\n          border={`1px solid ${Theme.PrimaryBlue}`}\n          background={`${Theme.PrimaryBlue}30`}\n          borderRadius={Theme.SecondaryRadius}\n        >\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Parcel Number: <b>{entryData.parcelNumber}</b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Encumbrance Text: <b>{entryData.description}</b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Entered By: <b>{entryData.createdBy}</b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Entry Date:{\" \"}\n            <b>{entryData.createdAt && formatDate(entryData.createdAt)}</b>\n          </Text>\n        </Boxed>\n        <Boxed pad=\"10px 0\">\n          <Input\n            type=\"text\"\n            label=\"Terminate Text\"\n            placeholder=\"Enter terminate text...\"\n            error={\n              (errors = getFieldError(\"terminate_text\"))\n                ? \"Terminate Text is required\"\n                : null\n            }\n            {...getFieldProps(\"terminate_text\", {\n              initialValue: \"\",\n              rules: [{ required: true }],\n            })}\n          />\n        </Boxed>\n        <Boxed pad=\"10px 0\">\n          <Text fontSize={Theme.SecondaryFontSize} fontWeight=\"bold\">\n            Upload Instrument\n          </Text>\n          {file.base64 ? (\n            <Boxed display=\"flex\" pad=\"10px\">\n              <FileIcon type=\"pdf\" size=\"60px\" />\n              <Boxed pad=\"0 10px\">\n                <Text> {file.name}</Text>\n                <Text fontSize={Theme.SecondaryFontSize}>\n                  {\" \"}\n                  {file.size &&\n                    formatCurrency(Math.floor(file.size / 1024) || 0)}{\" \"}\n                  KB\n                </Text>\n\n                <Button margin=\"5px 0\" clear xs onClick={() => setFile({})}>\n                  <i className=\"icon-close\" /> Remove\n                </Button>\n              </Boxed>\n            </Boxed>\n          ) : (\n            <Upload\n              type=\"drap\"\n              multiple={false}\n              beforeUpload={(pdf) => beforeUpload(pdf)}\n              onChange={() => {}}\n            >\n              <Boxed\n                height=\"120px\"\n                width=\"100%\"\n                border={`1px dashed ${Theme.SecondaryTextColor}`}\n                bColor={`${Theme.SecondaryDark}50`}\n                display=\"flex\"\n                boxShadow={Theme.PrimaryShadow}\n              >\n                <Boxed margin=\"auto\" align=\"center\">\n                  <Icon\n                    className=\"icon-upload-cloud-1\"\n                    fontSize=\"35px\"\n                    color={Theme.PrimaryTextColor}\n                  />\n                  <Text>Click or drag instrument file here to upload. </Text>\n                </Boxed>\n              </Boxed>\n            </Upload>\n          )}\n        </Boxed>\n      </ModalComponent>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/ParcelDetail/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/ParcelDetail/ParcelDetail.js",["658","659","660","661"],"import React, { useEffect } from \"react\";\nimport moment from \"moment\";\n\nimport { Grid } from \"../../../components/Grid.components\";\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\n\nimport PARCEL_VIEW from \"../../../LIMSGIS/map.htm\";\nimport { Theme } from \"../../../utils/theme\";\n\nimport ARROW_ICON from \"../../../assets/img/north-arrow.png\";\nimport { PageTitle } from \"../../../components/style\";\n\nexport const ParcelDetail = (props) => {\n  // state props received\n  const { params, parcelData } = props;\n\n  // dispatch props received\n  const { redirect, getSingleParcel } = props;\n\n  useEffect(() => {\n    if (params.id) {\n      console.log({ parcelNumber: params.id });\n      getSingleParcel({ page: 1, size: 5, search: params.id });\n    }\n  }, []);\n\n  console.log({ parcelData });\n\n  return (\n    <Boxed pad=\"10px 20px\">\n      <Boxed align=\"right\" pad=\"15px 0\" className=\"no-print\">\n        <Button\n          clear\n          color={Theme.SecondaryTextColor}\n          onClick={() => redirect(\"/parcels\")}\n        >\n          Back\n        </Button>\n      </Boxed>\n      <PageTitle>Parcel Detail</PageTitle>\n      <Boxed pad=\"8px 0\">\n        <Text\n          fontSize={Theme.SecondaryFontSize}\n          color={Theme.SecondaryTextColor}\n        >\n          Parcel Number\n        </Text>\n        <Text>{parcelData.ParcelNumber}</Text>\n      </Boxed>\n      <Grid\n        desktop=\"repeat(3, 1fr)\"\n        tablet=\"repeat(3,1fr)\"\n        mobile=\"repeat(2, 1fr)\"\n      >\n        <Boxed pad=\"8px 0\">\n          <Text\n            fontSize={Theme.SecondaryFontSize}\n            color={Theme.SecondaryTextColor}\n          >\n            Registration Number\n          </Text>\n          <Text>{parcelData.REG_NUMBER}</Text>\n        </Boxed>\n\n        <Boxed pad=\"8px 0\">\n          <Text\n            fontSize={Theme.SecondaryFontSize}\n            color={Theme.SecondaryTextColor}\n          >\n            Registration Date\n          </Text>\n          <Text>{parcelData.REG_DATE}</Text>\n        </Boxed>\n\n        <Boxed pad=\"8px 0\">\n          <Text\n            fontSize={Theme.SecondaryFontSize}\n            color={Theme.SecondaryTextColor}\n          >\n            Category\n          </Text>\n          <Text>{parcelData.CATEGORY}</Text>\n        </Boxed>\n\n        <Boxed pad=\"8px 0\">\n          <Text\n            fontSize={Theme.SecondaryFontSize}\n            color={Theme.SecondaryTextColor}\n          >\n            Land Type\n          </Text>\n          <Text>{parcelData.LAND_TYPE}</Text>\n        </Boxed>\n        <Boxed pad=\"8px 0\">\n          <Text\n            fontSize={Theme.SecondaryFontSize}\n            color={Theme.SecondaryTextColor}\n          >\n            Land Use\n          </Text>\n          <Text>{parcelData.LAND_USE}</Text>\n        </Boxed>\n        <Boxed pad=\"8px 0\">\n          <Text\n            fontSize={Theme.SecondaryFontSize}\n            color={Theme.SecondaryTextColor}\n          >\n            Calculated Area\n          </Text>\n          <Text>{parcelData.CALCULATED} sqr meter</Text>\n        </Boxed>\n\n        <Boxed pad=\"8px 0\">\n          <Text\n            fontSize={Theme.SecondaryFontSize}\n            color={Theme.SecondaryTextColor}\n          >\n            Checked By\n          </Text>\n          <Text>{parcelData.checkedBy}</Text>\n        </Boxed>\n        <Boxed pad=\"8px 0\">\n          <Text\n            fontSize={Theme.SecondaryFontSize}\n            color={Theme.SecondaryTextColor}\n          >\n            Passed By\n          </Text>\n          <Text>{parcelData.passedBy}</Text>\n        </Boxed>\n        <Boxed pad=\"8px 0\">\n          <Text\n            fontSize={Theme.SecondaryFontSize}\n            color={Theme.SecondaryTextColor}\n          >\n            Drawn By\n          </Text>\n          <Text>{parcelData.drawnBy}</Text>\n        </Boxed>\n        <Boxed pad=\"8px 0\">\n          <Text\n            fontSize={Theme.SecondaryFontSize}\n            color={Theme.SecondaryTextColor}\n          >\n            Surveyed By\n          </Text>\n          <Text>{parcelData.surveyedBy}</Text>\n        </Boxed>\n      </Grid>\n      <Boxed pad=\"8px 0\">\n        <Text\n          fontSize={Theme.SecondaryFontSize}\n          color={Theme.SecondaryTextColor}\n        >\n          Legal Description\n        </Text>\n        <Text>{parcelData.LEGAL_DESC}</Text>\n      </Boxed>\n    </Boxed>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/RectificationModal/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Parcels/RectificationModal/RectificationModal.js",["662","663","664","665","666","667","668","669","670","671","672","673","674"],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Rectification/DetailModal/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Rectification/DetailModal/DetailModal.js",["675","676"],"import React, { useEffect } from \"react\";\n\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\nimport { Loader } from \"../../../components/Loader.components\";\nimport { ModalComponent } from \"../../../components/Modal.components\";\nimport { PDFReader } from \"../../../components/Reader.component\";\n\nimport { calcViewMode, formatDate } from \"../../../utils/utils\";\nimport { Theme } from \"../../../utils/theme\";\nimport { PageTitle } from \"../../../components/style\";\n\nexport const DetailModal = (props) => {\n  // State props\n  const { rectificationDetailModal, isLoading, entryData, isloadingFile } =\n    props;\n\n  // Dispatch props\n  const { getRectificationDetail, closeModal } = props;\n\n  useEffect(() => {\n    getRectificationDetail(entryData);\n  }, []);\n\n  let viewMode = calcViewMode();\n\n  return (\n    <>\n      <ModalComponent\n        size=\"xl\"\n        show={rectificationDetailModal}\n        onHide={closeModal}\n        title={<PageTitle margin=\"5px 0\">Rectification Detail</PageTitle>}\n        footer={\n          <>\n            <Button clear onClick={closeModal}>\n              Close\n            </Button>\n          </>\n        }\n      >\n        <Boxed\n          pad=\"10px\"\n          border={`1px solid ${Theme.PrimaryBlue}`}\n          background={`${Theme.PrimaryBlue}30`}\n          borderRadius={Theme.SecondaryRadius}\n        >\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Entry Type : <b>{entryData.entity}</b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Description : <b>{entryData.description}</b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Entered By : <b>{entryData.createdBy}</b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Entry Date :{\" \"}\n            <b>{entryData.createdAt && formatDate(entryData.createdAt)}</b>\n          </Text>\n        </Boxed>\n\n        {isLoading ? (\n          <Boxed pad=\"20px\" display=\"flex\">\n            <Loader margin=\"auto\" />\n          </Boxed>\n        ) : (\n          <>\n            {entryData.fields &&\n              entryData.fields.map((item) => {\n                return (\n                  <Boxed margin=\"10px 0\">\n                    <Boxed\n                      pad=\"5px 8px\"\n                      background={`${Theme.SecondaryDark}60`}\n                      borderRadius={`${Theme.SecondaryRadius} ${Theme.SecondaryRadius} 0 0`}\n                    >\n                      <Text>\n                        <b>{item.fieldName}</b>\n                      </Text>\n                    </Boxed>\n                    <Boxed pad=\"5px 8px\" background={`${Theme.PrimaryGreen}20`}>\n                      <Text color={Theme.PrimaryGreen}>\n                        New: <b>{item.newValue}</b>\n                      </Text>\n                    </Boxed>\n                    <Boxed\n                      pad=\"5px 8px\"\n                      background={`${Theme.PrimaryRed}30`}\n                      borderRadius={`0 0 ${Theme.SecondaryRadius} ${Theme.SecondaryRadius}`}\n                    >\n                      <Text color={Theme.PrimaryRed}>\n                        Old: <b>{item.oldValue}</b>\n                      </Text>\n                    </Boxed>\n                  </Boxed>\n                );\n              })}\n\n            {isloadingFile ? (\n              <Boxed pad=\"20px\" display=\"flex\">\n                <Loader margin=\"auto\" />\n              </Boxed>\n            ) : (\n              <>\n                {entryData.file && entryData.fileFormat === \"pdf\" && (\n                  <Boxed>\n                    <Text fontWeight=\"bold\">Instrument</Text>\n                    {\n                      <Boxed>\n                        <PDFReader document={{ base64: entryData.file }} />\n                      </Boxed>\n                    }\n                  </Boxed>\n                )}\n              </>\n            )}\n          </>\n        )}\n\n        {}\n      </ModalComponent>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/components/Reader.component.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Encumbrance/DetailModal/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Encumbrance/DetailModal/DetailModal.js",["677","678"],"import React, { useEffect } from \"react\";\n\nimport { Boxed } from \"../../../components/Boxed.components\";\nimport { Text } from \"../../../components/Text.components\";\nimport { Button } from \"../../../components/Button.components\";\nimport { Loader } from \"../../../components/Loader.components\";\nimport { ModalComponent } from \"../../../components/Modal.components\";\nimport { PDFReader } from \"../../../components/Reader.component\";\n\nimport { calcViewMode, formatDate } from \"../../../utils/utils\";\nimport { Theme } from \"../../../utils/theme\";\nimport { PageTitle } from \"../../../components/style\";\n\nexport const DetailModal = (props) => {\n  // State props\n  const { encumbranceDetailModal, isLoading, entryData, isloadingFile } = props;\n\n  // Dispatch props\n  const { getEncumbranceDetail, closeModal } = props;\n\n  useEffect(() => {\n    getEncumbranceDetail(entryData);\n  }, []);\n\n  let viewMode = calcViewMode();\n\n  console.log({ entryData });\n\n  return (\n    <>\n      <ModalComponent\n        size=\"xl\"\n        show={encumbranceDetailModal}\n        onHide={closeModal}\n        title={<PageTitle margin=\"5px 0\">Encumbrance Detail</PageTitle>}\n        footer={\n          <>\n            <Button clear onClick={closeModal}>\n              Close\n            </Button>\n          </>\n        }\n      >\n        <Boxed\n          pad=\"10px\"\n          border={`1px solid ${Theme.PrimaryBlue}`}\n          background={`${Theme.PrimaryBlue}30`}\n          borderRadius={Theme.SecondaryRadius}\n        >\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Entry Type : <b>{entryData.entity}</b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Description : <b>{entryData.description}</b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Entered By : <b>{entryData.createdBy}</b>\n          </Text>\n          <Text fontSize={Theme.SecondaryFontSize}>\n            Entry Date :{\" \"}\n            <b>{entryData.createdAt && formatDate(entryData.createdAt)}</b>\n          </Text>\n        </Boxed>\n\n        {isLoading ? (\n          <Boxed pad=\"20px\" display=\"flex\">\n            <Loader margin=\"auto\" />\n          </Boxed>\n        ) : (\n          <>\n            {entryData.fields &&\n              entryData.fields.map((item) => {\n                return (\n                  <Boxed margin=\"10px 0\">\n                    <Boxed\n                      pad=\"5px 8px\"\n                      background={`${Theme.SecondaryDark}60`}\n                      borderRadius={`${Theme.SecondaryRadius} ${Theme.SecondaryRadius} 0 0`}\n                    >\n                      <Text>\n                        <b>{item.fieldName}</b>\n                      </Text>\n                    </Boxed>\n                    <Boxed pad=\"5px 8px\" background={`${Theme.PrimaryGreen}20`}>\n                      <Text color={Theme.PrimaryGreen}>\n                        New: <b>{item.newValue}</b>\n                      </Text>\n                    </Boxed>\n                    <Boxed\n                      pad=\"5px 8px\"\n                      background={`${Theme.PrimaryRed}30`}\n                      borderRadius={`0 0 ${Theme.SecondaryRadius} ${Theme.SecondaryRadius}`}\n                    >\n                      <Text color={Theme.PrimaryRed}>\n                        Old: <b>{item.oldValue}</b>\n                      </Text>\n                    </Boxed>\n                  </Boxed>\n                );\n              })}\n\n            {isloadingFile ? (\n              <Boxed pad=\"20px\" display=\"flex\">\n                <Loader margin=\"auto\" />\n              </Boxed>\n            ) : (\n              <>\n                {entryData.file && entryData.fileFormat === \"pdf\" && (\n                  <Boxed>\n                    <Text fontWeight=\"bold\">Instrument</Text>\n                    {\n                      <Boxed>\n                        <PDFReader document={{ base64: entryData.file }} />\n                      </Boxed>\n                    }\n                  </Boxed>\n                )}\n              </>\n            )}\n          </>\n        )}\n\n        {}\n      </ModalComponent>\n    </>\n  );\n};\n","/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Survey/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Survey/Survey.js",["679","680","681"],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Applications/CreateApplication/index.js",[],"/Users/ijeh/Documents/company/gis-app/onegeolimsweb/src/routes/Applications/CreateApplication/CreateApplication.js",["682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698"],{"ruleId":"699","replacedBy":"700"},{"ruleId":"701","replacedBy":"702"},{"ruleId":"703","severity":1,"message":"704","line":3,"column":20,"nodeType":"705","messageId":"706","endLine":3,"endColumn":26},{"ruleId":"703","severity":1,"message":"707","line":45,"column":7,"nodeType":"705","messageId":"706","endLine":45,"endColumn":19},{"ruleId":"703","severity":1,"message":"708","line":2,"column":8,"nodeType":"705","messageId":"706","endLine":2,"endColumn":13},{"ruleId":"703","severity":1,"message":"709","line":8,"column":3,"nodeType":"705","messageId":"706","endLine":8,"endColumn":13},{"ruleId":"710","severity":1,"message":"711","line":26,"column":1,"nodeType":"712","endLine":120,"endColumn":3},{"ruleId":"703","severity":1,"message":"713","line":88,"column":15,"nodeType":"705","messageId":"706","endLine":88,"endColumn":18},{"ruleId":"703","severity":1,"message":"713","line":99,"column":15,"nodeType":"705","messageId":"706","endLine":99,"endColumn":18},{"ruleId":"710","severity":1,"message":"711","line":13,"column":1,"nodeType":"712","endLine":156,"endColumn":3},{"ruleId":"703","severity":1,"message":"713","line":76,"column":15,"nodeType":"705","messageId":"706","endLine":76,"endColumn":18},{"ruleId":"703","severity":1,"message":"713","line":102,"column":15,"nodeType":"705","messageId":"706","endLine":102,"endColumn":18},{"ruleId":"703","severity":1,"message":"713","line":114,"column":15,"nodeType":"705","messageId":"706","endLine":114,"endColumn":18},{"ruleId":"703","severity":1,"message":"713","line":126,"column":15,"nodeType":"705","messageId":"706","endLine":126,"endColumn":18},{"ruleId":"710","severity":1,"message":"711","line":5,"column":1,"nodeType":"712","endLine":53,"endColumn":3},{"ruleId":"710","severity":1,"message":"711","line":10,"column":1,"nodeType":"712","endLine":42,"endColumn":3},{"ruleId":"710","severity":1,"message":"711","line":8,"column":1,"nodeType":"712","endLine":29,"endColumn":3},{"ruleId":"710","severity":1,"message":"711","line":15,"column":1,"nodeType":"712","endLine":220,"endColumn":3},{"ruleId":"703","severity":1,"message":"714","line":99,"column":13,"nodeType":"705","messageId":"706","endLine":99,"endColumn":24},{"ruleId":"703","severity":1,"message":"715","line":189,"column":15,"nodeType":"705","messageId":"706","endLine":189,"endColumn":26},{"ruleId":"710","severity":1,"message":"711","line":27,"column":1,"nodeType":"712","endLine":149,"endColumn":3},{"ruleId":"703","severity":1,"message":"716","line":57,"column":15,"nodeType":"705","messageId":"706","endLine":57,"endColumn":20},{"ruleId":"703","severity":1,"message":"716","line":88,"column":15,"nodeType":"705","messageId":"706","endLine":88,"endColumn":20},{"ruleId":"703","severity":1,"message":"713","line":98,"column":15,"nodeType":"705","messageId":"706","endLine":98,"endColumn":18},{"ruleId":"703","severity":1,"message":"713","line":107,"column":15,"nodeType":"705","messageId":"706","endLine":107,"endColumn":18},{"ruleId":"703","severity":1,"message":"717","line":61,"column":11,"nodeType":"705","messageId":"706","endLine":61,"endColumn":23},{"ruleId":"703","severity":1,"message":"718","line":61,"column":25,"nodeType":"705","messageId":"706","endLine":61,"endColumn":38},{"ruleId":"703","severity":1,"message":"719","line":7,"column":11,"nodeType":"705","messageId":"706","endLine":7,"endColumn":18},{"ruleId":"703","severity":1,"message":"720","line":6,"column":8,"nodeType":"705","messageId":"706","endLine":6,"endColumn":20},{"ruleId":"703","severity":1,"message":"721","line":10,"column":10,"nodeType":"705","messageId":"706","endLine":10,"endColumn":16},{"ruleId":"703","severity":1,"message":"719","line":16,"column":42,"nodeType":"705","messageId":"706","endLine":16,"endColumn":49},{"ruleId":"703","severity":1,"message":"722","line":55,"column":11,"nodeType":"705","messageId":"706","endLine":55,"endColumn":22},{"ruleId":"703","severity":1,"message":"723","line":55,"column":24,"nodeType":"705","messageId":"706","endLine":55,"endColumn":36},{"ruleId":"703","severity":1,"message":"724","line":84,"column":11,"nodeType":"705","messageId":"706","endLine":84,"endColumn":27},{"ruleId":"703","severity":1,"message":"725","line":84,"column":29,"nodeType":"705","messageId":"706","endLine":84,"endColumn":46},{"ruleId":"703","severity":1,"message":"726","line":4,"column":8,"nodeType":"705","messageId":"706","endLine":4,"endColumn":10},{"ruleId":"703","severity":1,"message":"727","line":52,"column":11,"nodeType":"705","messageId":"706","endLine":52,"endColumn":28},{"ruleId":"703","severity":1,"message":"728","line":18,"column":11,"nodeType":"705","messageId":"706","endLine":18,"endColumn":18},{"ruleId":"703","severity":1,"message":"729","line":5,"column":7,"nodeType":"705","messageId":"706","endLine":5,"endColumn":19},{"ruleId":"703","severity":1,"message":"730","line":3,"column":17,"nodeType":"705","messageId":"706","endLine":3,"endColumn":25},{"ruleId":"703","severity":1,"message":"731","line":17,"column":17,"nodeType":"705","messageId":"706","endLine":17,"endColumn":26},{"ruleId":"703","severity":1,"message":"732","line":17,"column":28,"nodeType":"705","messageId":"706","endLine":17,"endColumn":33},{"ruleId":"733","severity":1,"message":"734","line":61,"column":24,"nodeType":"735","messageId":"736","endLine":61,"endColumn":55},{"ruleId":"703","severity":1,"message":"737","line":61,"column":24,"nodeType":"705","messageId":"706","endLine":61,"endColumn":30},{"ruleId":"703","severity":1,"message":"738","line":10,"column":10,"nodeType":"705","messageId":"706","endLine":10,"endColumn":14},{"ruleId":"703","severity":1,"message":"739","line":11,"column":10,"nodeType":"705","messageId":"706","endLine":11,"endColumn":16},{"ruleId":"740","severity":1,"message":"741","line":37,"column":6,"nodeType":"742","endLine":37,"endColumn":8,"suggestions":"743"},{"ruleId":"703","severity":1,"message":"744","line":39,"column":7,"nodeType":"705","messageId":"706","endLine":39,"endColumn":15},{"ruleId":"703","severity":1,"message":"745","line":42,"column":13,"nodeType":"705","messageId":"706","endLine":42,"endColumn":19},{"ruleId":"703","severity":1,"message":"738","line":10,"column":10,"nodeType":"705","messageId":"706","endLine":10,"endColumn":14},{"ruleId":"703","severity":1,"message":"746","line":20,"column":24,"nodeType":"705","messageId":"706","endLine":20,"endColumn":34},{"ruleId":"740","severity":1,"message":"747","line":44,"column":6,"nodeType":"742","endLine":44,"endColumn":8,"suggestions":"748"},{"ruleId":"703","severity":1,"message":"744","line":46,"column":7,"nodeType":"705","messageId":"706","endLine":46,"endColumn":15},{"ruleId":"703","severity":1,"message":"745","line":49,"column":13,"nodeType":"705","messageId":"706","endLine":49,"endColumn":19},{"ruleId":"703","severity":1,"message":"739","line":11,"column":10,"nodeType":"705","messageId":"706","endLine":11,"endColumn":16},{"ruleId":"740","severity":1,"message":"749","line":62,"column":6,"nodeType":"742","endLine":62,"endColumn":8,"suggestions":"750"},{"ruleId":"703","severity":1,"message":"744","line":64,"column":7,"nodeType":"705","messageId":"706","endLine":64,"endColumn":15},{"ruleId":"703","severity":1,"message":"751","line":1,"column":10,"nodeType":"705","messageId":"706","endLine":1,"endColumn":17},{"ruleId":"703","severity":1,"message":"752","line":3,"column":8,"nodeType":"705","messageId":"706","endLine":3,"endColumn":19},{"ruleId":"753","severity":1,"message":"754","line":10,"column":10,"nodeType":"755","endLine":10,"endColumn":58},{"ruleId":"740","severity":1,"message":"756","line":37,"column":6,"nodeType":"742","endLine":37,"endColumn":8,"suggestions":"757"},{"ruleId":"703","severity":1,"message":"744","line":39,"column":7,"nodeType":"705","messageId":"706","endLine":39,"endColumn":15},{"ruleId":"703","severity":1,"message":"752","line":9,"column":8,"nodeType":"705","messageId":"706","endLine":9,"endColumn":19},{"ruleId":"753","severity":1,"message":"754","line":63,"column":11,"nodeType":"755","endLine":68,"endColumn":12},{"ruleId":"703","severity":1,"message":"758","line":3,"column":8,"nodeType":"705","messageId":"706","endLine":3,"endColumn":16},{"ruleId":"703","severity":1,"message":"759","line":11,"column":10,"nodeType":"705","messageId":"706","endLine":11,"endColumn":20},{"ruleId":"703","severity":1,"message":"760","line":13,"column":3,"nodeType":"705","messageId":"706","endLine":13,"endColumn":17},{"ruleId":"703","severity":1,"message":"761","line":14,"column":3,"nodeType":"705","messageId":"706","endLine":14,"endColumn":22},{"ruleId":"703","severity":1,"message":"762","line":16,"column":21,"nodeType":"705","messageId":"706","endLine":16,"endColumn":25},{"ruleId":"703","severity":1,"message":"763","line":16,"column":27,"nodeType":"705","messageId":"706","endLine":16,"endColumn":40},{"ruleId":"703","severity":1,"message":"746","line":18,"column":24,"nodeType":"705","messageId":"706","endLine":18,"endColumn":34},{"ruleId":"703","severity":1,"message":"764","line":19,"column":10,"nodeType":"705","messageId":"706","endLine":19,"endColumn":21},{"ruleId":"740","severity":1,"message":"765","line":46,"column":6,"nodeType":"742","endLine":46,"endColumn":8,"suggestions":"766"},{"ruleId":"703","severity":1,"message":"744","line":48,"column":7,"nodeType":"705","messageId":"706","endLine":48,"endColumn":15},{"ruleId":"703","severity":1,"message":"767","line":2,"column":10,"nodeType":"705","messageId":"706","endLine":2,"endColumn":23},{"ruleId":"768","severity":1,"message":"769","line":35,"column":40,"nodeType":"770","messageId":"771","endLine":35,"endColumn":41,"suggestions":"772"},{"ruleId":"768","severity":1,"message":"773","line":35,"column":57,"nodeType":"770","messageId":"771","endLine":35,"endColumn":58,"suggestions":"774"},{"ruleId":"703","severity":1,"message":"775","line":67,"column":7,"nodeType":"705","messageId":"706","endLine":67,"endColumn":13},{"ruleId":"703","severity":1,"message":"776","line":7,"column":10,"nodeType":"705","messageId":"706","endLine":7,"endColumn":15},{"ruleId":"703","severity":1,"message":"746","line":15,"column":24,"nodeType":"705","messageId":"706","endLine":15,"endColumn":34},{"ruleId":"703","severity":1,"message":"764","line":16,"column":10,"nodeType":"705","messageId":"706","endLine":16,"endColumn":21},{"ruleId":"740","severity":1,"message":"777","line":34,"column":6,"nodeType":"742","endLine":34,"endColumn":8,"suggestions":"778"},{"ruleId":"703","severity":1,"message":"744","line":36,"column":7,"nodeType":"705","messageId":"706","endLine":36,"endColumn":15},{"ruleId":"703","severity":1,"message":"779","line":38,"column":9,"nodeType":"705","messageId":"706","endLine":38,"endColumn":21},{"ruleId":"703","severity":1,"message":"745","line":39,"column":13,"nodeType":"705","messageId":"706","endLine":39,"endColumn":19},{"ruleId":"703","severity":1,"message":"780","line":10,"column":10,"nodeType":"705","messageId":"706","endLine":10,"endColumn":18},{"ruleId":"733","severity":1,"message":"734","line":60,"column":20,"nodeType":"735","messageId":"736","endLine":60,"endColumn":54},{"ruleId":"733","severity":1,"message":"734","line":77,"column":20,"nodeType":"735","messageId":"736","endLine":77,"endColumn":54},{"ruleId":"703","severity":1,"message":"737","line":77,"column":20,"nodeType":"705","messageId":"706","endLine":77,"endColumn":26},{"ruleId":"740","severity":1,"message":"781","line":38,"column":6,"nodeType":"742","endLine":38,"endColumn":8,"suggestions":"782"},{"ruleId":"703","severity":1,"message":"744","line":40,"column":7,"nodeType":"705","messageId":"706","endLine":40,"endColumn":15},{"ruleId":"783","severity":1,"message":"784","line":105,"column":19,"nodeType":"785","messageId":"786","endLine":105,"endColumn":34},{"ruleId":"703","severity":1,"message":"746","line":17,"column":24,"nodeType":"705","messageId":"706","endLine":17,"endColumn":34},{"ruleId":"740","severity":1,"message":"787","line":38,"column":6,"nodeType":"742","endLine":38,"endColumn":8,"suggestions":"788"},{"ruleId":"703","severity":1,"message":"744","line":40,"column":7,"nodeType":"705","messageId":"706","endLine":40,"endColumn":15},{"ruleId":"703","severity":1,"message":"745","line":43,"column":13,"nodeType":"705","messageId":"706","endLine":43,"endColumn":19},{"ruleId":"703","severity":1,"message":"789","line":1,"column":8,"nodeType":"705","messageId":"706","endLine":1,"endColumn":13},{"ruleId":"703","severity":1,"message":"790","line":4,"column":10,"nodeType":"705","messageId":"706","endLine":4,"endColumn":15},{"ruleId":"703","severity":1,"message":"791","line":4,"column":10,"nodeType":"705","messageId":"706","endLine":4,"endColumn":16},{"ruleId":"703","severity":1,"message":"792","line":4,"column":27,"nodeType":"705","messageId":"706","endLine":4,"endColumn":41},{"ruleId":"703","severity":1,"message":"793","line":1,"column":18,"nodeType":"705","messageId":"706","endLine":1,"endColumn":21},{"ruleId":"703","severity":1,"message":"794","line":134,"column":9,"nodeType":"705","messageId":"706","endLine":134,"endColumn":13},{"ruleId":"703","severity":1,"message":"719","line":7,"column":11,"nodeType":"705","messageId":"706","endLine":7,"endColumn":18},{"ruleId":"703","severity":1,"message":"795","line":1,"column":17,"nodeType":"705","messageId":"706","endLine":1,"endColumn":25},{"ruleId":"703","severity":1,"message":"792","line":3,"column":10,"nodeType":"705","messageId":"706","endLine":3,"endColumn":24},{"ruleId":"740","severity":1,"message":"796","line":87,"column":6,"nodeType":"742","endLine":87,"endColumn":8,"suggestions":"797"},{"ruleId":"703","severity":1,"message":"738","line":6,"column":10,"nodeType":"705","messageId":"706","endLine":6,"endColumn":14},{"ruleId":"703","severity":1,"message":"744","line":24,"column":7,"nodeType":"705","messageId":"706","endLine":24,"endColumn":15},{"ruleId":"733","severity":1,"message":"734","line":64,"column":21,"nodeType":"735","messageId":"736","endLine":64,"endColumn":51},{"ruleId":"733","severity":1,"message":"734","line":83,"column":18,"nodeType":"735","messageId":"736","endLine":83,"endColumn":54},{"ruleId":"733","severity":1,"message":"734","line":100,"column":18,"nodeType":"735","messageId":"736","endLine":100,"endColumn":52},{"ruleId":"733","severity":1,"message":"734","line":116,"column":18,"nodeType":"735","messageId":"736","endLine":116,"endColumn":54},{"ruleId":"703","severity":1,"message":"737","line":116,"column":18,"nodeType":"705","messageId":"706","endLine":116,"endColumn":24},{"ruleId":"703","severity":1,"message":"795","line":1,"column":17,"nodeType":"705","messageId":"706","endLine":1,"endColumn":25},{"ruleId":"703","severity":1,"message":"798","line":6,"column":3,"nodeType":"705","messageId":"706","endLine":6,"endColumn":12},{"ruleId":"703","severity":1,"message":"799","line":7,"column":3,"nodeType":"705","messageId":"706","endLine":7,"endColumn":15},{"ruleId":"703","severity":1,"message":"738","line":11,"column":10,"nodeType":"705","messageId":"706","endLine":11,"endColumn":14},{"ruleId":"703","severity":1,"message":"744","line":26,"column":7,"nodeType":"705","messageId":"706","endLine":26,"endColumn":15},{"ruleId":"740","severity":1,"message":"800","line":30,"column":6,"nodeType":"742","endLine":30,"endColumn":8,"suggestions":"801"},{"ruleId":"768","severity":1,"message":"769","line":66,"column":40,"nodeType":"770","messageId":"771","endLine":66,"endColumn":41,"suggestions":"802"},{"ruleId":"768","severity":1,"message":"773","line":66,"column":57,"nodeType":"770","messageId":"771","endLine":66,"endColumn":58,"suggestions":"803"},{"ruleId":"733","severity":1,"message":"734","line":119,"column":18,"nodeType":"735","messageId":"736","endLine":119,"endColumn":53},{"ruleId":"733","severity":1,"message":"734","line":135,"column":18,"nodeType":"735","messageId":"736","endLine":135,"endColumn":52},{"ruleId":"733","severity":1,"message":"734","line":151,"column":18,"nodeType":"735","messageId":"736","endLine":151,"endColumn":54},{"ruleId":"733","severity":1,"message":"734","line":167,"column":18,"nodeType":"735","messageId":"736","endLine":167,"endColumn":49},{"ruleId":"733","severity":1,"message":"734","line":181,"column":18,"nodeType":"735","messageId":"736","endLine":181,"endColumn":49},{"ruleId":"733","severity":1,"message":"734","line":197,"column":18,"nodeType":"735","messageId":"736","endLine":197,"endColumn":48},{"ruleId":"703","severity":1,"message":"737","line":197,"column":18,"nodeType":"705","messageId":"706","endLine":197,"endColumn":24},{"ruleId":"703","severity":1,"message":"804","line":21,"column":17,"nodeType":"705","messageId":"706","endLine":21,"endColumn":32},{"ruleId":"703","severity":1,"message":"744","line":28,"column":7,"nodeType":"705","messageId":"706","endLine":28,"endColumn":15},{"ruleId":"740","severity":1,"message":"805","line":61,"column":6,"nodeType":"742","endLine":61,"endColumn":8,"suggestions":"806"},{"ruleId":"703","severity":1,"message":"807","line":68,"column":13,"nodeType":"705","messageId":"706","endLine":68,"endColumn":17},{"ruleId":"703","severity":1,"message":"808","line":96,"column":9,"nodeType":"705","messageId":"706","endLine":96,"endColumn":25},{"ruleId":"733","severity":1,"message":"734","line":140,"column":18,"nodeType":"735","messageId":"736","endLine":140,"endColumn":49},{"ruleId":"733","severity":1,"message":"734","line":158,"column":18,"nodeType":"735","messageId":"736","endLine":158,"endColumn":60},{"ruleId":"733","severity":1,"message":"734","line":175,"column":18,"nodeType":"735","messageId":"736","endLine":175,"endColumn":49},{"ruleId":"733","severity":1,"message":"734","line":225,"column":18,"nodeType":"735","messageId":"736","endLine":225,"endColumn":60},{"ruleId":"703","severity":1,"message":"737","line":225,"column":18,"nodeType":"705","messageId":"706","endLine":225,"endColumn":24},{"ruleId":"703","severity":1,"message":"809","line":22,"column":27,"nodeType":"705","messageId":"706","endLine":22,"endColumn":35},{"ruleId":"703","severity":1,"message":"744","line":30,"column":7,"nodeType":"705","messageId":"706","endLine":30,"endColumn":15},{"ruleId":"768","severity":1,"message":"769","line":80,"column":40,"nodeType":"770","messageId":"771","endLine":80,"endColumn":41,"suggestions":"810"},{"ruleId":"768","severity":1,"message":"773","line":80,"column":57,"nodeType":"770","messageId":"771","endLine":80,"endColumn":58,"suggestions":"811"},{"ruleId":"740","severity":1,"message":"812","line":97,"column":6,"nodeType":"742","endLine":97,"endColumn":8,"suggestions":"813"},{"ruleId":"733","severity":1,"message":"734","line":172,"column":16,"nodeType":"735","messageId":"736","endLine":172,"endColumn":51},{"ruleId":"733","severity":1,"message":"734","line":199,"column":16,"nodeType":"735","messageId":"736","endLine":199,"endColumn":50},{"ruleId":"733","severity":1,"message":"734","line":216,"column":16,"nodeType":"735","messageId":"736","endLine":216,"endColumn":47},{"ruleId":"733","severity":1,"message":"734","line":230,"column":16,"nodeType":"735","messageId":"736","endLine":230,"endColumn":47},{"ruleId":"733","severity":1,"message":"734","line":246,"column":16,"nodeType":"735","messageId":"736","endLine":246,"endColumn":45},{"ruleId":"733","severity":1,"message":"734","line":266,"column":16,"nodeType":"735","messageId":"736","endLine":266,"endColumn":55},{"ruleId":"733","severity":1,"message":"734","line":283,"column":16,"nodeType":"735","messageId":"736","endLine":283,"endColumn":53},{"ruleId":"733","severity":1,"message":"734","line":301,"column":16,"nodeType":"735","messageId":"736","endLine":301,"endColumn":58},{"ruleId":"733","severity":1,"message":"734","line":320,"column":16,"nodeType":"735","messageId":"736","endLine":320,"endColumn":56},{"ruleId":"703","severity":1,"message":"737","line":320,"column":16,"nodeType":"705","messageId":"706","endLine":320,"endColumn":22},{"ruleId":"703","severity":1,"message":"809","line":21,"column":28,"nodeType":"705","messageId":"706","endLine":21,"endColumn":36},{"ruleId":"703","severity":1,"message":"744","line":22,"column":7,"nodeType":"705","messageId":"706","endLine":22,"endColumn":15},{"ruleId":"703","severity":1,"message":"775","line":71,"column":7,"nodeType":"705","messageId":"706","endLine":71,"endColumn":13},{"ruleId":"703","severity":1,"message":"789","line":1,"column":8,"nodeType":"705","messageId":"706","endLine":1,"endColumn":13},{"ruleId":"703","severity":1,"message":"790","line":5,"column":10,"nodeType":"705","messageId":"706","endLine":5,"endColumn":15},{"ruleId":"703","severity":1,"message":"814","line":66,"column":5,"nodeType":"705","messageId":"706","endLine":66,"endColumn":15},{"ruleId":"699","replacedBy":"815"},{"ruleId":"701","replacedBy":"816"},{"ruleId":"703","severity":1,"message":"817","line":183,"column":26,"nodeType":"705","messageId":"706","endLine":183,"endColumn":33},{"ruleId":"703","severity":1,"message":"818","line":6,"column":7,"nodeType":"705","messageId":"706","endLine":6,"endColumn":17},{"ruleId":"703","severity":1,"message":"738","line":10,"column":10,"nodeType":"705","messageId":"706","endLine":10,"endColumn":14},{"ruleId":"703","severity":1,"message":"739","line":11,"column":10,"nodeType":"705","messageId":"706","endLine":11,"endColumn":16},{"ruleId":"740","severity":1,"message":"819","line":45,"column":6,"nodeType":"742","endLine":45,"endColumn":8,"suggestions":"820"},{"ruleId":"703","severity":1,"message":"744","line":47,"column":7,"nodeType":"705","messageId":"706","endLine":47,"endColumn":15},{"ruleId":"703","severity":1,"message":"738","line":10,"column":10,"nodeType":"705","messageId":"706","endLine":10,"endColumn":14},{"ruleId":"703","severity":1,"message":"739","line":11,"column":10,"nodeType":"705","messageId":"706","endLine":11,"endColumn":16},{"ruleId":"740","severity":1,"message":"821","line":48,"column":6,"nodeType":"742","endLine":48,"endColumn":8,"suggestions":"822"},{"ruleId":"703","severity":1,"message":"744","line":50,"column":7,"nodeType":"705","messageId":"706","endLine":50,"endColumn":15},{"ruleId":"703","severity":1,"message":"823","line":5,"column":10,"nodeType":"705","messageId":"706","endLine":5,"endColumn":14},{"ruleId":"703","severity":1,"message":"744","line":27,"column":7,"nodeType":"705","messageId":"706","endLine":27,"endColumn":15},{"ruleId":"733","severity":1,"message":"734","line":131,"column":16,"nodeType":"735","messageId":"736","endLine":131,"endColumn":58},{"ruleId":"703","severity":1,"message":"737","line":131,"column":16,"nodeType":"705","messageId":"706","endLine":131,"endColumn":22},{"ruleId":"703","severity":1,"message":"823","line":5,"column":10,"nodeType":"705","messageId":"706","endLine":5,"endColumn":14},{"ruleId":"703","severity":1,"message":"744","line":32,"column":7,"nodeType":"705","messageId":"706","endLine":32,"endColumn":15},{"ruleId":"733","severity":1,"message":"734","line":129,"column":16,"nodeType":"735","messageId":"736","endLine":129,"endColumn":56},{"ruleId":"703","severity":1,"message":"737","line":129,"column":16,"nodeType":"705","messageId":"706","endLine":129,"endColumn":22},{"ruleId":"703","severity":1,"message":"824","line":2,"column":8,"nodeType":"705","messageId":"706","endLine":2,"endColumn":14},{"ruleId":"703","severity":1,"message":"752","line":9,"column":8,"nodeType":"705","messageId":"706","endLine":9,"endColumn":19},{"ruleId":"703","severity":1,"message":"825","line":12,"column":8,"nodeType":"705","messageId":"706","endLine":12,"endColumn":18},{"ruleId":"740","severity":1,"message":"826","line":27,"column":6,"nodeType":"742","endLine":27,"endColumn":8,"suggestions":"827"},{"ruleId":"703","severity":1,"message":"744","line":27,"column":7,"nodeType":"705","messageId":"706","endLine":27,"endColumn":15},{"ruleId":"703","severity":1,"message":"828","line":59,"column":11,"nodeType":"705","messageId":"706","endLine":59,"endColumn":39},{"ruleId":"733","severity":1,"message":"734","line":160,"column":18,"nodeType":"735","messageId":"736","endLine":160,"endColumn":54},{"ruleId":"733","severity":1,"message":"734","line":178,"column":18,"nodeType":"735","messageId":"736","endLine":178,"endColumn":52},{"ruleId":"733","severity":1,"message":"734","line":195,"column":18,"nodeType":"735","messageId":"736","endLine":195,"endColumn":53},{"ruleId":"733","severity":1,"message":"734","line":211,"column":18,"nodeType":"735","messageId":"736","endLine":211,"endColumn":52},{"ruleId":"733","severity":1,"message":"734","line":228,"column":18,"nodeType":"735","messageId":"736","endLine":228,"endColumn":53},{"ruleId":"733","severity":1,"message":"734","line":244,"column":18,"nodeType":"735","messageId":"736","endLine":244,"endColumn":51},{"ruleId":"733","severity":1,"message":"734","line":261,"column":18,"nodeType":"735","messageId":"736","endLine":261,"endColumn":54},{"ruleId":"733","severity":1,"message":"734","line":279,"column":18,"nodeType":"735","messageId":"736","endLine":279,"endColumn":52},{"ruleId":"733","severity":1,"message":"734","line":296,"column":16,"nodeType":"735","messageId":"736","endLine":296,"endColumn":52},{"ruleId":"733","severity":1,"message":"734","line":313,"column":16,"nodeType":"735","messageId":"736","endLine":313,"endColumn":53},{"ruleId":"703","severity":1,"message":"737","line":313,"column":16,"nodeType":"705","messageId":"706","endLine":313,"endColumn":22},{"ruleId":"740","severity":1,"message":"829","line":24,"column":6,"nodeType":"742","endLine":24,"endColumn":8,"suggestions":"830"},{"ruleId":"703","severity":1,"message":"744","line":26,"column":7,"nodeType":"705","messageId":"706","endLine":26,"endColumn":15},{"ruleId":"740","severity":1,"message":"831","line":23,"column":6,"nodeType":"742","endLine":23,"endColumn":8,"suggestions":"832"},{"ruleId":"703","severity":1,"message":"744","line":25,"column":7,"nodeType":"705","messageId":"706","endLine":25,"endColumn":15},{"ruleId":"703","severity":1,"message":"833","line":5,"column":11,"nodeType":"705","messageId":"706","endLine":5,"endColumn":17},{"ruleId":"703","severity":1,"message":"834","line":10,"column":9,"nodeType":"705","messageId":"706","endLine":10,"endColumn":21},{"ruleId":"753","severity":1,"message":"754","line":15,"column":10,"nodeType":"755","endLine":15,"endColumn":58},{"ruleId":"703","severity":1,"message":"744","line":22,"column":7,"nodeType":"705","messageId":"706","endLine":22,"endColumn":15},{"ruleId":"703","severity":1,"message":"835","line":28,"column":5,"nodeType":"705","messageId":"706","endLine":28,"endColumn":20},{"ruleId":"703","severity":1,"message":"836","line":39,"column":5,"nodeType":"705","messageId":"706","endLine":39,"endColumn":18},{"ruleId":"703","severity":1,"message":"837","line":44,"column":10,"nodeType":"705","messageId":"706","endLine":44,"endColumn":14},{"ruleId":"703","severity":1,"message":"838","line":44,"column":16,"nodeType":"705","messageId":"706","endLine":44,"endColumn":23},{"ruleId":"703","severity":1,"message":"839","line":127,"column":9,"nodeType":"705","messageId":"706","endLine":127,"endColumn":16},{"ruleId":"740","severity":1,"message":"840","line":135,"column":6,"nodeType":"742","endLine":135,"endColumn":8,"suggestions":"841"},{"ruleId":"733","severity":1,"message":"734","line":218,"column":16,"nodeType":"735","messageId":"736","endLine":218,"endColumn":51},{"ruleId":"733","severity":1,"message":"734","line":243,"column":16,"nodeType":"735","messageId":"736","endLine":243,"endColumn":50},{"ruleId":"733","severity":1,"message":"734","line":259,"column":16,"nodeType":"735","messageId":"736","endLine":259,"endColumn":47},{"ruleId":"733","severity":1,"message":"734","line":272,"column":16,"nodeType":"735","messageId":"736","endLine":272,"endColumn":47},{"ruleId":"733","severity":1,"message":"734","line":287,"column":16,"nodeType":"735","messageId":"736","endLine":287,"endColumn":45},{"ruleId":"733","severity":1,"message":"734","line":306,"column":16,"nodeType":"735","messageId":"736","endLine":306,"endColumn":55},{"ruleId":"733","severity":1,"message":"734","line":322,"column":16,"nodeType":"735","messageId":"736","endLine":322,"endColumn":53},{"ruleId":"733","severity":1,"message":"734","line":339,"column":16,"nodeType":"735","messageId":"736","endLine":339,"endColumn":58},{"ruleId":"733","severity":1,"message":"734","line":355,"column":16,"nodeType":"735","messageId":"736","endLine":355,"endColumn":56},{"ruleId":"703","severity":1,"message":"737","line":355,"column":16,"nodeType":"705","messageId":"706","endLine":355,"endColumn":22},"no-native-reassign",["842"],"no-negated-in-lhs",["843"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'PrivateRoute' is assigned a value but never used.","'axios' is defined but never used.","'postLogOut' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'raw' is assigned a value but never used.","'sample_data' is assigned a value but never used.","'closed_data' is assigned a value but never used.","'total' is assigned a value but never used.","'archivedList' is assigned a value but never used.","'archivedTotal' is assigned a value but never used.","'loading' is assigned a value but never used.","'HeaderLayout' is defined but never used.","'Loader' is defined but never used.","'entriesList' is assigned a value but never used.","'entriesTotal' is assigned a value but never used.","'applicationsList' is assigned a value but never used.","'applicationsTotal' is assigned a value but never used.","'qs' is defined but never used.","'applicationDetail' is assigned a value but never used.","'regForm' is assigned a value but never used.","'StyledLoader' is assigned a value but never used.","'Checkbox' is defined but never used.","'isLoading' is assigned a value but never used.","'login' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'errors' is assigned a value but never used.","'Text' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllEntries'. Either include it or remove the dependency array.","ArrayExpression",["844"],"'viewMode' is assigned a value but never used.","'record' is assigned a value but never used.","'formatDate' is defined but never used.","React Hook useEffect has missing dependencies: 'accessList', 'getAllUsers', and 'redirect'. Either include them or remove the dependency array.",["845"],"React Hook useEffect has missing dependencies: 'accessList', 'getAllParcels', and 'redirect'. Either include them or remove the dependency array.",["846"],"'lighten' is defined but never used.","'PARCEL_VIEW' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'accessList', 'getAllRoles', and 'redirect'. Either include them or remove the dependency array.",["847"],"'Dropdown' is defined but never used.","'EmptyState' is defined but never used.","'TableComponent' is defined but never used.","'PaginationComponent' is defined but never used.","'Icon' is defined but never used.","'StyledDrpDown' is defined but never used.","'pageOptions' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllPermissions'. Either include it or remove the dependency array.",["848"],"'storagePrefix' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["849","850"],"Unnecessary escape character: \\/.",["851","852"],"'errors' is defined but never used.","'Input' is defined but never used.","React Hook useEffect has missing dependencies: 'getApplicationDetail' and 'params.id'. Either include them or remove the dependency array.",["853"],"'DropDownMenu' is assigned a value but never used.","'endpoint' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllApplications'. Either include it or remove the dependency array.",["854"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","React Hook useEffect has a missing dependency: 'getAllArchived'. Either include it or remove the dependency array.",["855"],"'React' is defined but never used.","'Theme' is defined but never used.","'darken' is defined but never used.","'transparentize' is defined but never used.","'utc' is defined but never used.","'year' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'setCollaspe', 'setFloat', and 'viewMode'. Either include them or remove the dependency array.",["856"],"'InputDate' is defined but never used.","'SimpleSelect' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllRoles'. Either include it or remove the dependency array.",["857"],["858","859"],["860","861"],"'createAppraisal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAppraisalType'. Either include it or remove the dependency array.",["862"],"'data' is assigned a value but never used.","'handleSecondType' is assigned a value but never used.","'redirect' is assigned a value but never used.",["863","864"],["865","866"],"React Hook useEffect has a missing dependency: 'fetchStates'. Either include it or remove the dependency array.",["867"],"'fullScreen' is assigned a value but never used.",["842"],["843"],"'btnLeft' is assigned a value but never used.","'sampleData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllRectification'. Either include it or remove the dependency array.",["868"],"React Hook useEffect has a missing dependency: 'getAllEncumbrance'. Either include it or remove the dependency array.",["869"],"'Grid' is defined but never used.","'moment' is defined but never used.","'ARROW_ICON' is defined but never used.","React Hook useEffect has missing dependencies: 'getSingleParcel' and 'params.id'. Either include them or remove the dependency array.",["870"],"'payload_create_rectification' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'entryData' and 'getRectificationDetail'. Either include them or remove the dependency array.",["871"],"React Hook useEffect has missing dependencies: 'entryData' and 'getEncumbranceDetail'. Either include them or remove the dependency array.",["872"],"'search' is assigned a value but never used.","'getLocalData' is assigned a value but never used.","'isLoadingStates' is assigned a value but never used.","'getFieldValue' is assigned a value but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'onEnter' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchStates' and 'getAllRequirements'. Either include them or remove the dependency array.",["873"],"no-global-assign","no-unsafe-negation",{"desc":"874","fix":"875"},{"desc":"876","fix":"877"},{"desc":"878","fix":"879"},{"desc":"880","fix":"881"},{"desc":"882","fix":"883"},{"messageId":"884","fix":"885","desc":"886"},{"messageId":"887","fix":"888","desc":"889"},{"messageId":"884","fix":"890","desc":"886"},{"messageId":"887","fix":"891","desc":"889"},{"desc":"892","fix":"893"},{"desc":"894","fix":"895"},{"desc":"896","fix":"897"},{"desc":"898","fix":"899"},{"desc":"900","fix":"901"},{"messageId":"884","fix":"902","desc":"886"},{"messageId":"887","fix":"903","desc":"889"},{"messageId":"884","fix":"904","desc":"886"},{"messageId":"887","fix":"905","desc":"889"},{"desc":"906","fix":"907"},{"messageId":"884","fix":"908","desc":"886"},{"messageId":"887","fix":"909","desc":"889"},{"messageId":"884","fix":"910","desc":"886"},{"messageId":"887","fix":"911","desc":"889"},{"desc":"912","fix":"913"},{"desc":"914","fix":"915"},{"desc":"916","fix":"917"},{"desc":"918","fix":"919"},{"desc":"920","fix":"921"},{"desc":"922","fix":"923"},{"desc":"924","fix":"925"},"Update the dependencies array to be: [getAllEntries]",{"range":"926","text":"927"},"Update the dependencies array to be: [accessList, getAllUsers, redirect]",{"range":"928","text":"929"},"Update the dependencies array to be: [accessList, getAllParcels, redirect]",{"range":"930","text":"931"},"Update the dependencies array to be: [accessList, getAllRoles, redirect]",{"range":"932","text":"933"},"Update the dependencies array to be: [getAllPermissions]",{"range":"934","text":"935"},"removeEscape",{"range":"936","text":"937"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"938","text":"939"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"940","text":"937"},{"range":"941","text":"939"},"Update the dependencies array to be: [getApplicationDetail, params.id]",{"range":"942","text":"943"},"Update the dependencies array to be: [getAllApplications]",{"range":"944","text":"945"},"Update the dependencies array to be: [getAllArchived]",{"range":"946","text":"947"},"Update the dependencies array to be: [setCollaspe, setFloat, viewMode]",{"range":"948","text":"949"},"Update the dependencies array to be: [getAllRoles]",{"range":"950","text":"951"},{"range":"952","text":"937"},{"range":"953","text":"939"},{"range":"954","text":"937"},{"range":"955","text":"939"},"Update the dependencies array to be: [fetchAppraisalType]",{"range":"956","text":"957"},{"range":"958","text":"937"},{"range":"959","text":"939"},{"range":"960","text":"937"},{"range":"961","text":"939"},"Update the dependencies array to be: [fetchStates]",{"range":"962","text":"963"},"Update the dependencies array to be: [getAllRectification]",{"range":"964","text":"965"},"Update the dependencies array to be: [getAllEncumbrance]",{"range":"966","text":"967"},"Update the dependencies array to be: [getSingleParcel, params.id]",{"range":"968","text":"969"},"Update the dependencies array to be: [entryData, getRectificationDetail]",{"range":"970","text":"971"},"Update the dependencies array to be: [entryData, getEncumbranceDetail]",{"range":"972","text":"973"},"Update the dependencies array to be: [fetchStates, getAllRequirements]",{"range":"974","text":"975"},[1185,1187],"[getAllEntries]",[1369,1371],"[accessList, getAllUsers, redirect]",[1657,1659],"[accessList, getAllParcels, redirect]",[1184,1186],"[accessList, getAllRoles, redirect]",[1576,1578],"[getAllPermissions]",[1196,1197],"",[1196,1196],"\\",[1213,1214],[1213,1213],[1225,1227],"[getApplicationDetail, params.id]",[1224,1226],"[getAllApplications]",[1332,1334],"[getAllArchived]",[2001,2003],"[setCollaspe, setFloat, viewMode]",[969,971],"[getAllRoles]",[1928,1929],[1928,1928],[1945,1946],[1945,1945],[2032,2034],"[fetchAppraisalType]",[2305,2306],[2305,2305],[2322,2323],[2322,2322],[2734,2736],"[fetchStates]",[1329,1331],"[getAllRectification]",[1469,1471],"[getAllEncumbrance]",[885,887],"[getSingleParcel, params.id]",[884,886],"[entryData, getRectificationDetail]",[874,876],"[entryData, getEncumbranceDetail]",[3906,3908],"[fetchStates, getAllRequirements]"]